/**
 * Module dependencies.
 */var start=require("./common"),Query=require("../lib/query"),mongoose=start.mongoose,DocumentObjectId=mongoose.Types.ObjectId,Schema=mongoose.Schema,assert=require("assert"),random=require("../lib/utils").random,Comment=new Schema({text:String}),Product=new Schema({tags:{},array:Array,ids:[Schema.ObjectId],strings:[String],numbers:[Number],comments:[Comment]});mongoose.model("Product",Product);mongoose.model("Comment",Comment);describe("Query",function(){describe("select",function(){it("(object)",function(){var e=new Query;e.select({a:1,b:1,c:0});assert.deepEqual(e._fields,{a:1,b:1,c:0})});it("(string)",function(){var e=new Query;e.select(" a  b -c ");assert.deepEqual(e._fields,{a:1,b:1,c:0})});it('("a","b","c")',function(){assert.throws(function(){var e=new Query;e.select("a","b","c")},/Invalid select/)});it('["a","b","c"]',function(){assert.throws(function(){var e=new Query;e.select(["a","b","c"])},/Invalid select/)});it("should not overwrite fields set in prior calls",function(){var e=new Query;e.select("a");assert.deepEqual(e._fields,{a:1});e.select("b");assert.deepEqual(e._fields,{a:1,b:1});e.select({c:0});assert.deepEqual(e._fields,{a:1,b:1,c:0});e.select("-d");assert.deepEqual(e._fields,{a:1,b:1,c:0,d:0})})});describe("where",function(){it("works",function(){var e=new Query;e.where("name","guillermo");assert.deepEqual(e._conditions,{name:"guillermo"});e.where("a");e.equals("b");assert.deepEqual(e._conditions,{name:"guillermo",a:"b"})});it("throws if non-string path is passed",function(){var e=new Query;assert.throws(function(){e.where({name:"aaron"})});assert.throws(function(){e.where(50)});assert.throws(function(){e.where([])})});it("does not throw when 0 args passed",function(){var e=new Query;assert.doesNotThrow(function(){e.where()})})});describe("equals",function(){it("works",function(){var e=new Query;e.where("name").equals("guillermo");assert.deepEqual(e._conditions,{name:"guillermo"})})});describe("gte",function(){it("with 2 args",function(){var e=new Query;e.gte("age",18);assert.deepEqual(e._conditions,{age:{$gte:18}})});it("with 1 arg",function(){var e=new Query;e.where("age").gte(18);assert.deepEqual(e._conditions,{age:{$gte:18}})})});describe("gt",function(){it("with 1 arg",function(){var e=new Query;e.where("age").gt(17);assert.deepEqual(e._conditions,{age:{$gt:17}})});it("with 2 args",function(){var e=new Query;e.gt("age",17);assert.deepEqual(e._conditions,{age:{$gt:17}})})});describe("lte",function(){it("with 1 arg",function(){var e=new Query;e.where("age").lte(65);assert.deepEqual(e._conditions,{age:{$lte:65}})});it("with 2 args",function(){var e=new Query;e.lte("age",65);assert.deepEqual(e._conditions,{age:{$lte:65}})})});describe("lt",function(){it("with 1 arg",function(){var e=new Query;e.where("age").lt(66);assert.deepEqual(e._conditions,{age:{$lt:66}})});it("with 2 args",function(){var e=new Query;e.lt("age",66);assert.deepEqual(e._conditions,{age:{$lt:66}})})});describe("combined",function(){describe("lt and gt",function(){var e=new Query;e.where("age").lt(66).gt(17);assert.deepEqual(e._conditions,{age:{$lt:66,$gt:17}})})});describe("tl on one path and gt on another",function(){it("works",function(){var e=new Query;e.where("age").lt(66).where("height").gt(5);assert.deepEqual(e._conditions,{age:{$lt:66},height:{$gt:5}})})});describe("ne",function(){it("with 1 arg",function(){var e=new Query;e.where("age").ne(21);assert.deepEqual(e._conditions,{age:{$ne:21}})});it("with 2 args",function(){var e=new Query;e.ne("age",21);assert.deepEqual(e._conditions,{age:{$ne:21}})})});describe("in",function(){it("with 1 arg",function(){var e=new Query;e.where("age").in([21,25,30]);assert.deepEqual(e._conditions,{age:{$in:[21,25,30]}})});it("with 2 args",function(){var e=new Query;e.in("age",[21,25,30]);assert.deepEqual(e._conditions,{age:{$in:[21,25,30]}})});it("where a non-array value no via where",function(){var e=new Query;e.in("age",21);assert.deepEqual(e._conditions,{age:{$in:21}})});it("where a non-array value via where",function(){var e=new Query;e.where("age").in(21);assert.deepEqual(e._conditions,{age:{$in:21}})})});describe("nin",function(){it("with 1 arg",function(){var e=new Query;e.where("age").nin([21,25,30]);assert.deepEqual(e._conditions,{age:{$nin:[21,25,30]}})});it("with 2 args",function(){var e=new Query;e.nin("age",[21,25,30]);assert.deepEqual(e._conditions,{age:{$nin:[21,25,30]}})});it("with a non-array value not via where",function(){var e=new Query;e.nin("age",21);assert.deepEqual(e._conditions,{age:{$nin:21}})});it("with a non-array value via where",function(){var e=new Query;e.where("age").nin(21);assert.deepEqual(e._conditions,{age:{$nin:21}})})});describe("mod",function(){it("not via where, where [a, b] param",function(){var e=new Query;e.mod("age",[5,2]);assert.deepEqual(e._conditions,{age:{$mod:[5,2]}})});it("not via where, where a and b params",function(){var e=new Query;e.mod("age",5,2);assert.deepEqual(e._conditions,{age:{$mod:[5,2]}})});it("via where, where [a, b] param",function(){var e=new Query;e.where("age").mod([5,2]);assert.deepEqual(e._conditions,{age:{$mod:[5,2]}})});it("via where, where a and b params",function(){var e=new Query;e.where("age").mod(5,2);assert.deepEqual(e._conditions,{age:{$mod:[5,2]}})})});describe("near",function(){it("via where, where [lat, long] param",function(){var e=new Query;e.where("checkin").near([40,-72]);assert.deepEqual(e._conditions,{checkin:{$near:[40,-72]}})});it("via where, where lat and long params",function(){var e=new Query;e.where("checkin").near(40,-72);assert.deepEqual(e._conditions,{checkin:{$near:[40,-72]}})});it("not via where, where [lat, long] param",function(){var e=new Query;e.near("checkin",[40,-72]);assert.deepEqual(e._conditions,{checkin:{$near:[40,-72]}})});it("not via where, where lat and long params",function(){var e=new Query;e.near("checkin",40,-72);assert.deepEqual(e._conditions,{checkin:{$near:[40,-72]}})})});describe("nearSphere",function(){it("via where, where [lat, long] param",function(){var e=new Query;e.where("checkin").nearSphere([40,-72]);assert.deepEqual(e._conditions,{checkin:{$nearSphere:[40,-72]}})});it("via where, where lat and long params",function(){var e=new Query;e.where("checkin").nearSphere(40,-72);assert.deepEqual(e._conditions,{checkin:{$nearSphere:[40,-72]}})});it("not via where, where [lat, long] param",function(){var e=new Query;e.nearSphere("checkin",[40,-72]);assert.deepEqual(e._conditions,{checkin:{$nearSphere:[40,-72]}})});it("not via where, where lat and long params",function(){var e=new Query;e.nearSphere("checkin",40,-72);assert.deepEqual(e._conditions,{checkin:{$nearSphere:[40,-72]}})})});describe("maxDistance",function(){it("via where",function(){var e=new Query;e.where("checkin").near([40,-72]).maxDistance(1);assert.deepEqual(e._conditions,{checkin:{$near:[40,-72],$maxDistance:1}})})});describe("within",function(){describe("box",function(){it("not via where",function(){var e=new Query;e.within.box("gps",{ll:[5,25],ur:[10,30]});assert.deepEqual(e._conditions,{gps:{$within:{$box:[[5,25],[10,30]]}}})});it("via where",function(){var e=new Query;e.where("gps").within.box({ll:[5,25],ur:[10,30]});assert.deepEqual(e._conditions,{gps:{$within:{$box:[[5,25],[10,30]]}}})})});describe("center",function(){it("not via where",function(){var e=new Query;e.within.center("gps",{center:[5,25],radius:5});assert.deepEqual(e._conditions,{gps:{$within:{$center:[[5,25],5]}}})});it("via where",function(){var e=new Query;e.where("gps").within.center({center:[5,25],radius:5});assert.deepEqual(e._conditions,{gps:{$within:{$center:[[5,25],5]}}})})});describe("centerSphere",function(){it("not via where",function(){var e=new Query;e.within.centerSphere("gps",{center:[5,25],radius:5});assert.deepEqual(e._conditions,{gps:{$within:{$centerSphere:[[5,25],5]}}})});it("via where",function(){var e=new Query;e.where("gps").within.centerSphere({center:[5,25],radius:5});assert.deepEqual(e._conditions,{gps:{$within:{$centerSphere:[[5,25],5]}}})})});describe("polygon",function(){it("not via where",function(){var e=new Query;e.within.polygon("gps",[[10,20],[10,40],[30,40],[30,20]]);assert.deepEqual(e._conditions,{gps:{$within:{$polygon:[[10,20],[10,40],[30,40],[30,20]]}}})});it("via where",function(){var e=new Query;e.where("gps").within.polygon({a:{x:10,y:20},b:{x:15,y:25},c:{x:20,y:20}});assert.deepEqual(e._conditions,{gps:{$within:{$polygon:{a:{x:10,y:20},b:{x:15,y:25},c:{x:20,y:20}}}}})})})});describe("exists",function(){it("0 args via where",function(){var e=new Query;e.where("username").exists();assert.deepEqual(e._conditions,{username:{$exists:!0}})});it("1 arg via where",function(){var e=new Query;e.where("username").exists(!1);assert.deepEqual(e._conditions,{username:{$exists:!1}})});it("where 1 argument not via where",function(){var e=new Query;e.exists("username");assert.deepEqual(e._conditions,{username:{$exists:!0}})});it("where 2 args not via where",function(){var e=new Query;e.exists("username",!1);assert.deepEqual(e._conditions,{username:{$exists:!1}})})});describe("all",function(){it("via where",function(){var e=new Query;e.where("pets").all(["dog","cat","ferret"]);assert.deepEqual(e._conditions,{pets:{$all:["dog","cat","ferret"]}})});it("not via where",function(){var e=new Query;e.all("pets",["dog","cat","ferret"]);assert.deepEqual(e._conditions,{pets:{$all:["dog","cat","ferret"]}})})});describe("find",function(){it("strict array equivalence condition v",function(){var e=new Query;e.find({pets:["dog","cat","ferret"]});assert.deepEqual(e._conditions,{pets:["dog","cat","ferret"]})});it("with no args",function(){var e=!1,t=new Query;try{t.find()}catch(n){e=!0}assert.ok(!e)})});describe("size",function(){it("via where",function(){var e=new Query;e.where("collection").size(5);assert.deepEqual(e._conditions,{collection:{$size:5}})});it("not via where",function(){var e=new Query;e.size("collection",5);assert.deepEqual(e._conditions,{collection:{$size:5}})})});describe("slice",function(){it("where and positive limit param",function(){var e=new Query;e.where("collection").slice(5);assert.deepEqual(e._fields,{collection:{$slice:5}})});it("where just negative limit param",function(){var e=new Query;e.where("collection").slice(-5);assert.deepEqual(e._fields,{collection:{$slice:-5}})});it("where [skip, limit] param",function(){var e=new Query;e.where("collection").slice([14,10]);assert.deepEqual(e._fields,{collection:{$slice:[14,10]}})});it("where skip and limit params",function(){var e=new Query;e.where("collection").slice(14,10);assert.deepEqual(e._fields,{collection:{$slice:[14,10]}})});it("where just positive limit param",function(){var e=new Query;e.where("collection").slice(5);assert.deepEqual(e._fields,{collection:{$slice:5}})});it("where just negative limit param",function(){var e=new Query;e.where("collection").slice(-5);assert.deepEqual(e._fields,{collection:{$slice:-5}})});it("where the [skip, limit] param",function(){var e=new Query;e.where("collection").slice([14,10]);assert.deepEqual(e._fields,{collection:{$slice:[14,10]}})});it("where the skip and limit params",function(){var e=new Query;e.where("collection").slice(14,10);assert.deepEqual(e._fields,{collection:{$slice:[14,10]}})});it("not via where, with just positive limit param",function(){var e=new Query;e.slice("collection",5);assert.deepEqual(e._fields,{collection:{$slice:5}})});it("not via where, where just negative limit param",function(){var e=new Query;e.slice("collection",-5);assert.deepEqual(e._fields,{collection:{$slice:-5}})});it("not via where, where [skip, limit] param",function(){var e=new Query;e.slice("collection",[14,10]);assert.deepEqual(e._fields,{collection:{$slice:[14,10]}})});it("not via where, where skip and limit params",function(){var e=new Query;e.slice("collection",14,10);assert.deepEqual(e._fields,{collection:{$slice:[14,10]}})})});describe("elemMatch",function(){describe("not via where",function(){it("works",function(){var e=new Query;e.elemMatch("comments",{author:"bnoguchi",votes:{$gte:5}});assert.deepEqual(e._conditions,{comments:{$elemMatch:{author:"bnoguchi",votes:{$gte:5}}}})});it("where block notation",function(){var e=new Query;e.elemMatch("comments",function(e){e.where("author","bnoguchi");e.where("votes").gte(5)});assert.deepEqual(e._conditions,{comments:{$elemMatch:{author:"bnoguchi",votes:{$gte:5}}}})})});describe("via where",function(){it("works",function(){var e=new Query;e.where("comments").elemMatch({author:"bnoguchi",votes:{$gte:5}});assert.deepEqual(e._conditions,{comments:{$elemMatch:{author:"bnoguchi",votes:{$gte:5}}}})});it("where block notation",function(){var e=new Query;e.where("comments").elemMatch(function(e){e.where("author","bnoguchi");e.where("votes").gte(5)});assert.deepEqual(e._conditions,{comments:{$elemMatch:{author:"bnoguchi",votes:{$gte:5}}}})})})});describe("$where",function(){it("function arg",function(){function t(){return this.lastName===this.firstName}var e=new Query;e.$where(t);assert.deepEqual(e._conditions,{$where:t})});it("string arg",function(){var e=new Query;e.$where("this.lastName === this.firstName");assert.deepEqual(e._conditions,{$where:"this.lastName === this.firstName"})})});describe("limit",function(){it("works",function(){var e=new Query;e.limit(5);assert.equal(e.options.limit,5)})});describe("skip",function(){it("works",function(){var e=new Query;e.skip(9);assert.equal(e.options.skip,9)})});describe("sort",function(){it("works",function(){var e=new Query;e.sort("a -c b");assert.deepEqual(e.options.sort,[["a",1],["c",-1],["b",1]]);e=new Query;e.sort({a:1,c:-1,b:"asc",e:"descending",f:"ascending"});assert.deepEqual(e.options.sort,[["a",1],["c",-1],["b","asc"],["e","descending"],["f","ascending"]]);e=new Query;var t;try{e.sort(["a",1])}catch(n){t=n}assert.ok(t,"uh oh. no error was thrown");assert.equal(t.message,"Invalid sort() argument. Must be a string or object.");t=undefined;try{e.sort("a",1,"c",-1,"b",1)}catch(n){t=n}assert.ok(t,"uh oh. no error was thrown");assert.equal(t.message,"Invalid sort() argument. Must be a string or object.")})});describe("or",function(){it("works",function(){var e=new Query;e.find({$or:[{x:1},{x:2}]});assert.equal(e._conditions.$or.length,2);e.or([{y:"We're under attack"},{z:47}]);assert.equal(e._conditions.$or.length,4);assert.equal(e._conditions.$or[3].z,47);e.or({z:"phew"});assert.equal(e._conditions.$or.length,5);assert.equal(e._conditions.$or[3].z,47);assert.equal(e._conditions.$or[4].z,"phew")})});describe("an empty query",function(){it("should not throw",function(){var e=new Query,t=!1;try{e.exec()}catch(n){t=!0}assert.equal(t,!1)})});describe("casting",function(){it("to an array of mixed",function(){var e=new Query,t=start(),n=t.model("Product");t.close();var r={_id:new DocumentObjectId,tags:{$in:[4,8,15,16]}};e.cast(n,r);assert.deepEqual(r.tags.$in,[4,8,15,16])});it("find $ne should not cast single value to array for schematype of Array",function(){var e=new Query,t=start(),n=t.model("Product"),r=t.model("Comment");t.close();var i=new DocumentObjectId,s={_id:i,text:"hello there"},o=new r(s),u={array:{$ne:5},ids:{$ne:i},comments:{$ne:o},strings:{$ne:"Hi there"},numbers:{$ne:1e4}};e.cast(n,u);assert.equal(u.array.$ne,5);assert.equal(u.ids.$ne,i);u.comments.$ne._id.toHexString();assert.deepEqual(u.comments.$ne,s);assert.equal(u.strings.$ne,"Hi there");assert.equal(u.numbers.$ne,1e4);u.array.$ne=[5];u.ids.$ne=[i];u.comments.$ne=[o];u.strings.$ne=["Hi there"];u.numbers.$ne=[1e4];e.cast(n,u);assert.ok(u.array.$ne instanceof Array);assert.equal(u.array.$ne[0],5);assert.ok(u.ids.$ne instanceof Array);assert.equal(u.ids.$ne[0].toString(),i.toString());assert.ok(u.comments.$ne instanceof Array);assert.deepEqual(u.comments.$ne[0],s);assert.ok(u.strings.$ne instanceof Array);assert.equal(u.strings.$ne[0],"Hi there");assert.ok(u.numbers.$ne instanceof Array);assert.equal(u.numbers.$ne[0],1e4)});it("subdocument array with $ne: null should not throw",function(){var e=new Query,t=start(),n=t.model("Product"),r=t.model("Comment");t.close();var i={comments:{$ne:null}};e.cast(n,i);assert.strictEqual(i.comments.$ne,null)});it("find should not cast single value to array for schematype of Array",function(){var e=new Query,t=start(),n=t.model("Product"),r=t.model("Comment");t.close();var i=new DocumentObjectId,s={_id:i,text:"hello there"},o=new r(s),u={array:5,ids:i,comments:o,strings:"Hi there",numbers:1e4};e.cast(n,u);assert.equal(u.array,5);assert.equal(u.ids,i);u.comments._id.toHexString();assert.deepEqual(u.comments,s);assert.equal(u.strings,"Hi there");assert.equal(u.numbers,1e4);u.array=[5];u.ids=[i];u.comments=[o];u.strings=["Hi there"];u.numbers=[1e4];e.cast(n,u);assert.ok(u.array instanceof Array);assert.equal(u.array[0],5);assert.ok(u.ids instanceof Array);assert.equal(u.ids[0].toString(),i.toString());assert.ok(u.comments instanceof Array);assert.deepEqual(u.comments[0],s);assert.ok(u.strings instanceof Array);assert.equal(u.strings[0],"Hi there");assert.ok(u.numbers instanceof Array);assert.equal(u.numbers[0],1e4)})});describe("distinct",function(){it("op",function(){var e=start(),t=new Query,n=e.model("Product"),r=(new Query).bind(n,"distinct").distinct("blah",function(){e.close()});assert.equal(r.op,"distinct")})});describe("without a callback",function(){it("count, update, remove works",function(e){var t=start(),n=new Query,r=t.model("Product","update_products_"+random());(new Query).bind(r,"count").count();r.create({tags:12345},function(n){assert.ifError(n);var i=20;r.find({tags:12345}).update({$set:{tags:123456}});setTimeout(function(){r.find({tags:123456},function(n,s){assert.ifError(n);assert.equal(1,s.length);r.find({tags:123456}).remove();setTimeout(function(){r.find({tags:123456},function(n,r){assert.ifError(n);assert.equal(0,r.length);t.close();e()})},i)})},i)})})});describe("findOne",function(){it("sets the op",function(){var e=start(),t=new Query,n=e.model("Product"),r=(new Query).bind(n,"distinct");assert.equal(r.op,"distinct");r.findOne();assert.equal(r.op,"findOne");e.close()})});describe("querying/updating with model instance containing embedded docs should work (#454)",function(){it("works",function(e){var t=start(),n=t.model("Product"),r={comments:[{text:"hello"}]},i={comments:[{text:"goodbye"}]},s=new n(r),o=new n(i);s.save(function(r){assert.ifError(r);n.findOne(s,function(r,s){assert.ifError(r);assert.equal(s.comments.length,1);assert.equal(s.comments[0].text,"hello");n.update(s,i,function(r){assert.ifError(r);n.collection.findOne({_id:s._id},function(n,r){t.close();assert.ifError(n);assert.equal(r.comments.length,1);assert.ok(!r.comments[0].hasOwnProperty("parentArry"));assert.equal(r.comments[0].text,"goodbye");e()})})})})})});describe("optionsForExecute",function(){it("should retain key order",function(){var e={x:1,y:1,z:1},t=JSON.stringify({hint:e,safe:!0}),n=new Query;n.hint(e);var r=n._optionsForExec({schema:{options:{safe:!0}}});assert.equal(t,JSON.stringify(r))})});describe("options",function(){describe("maxscan",function(){it("works",function(){var e=new Query;e.maxscan(100);assert.equal(e.options.maxscan,100)})});describe("slaveOk",function(){var e=new Query;e.slaveOk();assert.equal(!0,e.options.slaveOk);var e=new Query;e.slaveOk(!0);assert.equal(!0,e.options.slaveOk);var e=new Query;e.slaveOk(!1);assert.equal(!1,e.options.slaveOk)});describe("tailable",function(){it("works",function(){var e=new Query;e.tailable();assert.equal(!0,e.options.tailable);var e=new Query;e.tailable(!0);assert.equal(!0,e.options.tailable);var e=new Query;e.tailable(!1);assert.equal(!1,e.options.tailable)})});describe("comment",function(){it("works",function(){var e=new Query;assert.equal("function",typeof e.comment);assert.equal(e.comment("Lowpass is more fun"),e);assert.equal(e.options.comment,"Lowpass is more fun")})});describe("hint",function(){it("works",function(){var e=new Query;e.hint({indexAttributeA:1,indexAttributeB:-1});assert.deepEqual(e.options.hint,{indexAttributeA:1,indexAttributeB:-1});assert.throws(function(){var e=new Query;e.hint("indexAttributeA")},/Invalid hint./)})});describe("snapshot",function(){it("works",function(){var e=new Query;e.snapshot(!0);assert.equal(!0,e.options.snapshot)})});describe("batchSize",function(){it("works",function(){var e=new Query;e.batchSize(10);assert.equal(e.options.batchSize,10)})});describe("read",function(){var e=mongoose.mongo.ReadPreference;describe("without tags",function(){it("works",function(){var t=new Query;t.read("primary");assert.ok(t.options.readPreference instanceof e);assert.equal(t.options.readPreference.mode,"primary");t.read("p");assert.ok(t.options.readPreference instanceof e);assert.equal(t.options.readPreference.mode,"primary");t.read("primaryPrefered");assert.ok(t.options.readPreference instanceof e);assert.equal(t.options.readPreference.mode,"primaryPrefered");t.read("pp");assert.ok(t.options.readPreference instanceof e);assert.equal(t.options.readPreference.mode,"primaryPrefered");t.read("secondary");assert.ok(t.options.readPreference instanceof e);assert.equal(t.options.readPreference.mode,"secondary");t.read("s");assert.ok(t.options.readPreference instanceof e);assert.equal(t.options.readPreference.mode,"secondary");t.read("secondaryPrefered");assert.ok(t.options.readPreference instanceof e);assert.equal(t.options.readPreference.mode,"secondaryPrefered");t.read("sp");assert.ok(t.options.readPreference instanceof e);assert.equal(t.options.readPreference.mode,"secondaryPrefered");t.read("nearest");assert.ok(t.options.readPreference instanceof e);assert.equal(t.options.readPreference.mode,"nearest");t.read("n");assert.ok(t.options.readPreference instanceof e);assert.equal(t.options.readPreference.mode,"nearest")})});describe("with tags",function(){it("works",function(){var t=new Query,n=[{dc:"sf",s:1},{dc:"jp",s:2}];t.read("p",n);assert.ok(t.options.readPreference instanceof e);assert.equal(t.options.readPreference.mode,"primary");assert.ok(Array.isArray(t.options.readPreference.tags));assert.equal(t.options.readPreference.tags[0].dc,"sf");assert.equal(t.options.readPreference.tags[0].s,1);assert.equal(t.options.readPreference.tags[1].dc,"jp");assert.equal(t.options.readPreference.tags[1].s,2)})})})});describe("setOptions",function(){it("works",function(e){var t=new Query;t.setOptions({thing:"cat"});t.setOptions({populate:["fans"]});t.setOptions({batchSize:10});t.setOptions({limit:4});t.setOptions({skip:3});t.setOptions({sort:"-blah"});t.setOptions({sort:{woot:-1}});t.setOptions({hint:{index1:1,index2:-1}});t.setOptions({read:["s",[{dc:"eu"}]]});assert.equal(t.options.thing,"cat");assert.deepEqual(t.options.populate.fans,{fields:undefined,conditions:undefined,options:undefined,model:undefined});assert.equal(t.options.batchSize,10);assert.equal(t.options.limit,4);assert.equal(t.options.skip,3);assert.equal(t.options.sort.length,2);assert.equal(t.options.sort[0][0],"blah");assert.equal(t.options.sort[0][1],-1);assert.equal(t.options.sort[1][0],"woot");assert.equal(t.options.sort[1][1],-1);assert.equal(t.options.hint.index1,1);assert.equal(t.options.hint.index2,-1);assert.equal(t.options.readPreference.mode,"secondary");assert.equal(t.options.readPreference.tags[0].dc,"eu");var n=start(),r=n.model("Product","Product_setOptions_test");r.create({numbers:[3,4,5]},{strings:"hi there".split(" ")},function(t,i,s){assert.ifError(t);r.find().setOptions({limit:1,sort:{_id:-1},read:"n"}).exec(function(t,r){n.close();assert.ifError(t);assert.equal(r.length,1);assert.equal(r[0].id,s.id);e()})})})});describe("update",function(){it("when empty, nothing is run",function(){var e=new Query;assert.equal(!1,!!e._castUpdate({}))})})});