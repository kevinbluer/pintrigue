/**
 * Module dependencies.
 */function TestDocument(){Document.apply(this,arguments)}var start=require("./common"),mongoose=start.mongoose,assert=require("assert"),random=require("../lib/utils").random,Schema=mongoose.Schema,ObjectId=Schema.ObjectId,Document=require("../lib/document"),DocumentObjectId=mongoose.Types.ObjectId,SchemaType=mongoose.SchemaType,ValidatorError=SchemaType.ValidatorError,ValidationError=mongoose.Document.ValidationError,MongooseError=mongoose.Error;TestDocument.prototype.__proto__=Document.prototype;var em=new Schema({title:String,body:String});em.virtual("works").get(function(){return"em virtual works"});var schema=new Schema({test:String,oids:[ObjectId],numbers:[Number],nested:{age:Number,cool:ObjectId,deep:{x:String},path:String,setr:String},nested2:{nested:String,yup:{nested:Boolean,yup:String,age:Number}},em:[em],date:Date});TestDocument.prototype._setSchema(schema);schema.virtual("nested.agePlus2").get(function(e){return this.nested.age+2});schema.virtual("nested.setAge").set(function(e){this.nested.age=e});schema.path("nested.path").get(function(e){return(this.nested.age||"")+(e?e:"")});schema.path("nested.setr").set(function(e){return e+" setter"});var dateSetterCalled=!1;schema.path("date").set(function(e){assert.equal("string",typeof e);dateSetterCalled=!0;return e});TestDocument.prototype.hooksTest=function(e){e(null,arguments)};describe("document:",function(){it("test shortcut getters",function(){var e=new TestDocument;e.init({test:"test",oids:[],nested:{age:5,cool:DocumentObjectId.fromString("4c6c2d6240ced95d0e00003c"),path:"my path"}});assert.equal("test",e.test);assert.ok(e.oids instanceof Array);assert.equal(e.nested.age,5);assert.equal(DocumentObjectId.toString(e.nested.cool),"4c6c2d6240ced95d0e00003c");assert.equal(7,e.nested.agePlus2);assert.equal("5my path",e.nested.path);e.nested.setAge=10;assert.equal(10,e.nested.age);e.nested.setr="set it";assert.equal(e.getValue("nested.setr"),"set it setter");var t=new TestDocument;t.init({test:"toop",oids:[],nested:{age:2,cool:DocumentObjectId.fromString("4cf70857337498f95900001c"),deep:{x:"yay"}}});assert.equal("toop",t.test);assert.ok(t.oids instanceof Array);assert.equal(t.nested.age,2);assert.equal(t.nested.bonk,undefined);assert.equal(t.nested.nested,undefined);assert.equal(t.nested.test,undefined);assert.equal(t.nested.age.test,undefined);assert.equal(t.nested.age.nested,undefined);assert.equal(t.oids.nested,undefined);assert.equal(t.nested.deep.x,"yay");assert.equal(t.nested.deep.nested,undefined);assert.equal(t.nested.deep.cool,undefined);assert.equal(t.nested2.yup.nested,undefined);assert.equal(t.nested2.yup.nested2,undefined);assert.equal(t.nested2.yup.yup,undefined);assert.equal(t.nested2.yup.age,undefined);assert.equal("object",typeof t.nested2.yup);t.nested2.yup={age:150,yup:"Yesiree",nested:!0};assert.equal(t.nested2.nested,undefined);assert.equal(t.nested2.yup.nested,!0);assert.equal(t.nested2.yup.yup,"Yesiree");assert.equal(t.nested2.yup.age,150);t.nested2.nested="y";assert.equal(t.nested2.nested,"y");assert.equal(t.nested2.yup.nested,!0);assert.equal(t.nested2.yup.yup,"Yesiree");assert.equal(150,t.nested2.yup.age);assert.equal(DocumentObjectId.toString(t.nested.cool),"4cf70857337498f95900001c");assert.ok(e.oids!==t.oids)});it("test shortcut setters",function(){var e=new TestDocument;e.init({test:"Test",nested:{age:5}});assert.equal(e.isModified("test"),!1);e.test="Woot";assert.equal("Woot",e.test);assert.equal(!0,e.isModified("test"));assert.equal(e.isModified("nested.age"),!1);e.nested.age=2;assert.equal(2,e.nested.age);assert.ok(e.isModified("nested.age"));e.nested={path:"overwrite the entire nested object"};assert.equal(undefined,e.nested.age);assert.equal(1,Object.keys(e._doc.nested).length);assert.equal("overwrite the entire nested object",e.nested.path);assert.ok(e.isModified("nested"))});it("test accessor of id",function(){var e=new TestDocument;assert.ok(e._id instanceof DocumentObjectId)});it("test shortcut of id hexString",function(){var e=new TestDocument,t=e._id.toString();assert.equal("string",typeof e.id)});it("test toObject clone",function(){var e=new TestDocument;e.init({test:"test",oids:[],nested:{age:5,cool:new DocumentObjectId}});var t=e.toObject();t.test._marked=!0;t.nested._marked=!0;t.nested.age._marked=!0;t.nested.cool._marked=!0;assert.equal(e._doc.test._marked,undefined);assert.equal(e._doc.nested._marked,undefined);assert.equal(e._doc.nested.age._marked,undefined);assert.equal(e._doc.nested.cool._marked,undefined)});it("toObject options",function(){var e=new TestDocument;e.init({test:"test",oids:[],em:[{title:"asdf"}],nested:{age:5,cool:DocumentObjectId.fromString("4c6c2d6240ced95d0e00003c"),path:"my path"},nested2:{}});var t=e.toObject({getters:!0,virtuals:!1});assert.equal(t.test,"test");assert.ok(t.oids instanceof Array);assert.equal(5,t.nested.age);assert.equal(DocumentObjectId.toString(t.nested.cool),"4c6c2d6240ced95d0e00003c");assert.equal("5my path",t.nested.path);assert.equal(undefined,t.nested.agePlus2);assert.equal(undefined,t.em[0].works);t=e.toObject({virtuals:!0});assert.equal("test",t.test);assert.ok(t.oids instanceof Array);assert.equal(5,t.nested.age);assert.equal(DocumentObjectId.toString(t.nested.cool),"4c6c2d6240ced95d0e00003c");assert.equal("my path",t.nested.path);assert.equal(7,t.nested.agePlus2);assert.equal(t.em[0].works,"em virtual works");t=e.toObject({getters:!0});assert.equal("test",t.test);assert.ok(t.oids instanceof Array);assert.equal(5,t.nested.age);assert.equal(DocumentObjectId.toString(t.nested.cool),"4c6c2d6240ced95d0e00003c");assert.equal("5my path",t.nested.path);assert.equal(7,t.nested.agePlus2);assert.equal("em virtual works",t.em[0].works);e.schema.options.toObject={virtuals:!0};t=e.toObject();assert.equal("test",t.test);assert.ok(t.oids instanceof Array);assert.equal(5,t.nested.age);assert.equal(DocumentObjectId.toString(t.nested.cool),"4c6c2d6240ced95d0e00003c");assert.equal("my path",t.nested.path);assert.equal(7,t.nested.agePlus2);assert.equal("asdf",t.em[0].title);delete e.schema.options.toObject;t=e.toObject({minimize:!0});assert.equal(undefined,t.nested2);t=e.toObject({minimize:!1});assert.equal("Object",t.nested2.constructor.name);assert.equal(1,Object.keys(t.nested2).length);t=e.toObject("2");assert.equal(undefined,t.nested2);e.schema.options.toObject={minimize:!1};t=e.toObject();assert.equal("Object",t.nested2.constructor.name);assert.equal(1,Object.keys(t.nested2).length);delete e.schema.options.toObject;e.schema.options.minimize=!1;t=e.toObject();assert.equal("Object",t.nested2.constructor.name);assert.equal(1,Object.keys(t.nested2).length);e.schema.options.minimize=!0;t=e.toObject();assert.equal(undefined,t.nested2)});it("toJSON options",function(){var e=new TestDocument;e.init({test:"test",oids:[],em:[{title:"asdf"}],nested:{age:5,cool:DocumentObjectId.fromString("4c6c2d6240ced95d0e00003c"),path:"my path"},nested2:{}});var t=TestDocument.prototype.schema.path("em");t.casterConstructor.prototype.toJSON=function(){return{}};e.schema.options.toJSON={virtuals:!0};var n=e.toJSON();assert.equal("test",n.test);assert.ok(n.oids instanceof Array);assert.equal(5,n.nested.age);assert.equal(DocumentObjectId.toString(n.nested.cool),"4c6c2d6240ced95d0e00003c");assert.equal("my path",n.nested.path);assert.equal(7,n.nested.agePlus2);assert.equal("Object",n.em[0].constructor.name);assert.equal(0,Object.keys(n.em[0]).length);delete e.schema.options.toJSON;delete t.casterConstructor.prototype.toJSON;e.schema.options.toJSON={minimize:!1};n=e.toJSON();assert.equal("Object",n.nested2.constructor.name);assert.equal(1,Object.keys(n.nested2).length);n=e.toJSON("8");assert.equal("Object",n.nested2.constructor.name);assert.equal(1,Object.keys(n.nested2).length);var r=[e],i=!1,s;try{s=JSON.stringify(r)}catch(o){i=!0}assert.equal(!1,i);assert.ok(/nested2/.test(s));assert.equal("Object",n.nested2.constructor.name);assert.equal(1,Object.keys(n.nested2).length);delete e.schema.options.toJSON});it("jsonifying an object",function(){var e=new TestDocument({test:"woot"}),t=DocumentObjectId.toString(e._id),n=JSON.stringify(e),r=JSON.parse(n);assert.equal("woot",r.test);assert.equal(r._id,t)});it("calling update on document should relay to its model (gh-794)",function(e){var t=start(),n=new Schema({text:String}),r=t.model("docRelayUpdate",n),i=new r({text:"A doc"}),s=!1;i.save(function(){var n=r.update;r.update=function(e,t){assert.equal(1,Object.keys(e).length);assert.equal(e._id,i._id);assert.equal(1,Object.keys(t).length);assert.equal(1,Object.keys(t.$set).length);assert.equal(t.$set.text,"A changed doc");s=!0;r.update=n;n.apply(r,arguments)};i.update({$set:{text:"A changed doc"}},function(n){t.close();assert.ifError(n);assert.equal(!0,s);e()})})});it("toObject should not set undefined values to null",function(){var e=new TestDocument,t=e.toObject();delete t._id;assert.deepEqual(t,{numbers:[],oids:[],em:[]})});describe("Errors",function(){it("MongooseErrors should be instances of Error (gh-209)",function(){var e=require("../lib/error"),t=new e("Some message");assert.ok(t instanceof Error)});it("ValidationErrors should be instances of Error",function(){var e=Document.ValidationError,t=new e(new TestDocument);assert.ok(t instanceof Error)})});it("methods on embedded docs should work",function(){var e=start(),t=new Schema({name:String});t.methods.test=function(){return this.name+" butter"};t.statics.ten=function(){return 10};var n=e.model("EmbeddedMethodsAndStaticsE",t),r=new Schema({embed:[t]}),i=e.model("EmbeddedMethodsAndStaticsP",r);e.close();var s=new i({embed:[{name:"peanut"}]});assert.equal("function",typeof s.embed[0].test);assert.equal("function",typeof n.ten);assert.equal("peanut butter",s.embed[0].test());assert.equal(10,n.ten());s=new i;s.embed.push({name:"apple"});assert.equal("function",typeof s.embed[0].test);assert.equal("function",typeof n.ten);assert.equal("apple butter",s.embed[0].test())});it("setting a positional path does not cast value to array",function(){var e=new TestDocument;e.init({numbers:[1,3]});assert.equal(1,e.numbers[0]);assert.equal(3,e.numbers[1]);e.set("numbers.1",2);assert.equal(1,e.numbers[0]);assert.equal(2,e.numbers[1])});it("no maxListeners warning should occur",function(){var e=start(),t=!1,n=console.trace;console.trace=function(){t=!0;console.trace=n};var r=new Schema({title:String,embed1:[new Schema({name:String})],embed2:[new Schema({name:String})],embed3:[new Schema({name:String})],embed4:[new Schema({name:String})],embed5:[new Schema({name:String})],embed6:[new Schema({name:String})],embed7:[new Schema({name:String})],embed8:[new Schema({name:String})],embed9:[new Schema({name:String})],embed10:[new Schema({name:String})],embed11:[new Schema({name:String})]}),i=e.model("noMaxListeners",r),s=new i({title:"test"});e.close();assert.equal(!1,t)});it("isSelected()",function(){var e=new TestDocument;e.init({test:"test",numbers:[4,5,6,7],nested:{age:5,cool:DocumentObjectId.fromString("4c6c2d6240ced95d0e00003c"),path:"my path",deep:{x:"a string"}},notapath:"i am not in the schema",em:[{title:"gocars"}]});assert.ok(e.isSelected("_id"));assert.ok(e.isSelected("test"));assert.ok(e.isSelected("numbers"));assert.ok(e.isSelected("oids"));assert.ok(e.isSelected("nested"));assert.ok(e.isSelected("nested.age"));assert.ok(e.isSelected("nested.cool"));assert.ok(e.isSelected("nested.path"));assert.ok(e.isSelected("nested.deep"));assert.ok(e.isSelected("nested.nope"));assert.ok(e.isSelected("nested.deep.x"));assert.ok(e.isSelected("nested.deep.x.no"));assert.ok(e.isSelected("nested.deep.y"));assert.ok(e.isSelected("noway"));assert.ok(e.isSelected("notapath"));assert.ok(e.isSelected("em"));assert.ok(e.isSelected("em.title"));assert.ok(e.isSelected("em.body"));assert.ok(e.isSelected("em.nonpath"));var t={test:1,numbers:1,"nested.deep":1,oids:1};e=new TestDocument(undefined,t);e.init({test:"test",numbers:[4,5,6,7],nested:{deep:{x:"a string"}}});assert.ok(e.isSelected("_id"));assert.ok(e.isSelected("test"));assert.ok(e.isSelected("numbers"));assert.ok(e.isSelected("oids"));assert.ok(e.isSelected("nested"));assert.ok(!e.isSelected("nested.age"));assert.ok(!e.isSelected("nested.cool"));assert.ok(!e.isSelected("nested.path"));assert.ok(e.isSelected("nested.deep"));assert.ok(!e.isSelected("nested.nope"));assert.ok(e.isSelected("nested.deep.x"));assert.ok(e.isSelected("nested.deep.x.no"));assert.ok(e.isSelected("nested.deep.y"));assert.ok(!e.isSelected("noway"));assert.ok(!e.isSelected("notapath"));assert.ok(!e.isSelected("em"));assert.ok(!e.isSelected("em.title"));assert.ok(!e.isSelected("em.body"));assert.ok(!e.isSelected("em.nonpath"));var t={"em.title":1};e=new TestDocument(undefined,t);e.init({em:[{title:"one"}]});assert.ok(e.isSelected("_id"));assert.ok(!e.isSelected("test"));assert.ok(!e.isSelected("numbers"));assert.ok(!e.isSelected("oids"));assert.ok(!e.isSelected("nested"));assert.ok(!e.isSelected("nested.age"));assert.ok(!e.isSelected("nested.cool"));assert.ok(!e.isSelected("nested.path"));assert.ok(!e.isSelected("nested.deep"));assert.ok(!e.isSelected("nested.nope"));assert.ok(!e.isSelected("nested.deep.x"));assert.ok(!e.isSelected("nested.deep.x.no"));assert.ok(!e.isSelected("nested.deep.y"));assert.ok(!e.isSelected("noway"));assert.ok(!e.isSelected("notapath"));assert.ok(e.isSelected("em"));assert.ok(e.isSelected("em.title"));assert.ok(!e.isSelected("em.body"));assert.ok(!e.isSelected("em.nonpath"));var t={em:0};e=new TestDocument(undefined,t);e.init({test:"test",numbers:[4,5,6,7],nested:{age:5,cool:DocumentObjectId.fromString("4c6c2d6240ced95d0e00003c"),path:"my path",deep:{x:"a string"}},notapath:"i am not in the schema"});assert.ok(e.isSelected("_id"));assert.ok(e.isSelected("test"));assert.ok(e.isSelected("numbers"));assert.ok(e.isSelected("oids"));assert.ok(e.isSelected("nested"));assert.ok(e.isSelected("nested.age"));assert.ok(e.isSelected("nested.cool"));assert.ok(e.isSelected("nested.path"));assert.ok(e.isSelected("nested.deep"));assert.ok(e.isSelected("nested.nope"));assert.ok(e.isSelected("nested.deep.x"));assert.ok(e.isSelected("nested.deep.x.no"));assert.ok(e.isSelected("nested.deep.y"));assert.ok(e.isSelected("noway"));assert.ok(e.isSelected("notapath"));assert.ok(!e.isSelected("em"));assert.ok(!e.isSelected("em.title"));assert.ok(!e.isSelected("em.body"));assert.ok(!e.isSelected("em.nonpath"));var t={_id:0};e=new TestDocument(undefined,t);e.init({test:"test",numbers:[4,5,6,7],nested:{age:5,cool:DocumentObjectId.fromString("4c6c2d6240ced95d0e00003c"),path:"my path",deep:{x:"a string"}},notapath:"i am not in the schema"});assert.ok(!e.isSelected("_id"));assert.ok(e.isSelected("nested.deep.x.no"));e=new TestDocument({test:"boom"});assert.ok(e.isSelected("_id"));assert.ok(e.isSelected("test"));assert.ok(e.isSelected("numbers"));assert.ok(e.isSelected("oids"));assert.ok(e.isSelected("nested"));assert.ok(e.isSelected("nested.age"));assert.ok(e.isSelected("nested.cool"));assert.ok(e.isSelected("nested.path"));assert.ok(e.isSelected("nested.deep"));assert.ok(e.isSelected("nested.nope"));assert.ok(e.isSelected("nested.deep.x"));assert.ok(e.isSelected("nested.deep.x.no"));assert.ok(e.isSelected("nested.deep.y"));assert.ok(e.isSelected("noway"));assert.ok(e.isSelected("notapath"));assert.ok(e.isSelected("em"));assert.ok(e.isSelected("em.title"));assert.ok(e.isSelected("em.body"));assert.ok(e.isSelected("em.nonpath"));var t={_id:1};e=new TestDocument(undefined,t);e.init({_id:"test"});assert.ok(e.isSelected("_id"));assert.ok(!e.isSelected("test"));e=new TestDocument({test:"boom"},!0);assert.ok(e.isSelected("_id"));assert.ok(e.isSelected("test"));assert.ok(e.isSelected("numbers"));assert.ok(e.isSelected("oids"));assert.ok(e.isSelected("nested"));assert.ok(e.isSelected("nested.age"));assert.ok(e.isSelected("nested.cool"));assert.ok(e.isSelected("nested.path"));assert.ok(e.isSelected("nested.deep"));assert.ok(e.isSelected("nested.nope"));assert.ok(e.isSelected("nested.deep.x"));assert.ok(e.isSelected("nested.deep.x.no"));assert.ok(e.isSelected("nested.deep.y"));assert.ok(e.isSelected("noway"));assert.ok(e.isSelected("notapath"));assert.ok(e.isSelected("em"));assert.ok(e.isSelected("em.title"));assert.ok(e.isSelected("em.body"));assert.ok(e.isSelected("em.nonpath"))});it("unselected required fields should pass validation",function(){var e=start(),t=new Schema({name:String,req:{type:String,required:!0}}),n=e.model("unselectedRequiredFieldValidation",t),r=new n({name:"teeee",req:"i am required"});r.save(function(t){assert.ifError(t);n.findById(r).select("name").exec(function(t,r){assert.ifError(t);assert.equal(undefined,r.req);r.name="wooo";r.save(function(t){assert.ifError(t);n.findById(r).select("name").exec(function(t,r){assert.ifError(t);r.req=undefined;r.save(function(t){t=String(t);var i=/Validator "required" failed for path req/.test(t);assert.ok(i);r.req="it works again";r.save(function(t){assert.ifError(t);n.findById(r).select("_id").exec(function(t,n){assert.ifError(t);n.save(function(t){e.close();assert.ifError(t)})})})})})})})})});it("#validate (gh-891)",function(e){var t=start(),n=null,r=!1,i=[function(e){r=!0;return!0},"BAM"];n=new Schema({prop:{type:String,required:!0,validate:i},nick:{type:String,required:!0}});var s=t.model("validateSchema",n,"validateschema_"+random()),o=new s({prop:"gh891",nick:"validation test"});o.save(function(t){assert.ifError(t);assert.equal(!0,r);r=!1;s.findById(o,"nick",function(t,n){assert.equal(!1,r);assert.ifError(t);n.nick="gh-891";n.save(function(t){assert.equal(!1,r);assert.ifError(t);e()})})})});it("#invalidate",function(e){var t=start(),n=null,r=null,i=null;n=new Schema({prop:{type:String}},{strict:!1});mongoose.model("InvalidateSchema",n);r=t.model("InvalidateSchema");i=new r;i.set({baz:"val"});i.invalidate("baz","reason");i.save(function(n){assert.ok(n instanceof MongooseError);assert.ok(n instanceof ValidationError);assert.ok(n.errors.baz instanceof ValidatorError);assert.equal(n.errors.baz.message,'Validator "reason" failed for path baz');assert.equal(n.errors.baz.type,"reason");assert.equal(n.errors.baz.path,"baz");i.save(function(n){t.close();assert.strictEqual(n,null);e()})})});describe("#equals",function(){describe("should work",function(){var e=start(),t=e.model("equals-S",new Schema({_id:String})),n=e.model("equals-N",new Schema({_id:Number})),r=e.model("equals-O",new Schema({_id:Schema.ObjectId}));it("with string _ids",function(){var e=new t({_id:"one"}),n=new t({_id:"one"});assert.ok(e.equals(n))});it("with number _ids",function(){var e=new n({_id:0}),t=new n({_id:0});assert.ok(e.equals(t))});it("with ObjectId _ids",function(){var e=new mongoose.Types.ObjectId,t=new r({_id:e}),n=new r({_id:e});assert.ok(t.equals(n));e=String(new mongoose.Types.ObjectId);t=new r({_id:e});n=new r({_id:e});assert.ok(t.equals(n))});after(function(){e.close()})})});describe("setter",function(){describe("order",function(){it("is applied correctly",function(){var e="Thu Aug 16 2012 09:45:59 GMT-0700 (PDT)",t=new TestDocument;dateSetterCalled=!1;t.date=e;assert.ok(dateSetterCalled);dateSetterCalled=!1;assert.ok(t._doc.date instanceof Date);assert.ok(t.date instanceof Date);assert.equal(t.date.toString(),e);assert.equal(+t.date,+(new Date(e)))})});describe("on nested paths",function(){describe("using set(path, object)",function(){it("overwrites the entire object",function(){var e=new TestDocument;e.init({test:"Test",nested:{age:5}});e.set("nested",{path:"overwrite the entire nested object"});assert.equal(undefined,e.nested.age);assert.equal(1,Object.keys(e._doc.nested).length);assert.equal("overwrite the entire nested object",e.nested.path);assert.ok(e.isModified("nested"));e.set({test:"Test",nested:{age:4}});assert.equal("4overwrite the entire nested object",e.nested.path);assert.equal(4,e.nested.age);assert.equal(2,Object.keys(e._doc.nested).length);assert.ok(e.isModified("nested"));var e=new TestDocument;e.init({test:"Test",nested:{age:5}});e.set({test:"Test",nested:{age:5}});assert.ok(!e.isModified());assert.ok(!e.isModified("test"));assert.ok(!e.isModified("nested"));assert.ok(!e.isModified("nested.age"));e.nested={path:"overwrite the entire nested object",age:5};assert.equal(5,e.nested.age);assert.equal(2,Object.keys(e._doc.nested).length);assert.equal("5overwrite the entire nested object",e.nested.path);assert.ok(e.isModified("nested"));e.nested.deep={x:"Hank and Marie"};assert.equal(3,Object.keys(e._doc.nested).length);assert.equal("5overwrite the entire nested object",e.nested.path);assert.ok(e.isModified("nested"));assert.equal("Hank and Marie",e.nested.deep.x);var e=new TestDocument;e.init({test:"Test",nested:{age:5}});e.set("nested.deep",{x:"Hank and Marie"});assert.equal(2,Object.keys(e._doc.nested).length);assert.equal(1,Object.keys(e._doc.nested.deep).length);assert.ok(e.isModified("nested"));assert.ok(!e.isModified("nested.path"));assert.ok(!e.isModified("nested.age"));assert.ok(e.isModified("nested.deep"));assert.equal("Hank and Marie",e.nested.deep.x)})})})})});