/**
 * Test dependencies.
 */var start=require("./common"),assert=require("assert"),mongoose=start.mongoose,random=require("../lib/utils").random,Query=require("../lib/query"),Schema=mongoose.Schema,SchemaType=mongoose.SchemaType,CastError=SchemaType.CastError,ValidatorError=SchemaType.ValidatorError,ValidationError=mongoose.Document.ValidationError,ObjectId=Schema.ObjectId,DocumentObjectId=mongoose.Types.ObjectId,DocumentArray=mongoose.Types.DocumentArray,EmbeddedDocument=mongoose.Types.Embedded,MongooseArray=mongoose.Types.Array,MongooseError=mongoose.Error;describe("model",function(){describe("indexes",function(){it("are created when model is compiled",function(e){var t=new Schema({name:{type:String,index:!0},last:String,email:String,date:Date});t.index({last:1,email:1},{unique:!0});t.index({date:1},{expires:10});var n=start(),r=n.model("IndexedModel",t,"indexedmodel"+random()),i=0;r.on("index",function(){r.collection.getIndexes({full:!0},function(t,r){assert.ifError(t);r.forEach(function(e){switch(e.name){case"_id_":case"name_1":case"last_1_email_1":i++;break;case"date_1":i++;assert.equal(e.expiresAfterSeconds,10)}});n.close();assert.equal(4,i);e()})})});it("of embedded documents",function(e){var t=new Schema({_id:{type:ObjectId,index:!0},title:{type:String,index:!0},desc:String}),n=new Schema({name:{type:String,index:!0},blogposts:[t]}),r=start(),i=r.model("DeepIndexedModel",n,"deepindexedmodel"+random()),s=0;i.on("index",function(){i.collection.getIndexes(function(t,n){assert.ifError(t);for(var i in n)n[i].forEach(function(e){e[0]=="name"&&s++;e[0]=="blogposts._id"&&s++;e[0]=="blogposts.title"&&s++});r.close();assert.equal(3,s);e()})})});it("compound: on embedded docs",function(e){var t=new Schema({title:String,desc:String});t.index({title:1,desc:1});var n=new Schema({name:{type:String,index:!0},blogposts:[t]}),r=start(),i=r.model("DeepCompoundIndexModel",n,"deepcompoundindexmodel"+random()),s=0;i.on("index",function(){i.collection.getIndexes(function(t,n){assert.ifError(t);for(var i in n)switch(i){case"name_1":case"blogposts.title_1_blogposts.desc_1":++s}r.close();assert.equal(2,s);e()})})});it("error should emit on the model",function(e){var t=start(),n=new Schema({name:{type:String}}),r=t.model("IndexError",n,"x"+random());r.on("index",function(n){t.close();assert.ok(/^E11000 duplicate key error index:/.test(n.message),n);e()});r.create({name:"hi"},{name:"hi"},function(e){assert.strictEqual(e,null);r.schema.index({name:1},{unique:!0});r.schema.index({other:1});r.init()})});describe("auto creation",function(){it("can be disabled",function(e){var t=start(),n=new Schema({name:{type:String,index:!0}});n.set("autoIndex",!1);var r=t.model("AutoIndexing",n,"x"+random());r.on("index",function(e){assert.ok(!1,"Model.ensureIndexes() was called")});setTimeout(function(){r.collection.getIndexes(function(t,n){assert.ifError(t);assert.equal(0,Object.keys(n).length);e()})},100)})});it("can be manually triggered",function(e){var t=start(),n=new Schema({name:{type:String}}),r=t.model("ManualIndexing",n,"x"+random());assert.equal("function",typeof r.ensureIndexes);r.schema.index({name:1},{sparse:!0});var i=!1;r.on("index",function(e){i=!0});r.ensureIndexes(function(t){assert.ifError(t);assert.ok(i);e()})})})});