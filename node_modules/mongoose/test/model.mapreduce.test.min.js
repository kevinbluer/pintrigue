/**
 * Test dependencies.
 */var start=require("./common"),mongoose=start.mongoose,assert=require("assert"),random=require("../lib/utils").random,Query=require("../lib/query"),Schema=mongoose.Schema,SchemaType=mongoose.SchemaType,CastError=SchemaType.CastError,ValidatorError=SchemaType.ValidatorError,ValidationError=mongoose.Document.ValidationError,ObjectId=Schema.ObjectId,DocumentObjectId=mongoose.Types.ObjectId,DocumentArray=mongoose.Types.DocumentArray,EmbeddedDocument=mongoose.Types.Embedded,MongooseArray=mongoose.Types.Array,MongooseError=mongoose.Error,Comments=new Schema;Comments.add({title:String,date:Date,body:String,comments:[Comments]});var BlogPost=new Schema({title:String,author:String,slug:String,date:Date,meta:{date:Date,visitors:Number},published:Boolean,mixed:{},numbers:[Number],owners:[ObjectId],comments:[Comments]}),collection="mapreduce_"+random();mongoose.model("MapReduce",BlogPost);describe("model: mapreduce:",function(){it("works",function(e){var t=start(),n=t.model("MapReduce",collection),r="aaron guillermo brian nathan".split(" "),i=10,s=[];for(var o=0;o<i;++o)s.push({author:r[o%r.length]});n.create(s,function(r){function s(){var r={map:function(){emit(this.author,1)},reduce:function(e,t){return t.length},out:{replace:"_mapreduce_test_"+random()}};n.mapReduce(r,function(n,r,i){assert.ifError(n);assert.ok(!Array.isArray(r));assert.equal("function",typeof r.findOne);assert.equal("function",typeof r.mapReduce);r.where("value").gt(1).sort({_id:1}).exec(function(n,i){assert.ifError(n);assert.equal("aaron",i[0]._id);assert.equal("brian",i[1]._id);assert.equal("guillermo",i[2]._id);assert.equal("nathan",i[3]._id);r.findOneAndUpdate({_id:"aaron"},{published:!0},function(n,r){t.close();assert.ifError(n);assert.ok(r);assert.equal("aaron",r._id);assert.equal(!0,r.published);e()})})})}assert.ifError(r);var i={map:function(){emit(this.author,1)},reduce:function(e,t){return t.length}};n.mapReduce(i,function(e,t,r){assert.ifError(e);assert.ok(Array.isArray(t));assert.ok(r);t.forEach(function(e){"aaron"==e._id&&assert.equal(3,e.value);"guillermo"==e._id&&assert.equal(3,e.value);"brian"==e._id&&assert.equal(2,e.value);"nathan"==e._id&&assert.equal(2,e.value)});var i={map:function(){emit(this.author,1)},reduce:function(e,t){return t.length},query:{author:"aaron"}};n.mapReduce(i,function(e,t,n){assert.ifError(e);assert.ok(Array.isArray(t));assert.equal(1,t.length);assert.equal("aaron",t[0]._id);assert.equal(3,t[0].value);assert.ok(n);s()})})})})});