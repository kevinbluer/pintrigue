/**
 * Module dependencies.
 */function TestDocument(){Document.apply(this,arguments)}var start=require("./common"),mongoose=start.mongoose,assert=require("assert"),Schema=mongoose.Schema,Document=mongoose.Document,SchemaType=mongoose.SchemaType,VirtualType=mongoose.VirtualType,ObjectId=Schema.ObjectId,ValidatorError=SchemaType.ValidatorError,CastError=SchemaType.CastError,SchemaTypes=Schema.Types,DocumentObjectId=mongoose.Types.ObjectId,Mixed=SchemaTypes.Mixed,MongooseArray=mongoose.Types.Array,vm=require("vm");TestDocument.prototype.__proto__=Document.prototype;TestDocument.prototype._setSchema(new Schema({test:String}));describe("schema",function(){it('can be created without the "new" keyword',function(){var e=Schema({name:String});assert.ok(e instanceof Schema)});it("supports different schematypes",function(){var e=new Schema({date:Date,location:{lat:Number,lng:Number}}),t=new Schema({name:String,owner:ObjectId,fur:String,color:{type:String},age:Number,checkins:[e],friends:[ObjectId],likes:Array,alive:Boolean,extra:Mixed});assert.ok(t.path("name")instanceof SchemaTypes.String);assert.ok(t.path("owner")instanceof SchemaTypes.ObjectId);assert.ok(t.path("fur")instanceof SchemaTypes.String);assert.ok(t.path("color")instanceof SchemaTypes.String);assert.ok(t.path("age")instanceof SchemaTypes.Number);assert.ok(t.path("checkins")instanceof SchemaTypes.DocumentArray);assert.ok(t.path("friends")instanceof SchemaTypes.Array);assert.ok(t.path("likes")instanceof SchemaTypes.Array);assert.ok(t.path("alive")instanceof SchemaTypes.Boolean);assert.ok(t.path("extra")instanceof SchemaTypes.Mixed);assert.strictEqual(t.path("unexistent"),undefined);assert.ok(e.path("date")instanceof SchemaTypes.Date);var n=new Schema({date:"date",location:{lat:"number",lng:"Number"}});assert.ok(n.path("date")instanceof SchemaTypes.Date);assert.ok(n.path("location.lat")instanceof SchemaTypes.Number);assert.ok(n.path("location.lng")instanceof SchemaTypes.Number);var r=new Schema({name:"string",owner:"oid",fur:{type:"string"},color:{type:"String"},checkins:[e],friends:Array,likes:"array",alive:"Bool",alive1:"bool",alive2:"boolean",extra:"mixed",obj:"object",buf:"buffer",Buf:"Buffer"});assert.ok(r.path("name")instanceof SchemaTypes.String);assert.ok(r.path("owner")instanceof SchemaTypes.ObjectId);assert.ok(r.path("fur")instanceof SchemaTypes.String);assert.ok(r.path("color")instanceof SchemaTypes.String);assert.ok(r.path("checkins")instanceof SchemaTypes.DocumentArray);assert.ok(r.path("friends")instanceof SchemaTypes.Array);assert.ok(r.path("likes")instanceof SchemaTypes.Array);assert.ok(r.path("alive")instanceof SchemaTypes.Boolean);assert.ok(r.path("alive1")instanceof SchemaTypes.Boolean);assert.ok(r.path("alive2")instanceof SchemaTypes.Boolean);assert.ok(r.path("extra")instanceof SchemaTypes.Mixed);assert.ok(r.path("obj")instanceof SchemaTypes.Mixed);assert.ok(r.path("buf")instanceof SchemaTypes.Buffer);assert.ok(r.path("Buf")instanceof SchemaTypes.Buffer)});it("supports dot notation for path accessors",function(){var e=new Schema({name:{type:String,"enum":["Edwald","Tobi"]},age:Number}),t=new Schema({name:String,raccoons:[e],location:{city:String,state:String}});assert.ok(t.path("name")instanceof SchemaTypes.String);assert.ok(t.path("raccoons")instanceof SchemaTypes.DocumentArray);assert.ok(t.path("location.city")instanceof SchemaTypes.String);assert.ok(t.path("location.state")instanceof SchemaTypes.String);assert.strictEqual(t.path("location.unexistent"),undefined)});it("allows paths nested > 2 levels",function(){var e=new Schema({first:{second:{third:String}}});assert.ok(e.path("first.second.third")instanceof SchemaTypes.String)});it("default definition",function(){var e=new Schema({simple:{type:String,"default":"a"},array:{type:Array,"default":[1,2,3,4,5]},arrayX:{type:Array,"default":9},arrayFn:{type:Array,"default":function(){return[8]}},callback:{type:Number,"default":function(){assert.equal("b",this.a);return"3"}}});assert.equal(e.path("simple").defaultValue,"a");assert.equal(typeof e.path("callback").defaultValue,"function");assert.equal(e.path("simple").getDefault(),"a");assert.equal(+e.path("callback").getDefault({a:"b"}),3);assert.equal(typeof e.path("array").defaultValue,"function");assert.equal(e.path("array").getDefault(new TestDocument)[3],4);assert.equal(e.path("arrayX").getDefault(new TestDocument)[0],9);assert.equal(typeof e.path("arrayFn").defaultValue,"function");assert.ok(e.path("arrayFn").getDefault(new TestDocument)instanceof MongooseArray)});it("Mixed defaults can be empty arrays",function(){var e=new Schema({mixed1:{type:Mixed,"default":[]},mixed2:{type:Mixed,"default":Array}});assert.ok(e.path("mixed1").getDefault()instanceof Array);assert.equal(e.path("mixed1").getDefault().length,0);assert.ok(e.path("mixed2").getDefault()instanceof Array);assert.equal(e.path("mixed2").getDefault().length,0)});describe("validation",function(){it("invalid arguments are rejected (1044)",function(){assert.throws(function(){new Schema({simple:{type:String,validate:"nope"}})},/Invalid validator/);assert.throws(function(){new Schema({simple:{type:String,validate:["nope"]}})},/Invalid validator/);assert.throws(function(){new Schema({simple:{type:String,validate:{nope:1,msg:"nope"}}})},/Invalid validator/);assert.throws(function(){new Schema({simple:{type:String,validate:[{nope:1,msg:"nope"},"nope"]}})},/Invalid validator/)});it("string required",function(){var e=new Schema({simple:String});e.path("simple").required(!0);assert.equal(e.path("simple").validators.length,1);e.path("simple").doValidate(null,function(e){assert.ok(e instanceof ValidatorError)});e.path("simple").doValidate(undefined,function(e){assert.ok(e instanceof ValidatorError)});e.path("simple").doValidate("",function(e){assert.ok(e instanceof ValidatorError)});e.path("simple").doValidate("woot",function(e){assert.ifError(e)})});it("string enum",function(){var e=new Schema({complex:{type:String,"enum":["a","b",undefined,"c",null]}});assert.ok(e.path("complex")instanceof SchemaTypes.String);assert.deepEqual(e.path("complex").enumValues,["a","b","c",null]);assert.equal(e.path("complex").validators.length,1);e.path("complex").enum("d","e");assert.deepEqual(e.path("complex").enumValues,["a","b","c",null,"d","e"]);e.path("complex").doValidate("x",function(e){assert.ok(e instanceof ValidatorError)});e.path("complex").doValidate(undefined,function(e){assert.ifError(e)});e.path("complex").doValidate(null,function(e){assert.ifError(e)});e.path("complex").doValidate("da",function(e){assert.ok(e instanceof ValidatorError)})});it("string regexp",function(){var e=new Schema({simple:{type:String,match:/[a-z]/}});assert.equal(1,e.path("simple").validators.length);e.path("simple").doValidate("az",function(e){assert.ifError(e)});e.path("simple").match(/[0-9]/);assert.equal(2,e.path("simple").validators.length);e.path("simple").doValidate("12",function(e){assert.ok(e instanceof ValidatorError)});e.path("simple").doValidate("a12",function(e){assert.ifError(e)});e.path("simple").doValidate("",function(e){assert.ifError(e)});e.path("simple").doValidate(null,function(e){assert.ifError(e)});e.path("simple").doValidate(undefined,function(e){assert.ifError(e)});e.path("simple").validators=[];e.path("simple").match(/[1-9]/);e.path("simple").doValidate(0,function(e){assert.ok(e instanceof ValidatorError)})});it("number min and max",function(){var e=new Schema({friends:{type:Number,max:15,min:5}});assert.equal(e.path("friends").validators.length,2);e.path("friends").doValidate(10,function(e){assert.ifError(e)});e.path("friends").doValidate(100,function(e){assert.ok(e instanceof ValidatorError)});e.path("friends").doValidate(1,function(e){assert.ok(e instanceof ValidatorError)});e.path("friends").doValidate(null,function(e){assert.ifError(e)})});it("number required",function(){var e=new Schema({friends:{type:Number,required:!0}});e.path("friends").doValidate(null,function(e){assert.ok(e instanceof ValidatorError)});e.path("friends").doValidate(undefined,function(e){assert.ok(e instanceof ValidatorError)});e.path("friends").doValidate(0,function(e){assert.ifError(e)})});it("date required",function(){var e=new Schema({birth_date:{type:Date,required:!0}});e.path("birth_date").doValidate(null,function(e){assert.ok(e instanceof ValidatorError)});e.path("birth_date").doValidate(undefined,function(e){assert.ok(e instanceof ValidatorError)});e.path("birth_date").doValidate(new Date,function(e){assert.ifError(e)})});it("objectid required",function(){var e=new Schema({owner:{type:ObjectId,required:!0}});e.path("owner").doValidate(new DocumentObjectId,function(e){assert.ifError(e)});e.path("owner").doValidate(null,function(e){assert.ok(e instanceof ValidatorError)});e.path("owner").doValidate(undefined,function(e){assert.ok(e instanceof ValidatorError)})});it("array required",function(){var e=new Schema({likes:{type:Array,required:!0}});e.path("likes").doValidate(null,function(e){assert.ok(e instanceof ValidatorError)});e.path("likes").doValidate(undefined,function(e){assert.ok(e instanceof ValidatorError)});e.path("likes").doValidate([],function(e){assert.ok(e instanceof ValidatorError)})});it("boolean required",function(){var e=new Schema({isFerret:{type:Boolean,required:!0}});e.path("isFerret").doValidate(null,function(e){assert.ok(e instanceof ValidatorError)});e.path("isFerret").doValidate(undefined,function(e){assert.ok(e instanceof ValidatorError)});e.path("isFerret").doValidate(!0,function(e){assert.ifError(e)});e.path("isFerret").doValidate(!1,function(e){assert.ifError(e)})});describe("async",function(){it("works",function(e){function n(n,r){setTimeout(function(){t++;r(n===!0);2===t&&e()},5)}var t=0,r=new Schema({ferret:{type:Boolean,validate:n}});r.path("ferret").doValidate(!0,function(e){assert.ifError(e)});r.path("ferret").doValidate(!1,function(e){assert.ok(e instanceof Error)})});it("multiple",function(e){function n(n,r){setTimeout(function(){t++;r(n===!0);2===t&&e()},5)}var t=0,r=new Schema({ferret:{type:Boolean,validate:[{validator:n,msg:"validator1"},{validator:n,msg:"validator2"}]}});r.path("ferret").doValidate(!0,function(e){assert.ifError(e)})});it("scope",function(e){function n(e,n){assert.equal("b",this.a);setTimeout(function(){t=!0;n(!0)},5)}var t=!1,r=new Schema({ferret:{type:Boolean,validate:n}});r.path("ferret").doValidate(!0,function(n){assert.ifError(n);assert.equal(!0,t);e()},{a:"b"})})})});describe("casting",function(){it("number",function(){var e=new Schema({age:Number});assert.equal("number",typeof e.path("age").cast("0"));assert.equal(0,+e.path("age").cast("0"));assert.equal("number",typeof e.path("age").cast(0));assert.equal(0,+e.path("age").cast(0))});describe("string",function(){it("works",function(){function t(){}var e=new Schema({nickname:String});t.prototype.toString=function(){return"woot"};assert.equal("string",typeof e.path("nickname").cast(0));assert.equal("0",e.path("nickname").cast(0));assert.equal("string",typeof e.path("nickname").cast(new t));assert.equal("woot",e.path("nickname").cast(new t))});it('casts undefined to "undefined"',function(e){var t=require("./common")(),n=new Schema({arr:[String]}),r=t.model("castingStringArrayWithUndefined",n);r.find({arr:{$in:[undefined]}},function(n){t.close();assert.equal(n&&n.message,'Cast to string failed for value "undefined"');e()})})});it("date",function(){var e=new Schema({birth_date:{type:Date}});assert.ok(e.path("birth_date").cast(1294525628301)instanceof Date);assert.ok(e.path("birth_date").cast("8/24/2000")instanceof Date);assert.ok(e.path("birth_date").cast(new Date)instanceof Date)});it("objectid",function(){var e=new Schema({owner:{type:ObjectId}}),t=new TestDocument,n=t._id.toString();assert.ok(e.path("owner").cast("4c54f3453e688c000000001a")instanceof DocumentObjectId);assert.ok(e.path("owner").cast(new DocumentObjectId)instanceof DocumentObjectId);assert.ok(e.path("owner").cast(t)instanceof DocumentObjectId);assert.equal(n,e.path("owner").cast(t).toString())});it("array",function(){var e=new Schema({oids:[ObjectId],dates:[Date],numbers:[Number],strings:[String],buffers:[Buffer],nocast:[],mixed:[Mixed]}),t=e.path("oids").cast(["4c54f3453e688c000000001a",new DocumentObjectId]);assert.ok(t[0]instanceof DocumentObjectId);assert.ok(t[1]instanceof DocumentObjectId);var n=e.path("dates").cast(["8/24/2010",1294541504958]);assert.ok(n[0]instanceof Date);assert.ok(n[1]instanceof Date);var r=e.path("numbers").cast([152,"31"]);assert.equal(typeof r[0],"number");assert.equal(typeof r[1],"number");var i=e.path("strings").cast(["test",123]);assert.equal(typeof i[0],"string");assert.equal("test",i[0]);assert.equal(typeof i[1],"string");assert.equal("123",i[1]);var s=e.path("buffers").cast(["\0\0\0",new Buffer("abc")]);assert.ok(s[0]instanceof Buffer);assert.ok(s[1]instanceof Buffer);var o=e.path("nocast").cast(["test",123]);assert.equal(typeof o[0],"string");assert.equal("test",o[0]);assert.equal(typeof o[1],"number");assert.equal(123,o[1]);var u=e.path("mixed").cast(["test",123,"123",{},new Date,new DocumentObjectId]);assert.equal(typeof u[0],"string");assert.equal(typeof u[1],"number");assert.equal(typeof u[2],"string");assert.equal(typeof u[3],"object");assert.ok(u[4]instanceof Date);assert.ok(u[5]instanceof DocumentObjectId)});it("boolean",function(){var e=new Schema({isFerret:{type:Boolean,required:!0}});assert.strictEqual(e.path("isFerret").cast(null),null);assert.equal(!1,e.path("isFerret").cast(undefined));assert.equal(!1,e.path("isFerret").cast(!1));assert.equal(!1,e.path("isFerret").cast(0));assert.equal(!1,e.path("isFerret").cast("0"));assert.equal(!0,e.path("isFerret").cast({}));assert.equal(!0,e.path("isFerret").cast(!0));assert.equal(!0,e.path("isFerret").cast(1));assert.equal(!0,e.path("isFerret").cast("1"))})});it("methods declaration",function(){var e=new Schema;e.method("test",function(){});e.method({a:function(){},b:function(){}});assert.equal(3,Object.keys(e.methods).length)});it("static declaration",function(){var e=new Schema;e.static("test",function(){});e.static({a:function(){},b:function(){},c:function(){}});assert.equal(Object.keys(e.statics).length,4)});describe("setters",function(){it("work",function(){function e(e){return e.toLowerCase()}var t=new Schema({name:{type:String,set:e}});assert.equal("woot",t.path("name").applySetters("WOOT"));assert.equal(1,t.path("name").setters.length);t.path("name").set(function(e){return e+"WOOT"});assert.equal("wootwoot",t.path("name").applySetters("WOOT"));assert.equal(2,t.path("name").setters.length)});it("order",function(){function e(e,t){return e&&e._id?e._id:e}var t=new Schema({name:{type:Schema.ObjectId,set:e}}),n=new DocumentObjectId,r=n.toString(),i={_id:n};assert.equal(t.path("name").applySetters(r,{a:"b"}).toString(),r);assert.equal(t.path("name").applySetters(i,{a:"b"}).toString(),r);assert.equal(t.path("name").applySetters(n,{a:"b"}).toString(),r)});it("scope",function(){function e(e,t){assert.equal("b",this.a);assert.equal("name",t.path);return e.toLowerCase()}var t=new Schema({name:{type:String,set:e}});assert.equal("what",t.path("name").applySetters("WHAT",{a:"b"}))});it("casting",function(){function e(e){assert.equal("number",typeof e);assert.equal(0,e);return"last"}function t(e){return 0}var n=new Schema({name:{type:String,set:e}});n.path("name").set(t);assert.equal("last",n.path("name").applySetters("woot"))});describe("string",function(){it("lowercase",function(){var e=new Schema({name:{type:String,lowercase:!0}});assert.equal("what",e.path("name").applySetters("WHAT"))});it("uppercase",function(){var e=new Schema({name:{type:String,uppercase:!0}});assert.equal("WHAT",e.path("name").applySetters("what"))});it("trim",function(){var e=new Schema({name:{type:String,uppercase:!0,trim:!0}});assert.equal("WHAT",e.path("name").applySetters("  what   "))})});it("applying when none have been defined",function(){var e=new Schema({name:String});assert.equal("woot",e.path("name").applySetters("woot"))});it("assignment of non-functions throw",function(){var e=new Schema({fun:String}),t,n;try{e.path("fun").set(4)}catch(r){t=r}assert.ok(t);assert.equal(t.message,"A setter must be a function.")})});describe("getters",function(){it("work",function(){function e(e){return e+" woot"}var t=new Schema({name:{type:String,get:e}});assert.equal(1,t.path("name").getters.length);assert.equal("test woot",t.path("name").applyGetters("test"))});it("order",function(){function e(e,t){return e?"$"+e:e}var t=new Schema({name:{type:Number,get:e}});assert.equal("$30",t.path("name").applyGetters(30,{a:"b"}))});it("scope",function(){function e(e,t){assert.equal("b",this.a);assert.equal("name",t.path);return e.toLowerCase()}var t=new Schema({name:{type:String,get:e}});assert.equal("yep",t.path("name").applyGetters("YEP",{a:"b"}))});it("casting",function(){function e(e){assert.equal("number",typeof e);assert.equal(0,e);return"last"}function t(e){return 0}var n=new Schema({name:{type:String,get:e}});n.path("name").get(t);assert.equal("last",n.path("name").applyGetters("woot"))});it("applying when none have been defined",function(){var e=new Schema({name:String});assert.equal("woot",e.path("name").applyGetters("woot"))});it("assignment of non-functions throw",function(){var e=new Schema({fun:String}),t,n;try{e.path("fun").get(!0)}catch(r){t=r}assert.ok(t);assert.equal(t.message,"A getter must be a function.")});it("auto _id",function(){var e=new Schema({name:String});assert.ok(e.path("_id")instanceof Schema.ObjectId);var e=new Schema({name:String},{_id:!0});assert.ok(e.path("_id")instanceof Schema.ObjectId);var e=new Schema({name:String},{_id:!1});assert.equal(undefined,e.path("_id"));var e=new Schema({name:String},{noId:!1});assert.ok(e.path("_id")instanceof Schema.ObjectId);var e=new Schema({name:String},{noId:!0});assert.equal(undefined,e.path("_id"))});it("auto id",function(){var e=new Schema({name:String});assert.ok(e.virtualpath("id")instanceof mongoose.VirtualType);var e=new Schema({name:String},{id:!0});assert.ok(e.virtualpath("id")instanceof mongoose.VirtualType);var e=new Schema({name:String},{id:!1});assert.equal(undefined,e.virtualpath("id"));var e=new Schema({name:String},{noVirtualId:!1});assert.ok(e.virtualpath("id")instanceof mongoose.VirtualType);var e=new Schema({name:String},{noVirtualId:!0});assert.equal(undefined,e.virtualpath("id"))})});describe("hooks",function(){it("registration",function(){var e=new Schema;e.pre("save",function(){});assert.equal(1,e.callQueue.length);e.post("save",function(){});assert.equal(2,e.callQueue.length);e.pre("save",function(){});assert.equal(3,e.callQueue.length)})});describe("indexes",function(){describe("definition",function(){it("basic",function(){var e=new Schema({name:{type:String,index:!0}});assert.equal(!0,e.path("name")._index);e.path("name").index({unique:!0});assert.deepEqual(e.path("name")._index,{unique:!0});e.path("name").unique(!1);assert.deepEqual(e.path("name")._index,{unique:!1});var t,n;t=new Schema({name:{type:String,sparse:!0}});assert.deepEqual(t.path("name")._index,{sparse:!0});t=new Schema({name:{type:String,unique:!0}});assert.deepEqual(t.path("name")._index,{unique:!0});t=new Schema({name:{type:String,expires:"1.5m"}});assert.deepEqual(t.path("name")._index,{expiresAfterSeconds:90});t=new Schema({name:{type:String,expires:200}});assert.deepEqual(t.path("name")._index,{expiresAfterSeconds:200});t=new Schema({name:{type:String,sparse:!0,unique:!0}});assert.deepEqual(t.path("name")._index,{sparse:!0,unique:!0});t=new Schema({name:{type:String,unique:!0,sparse:!0}});n=t.path("name")._index;assert.equal(!0,n.unique);assert.equal(!0,n.sparse);t=new Schema({name:{type:String,index:{sparse:!0,unique:!0,expiresAfterSeconds:65}}});n=t.path("name")._index;assert.equal(!0,n.unique);assert.equal(!0,n.sparse);assert.equal(65,n.expiresAfterSeconds);t=new Schema({name:{type:String,index:{sparse:!0,unique:!0,expires:"24h"}}});n=t.path("name")._index;assert.equal(!0,n.unique);assert.equal(!0,n.sparse);assert.equal(86400,n.expiresAfterSeconds)});it("compound",function(){var e=new Schema({name:{type:String,index:!0},last:{type:Number,sparse:!0},nope:{type:String,index:{background:!1}}});e.index({firstname:1,last:1},{unique:!0,expires:"1h"});e.index({firstname:1,nope:1},{unique:!0,background:!1});assert.deepEqual(e.indexes(),[[{name:1},{background:!0}],[{last:1},{sparse:!0,background:!0}],[{nope:1},{background:!1}],[{firstname:1,last:1},{unique:!0,expiresAfterSeconds:3600,background:!0}],[{firstname:1,nope:1},{unique:!0,background:!1}]])})})});describe("plugins",function(){var e=new Schema,t=!1;e.plugin(function(n){assert.equal(n,e);t=!0});assert.equal(!0,t)});describe("options",function(){it("defaults are set",function(){var e=new Schema;assert.equal("object",typeof e.options);assert.equal(!0,e.options.safe);assert.equal(!0,e.options.strict);assert.equal(!1,e.options.capped);assert.equal("__v",e.options.versionKey);assert.equal(null,e.options.shardKey);assert.equal(!0,e.options._id)});it("setting",function(){var e=new Schema({},{collection:"users"});e.set("a","b");e.set("safe",!1);assert.equal("users",e.options.collection);assert.equal("b",e.options.a);assert.equal(e.options.safe,!1)})});describe("virtuals",function(){it("works",function(){var e=new Schema({firstName:String,lastName:String});e.virtual("fullName").get(function(){return this.get("firstName")+" "+this.get("lastName")}).set(function(e){var t=e.split(" ");this.set("firstName",t[0]);this.set("lastName",t[1])});assert.ok(e.virtualpath("fullName")instanceof VirtualType)});describe("id",function(){it("default creation of id can be overridden (gh-298)",function(){assert.doesNotThrow(function(){new Schema({id:String})})});it("disabling",function(){var e=new Schema({name:String},{noVirtualId:!0});assert.strictEqual(undefined,e.virtuals.id)})});describe("getter",function(){it("scope",function(){var e=new Schema;e.virtual("name").get(function(e,t){assert.equal("b",this.a);assert.equal("name",t.path);return e.toLowerCase()});assert.equal("yep",e.virtualpath("name").applyGetters("YEP",{a:"b"}))})});describe("setter",function(){it("scope",function(){var e=new Schema;e.virtual("name").set(function(e,t){assert.equal("b",this.a);assert.equal("name",t.path);return e.toLowerCase()});assert.equal("yep",e.virtualpath("name").applySetters("YEP",{a:"b"}))})})});describe("other contexts",function(){it("work",function(){var e="code = {  name: String, arr1: Array , arr2: { type: [] }, date: Date  , num: { type: Number }, bool: Boolean, nest: { sub: { type: {}, required: true }}}",t=vm.createScript(e,"testSchema.vm"),n={code:null};t.runInNewContext(n);var r=new Schema(n.code);assert.ok(r.path("nest.sub")instanceof SchemaTypes.Mixed);assert.ok(r.path("name")instanceof SchemaTypes.String);assert.ok(r.path("arr1")instanceof SchemaTypes.Array);assert.ok(r.path("arr2")instanceof SchemaTypes.Array);assert.ok(r.path("date")instanceof SchemaTypes.Date);assert.ok(r.path("num")instanceof SchemaTypes.Number);assert.ok(r.path("bool")instanceof SchemaTypes.Boolean)})});describe("#add()",function(){it("does not polute existing paths",function(){var e={name:String},t=new Schema(e);t.add({age:Number},"name.");assert.equal(!1,"age"in e.name)});it("merging nested objects (gh-662)",function(e){var t=start(),n=new Schema({a:{foo:String}});n.add({a:{b:{bar:String}}});mongoose.model("Merged",n);var r=t.model("Merged","merged_"+Math.random()),i=new r({a:{foo:"baz",b:{bar:"qux"}}});i.save(function(n){assert.ifError(n);r.findById(i.id,function(n,r){t.close();assert.ifError(n);assert.equal(r.a.foo,"baz");assert.equal(r.a.b.bar,"qux");e()})})})});it("debugging msgs",function(){var e;try{new Schema({name:{first:null}})}catch(t){e=t}assert.equal(e.message,"Invalid value for schema path `name.first`");try{new Schema({age:undefined})}catch(t){e=t}assert.equal(e.message,"Invalid value for schema path `age`")});describe("construction",function(){it("array of object literal missing a type is interpreted as DocumentArray",function(){var e=new mongoose.Mongoose,t=new Schema({arr:[{something:{type:String}}]});assert.ok(t.path("arr")instanceof SchemaTypes.DocumentArray);var n=e.model("objectliteralschema",t),r=new n({arr:[{something:"wicked this way comes"}]});assert.equal("wicked this way comes",r.arr[0].something);assert.ok(r.arr[0]._id)});it("array of object literal with type.type is interpreted as DocumentArray",function(){var e=new mongoose.Mongoose,t=new Schema({arr:[{type:{type:String}}]});assert.ok(t.path("arr")instanceof SchemaTypes.DocumentArray);var n=e.model("objectliteralschema2",t),r=new n({arr:[{type:"works"}]});assert.equal("works",r.arr[0].type);assert.ok(r.arr[0]._id)});it("of nested schemas should throw (gh-700)",function(){var e=new Schema({title:String}),t;try{new Schema({blah:Boolean,a:e})}catch(n){t=n}assert.ok(t);assert.ok(/Did you try nesting Schemas/.test(t.message))})});describe("conflicting property names",function(){it("throws",function(){var e=new Schema({name:String});assert.throws(function(){new Schema({on:String,child:[e]})},/`on` may not be used as a schema pathname/);assert.throws(function(){new Schema({options:String})},/`options` may not be used as a schema pathname/);assert.doesNotThrow(function(){new Schema({model:String})});assert.throws(function(){new Schema({collection:String})},/`collection` may not be used as a schema pathname/);assert.throws(function(){new Schema({schema:String})},/`schema` may not be used as a schema pathname/);assert.throws(function(){new Schema({db:String})},/`db` may not be used as a schema pathname/);assert.throws(function(){new Schema({modelName:String})},/`modelName` may not be used as a schema pathname/);assert.throws(function(){new Schema({isNew:String})},/`isNew` may not be used as a schema pathname/);assert.throws(function(){new Schema({errors:String})},/`errors` may not be used as a schema pathname/);assert.throws(function(){new Schema({init:String})},/`init` may not be used as a schema pathname/);assert.doesNotThrow(function(){Schema({child:[{parent:String}]})});assert.doesNotThrow(function(){Schema({child:[{parentArray:String}]})})})})});