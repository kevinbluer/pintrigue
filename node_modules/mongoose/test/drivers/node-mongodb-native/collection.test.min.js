/**
 * Module dependencies.
 */var start=require("../../common"),assert=require("assert"),mongoose=start.mongoose,Schema=mongoose.Schema;mongoose.model("NativeDriverTest",new Schema({title:String}));describe("drivers: native:",function(){it("sparse index works",function(e){var t=start(),n=t.model("NativeDriverTest");n.collection.ensureIndex({title:1},{sparse:!0},function(r){assert.ifError(r);n.collection.getIndexes(function(n,r){t.close();assert.ifError(n);assert.ok(r instanceof Object);assert.deepEqual(r.title_1,[["title",1]]);e()})})});it("traditional ensureIndex spec syntax for fields works",function(e){var t=start(),n=t.model("NativeDriverTest");n.collection.ensureIndex([["a",1]],function(){t.close();e()})});it("unique index failure passes error",function(e){var t=start(),n=new Schema({title:String}),r=t.model("NativeDriverTestUnique",n);r.create({title:"x"},{title:"x"},function(n){assert.ifError(n);r.collection.ensureIndex({title:1},{unique:!0,safe:!0},function(n){t.close();assert.ok(/E11000 duplicate key error index/.test(n.message));e()})})})});