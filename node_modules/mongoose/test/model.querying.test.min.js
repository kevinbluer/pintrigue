/**
 * Test dependencies.
 */var start=require("./common"),assert=require("assert"),mongoose=start.mongoose,random=require("../lib/utils").random,Query=require("../lib/query"),Schema=mongoose.Schema,SchemaType=mongoose.SchemaType,CastError=SchemaType.CastError,ObjectId=Schema.ObjectId,MongooseBuffer=mongoose.Types.Buffer,DocumentObjectId=mongoose.Types.ObjectId,Comments=new Schema;Comments.add({title:String,date:Date,body:String,comments:[Comments]});var BlogPostB=new Schema({title:String,author:String,slug:String,date:Date,meta:{date:Date,visitors:Number},published:Boolean,mixed:{},numbers:[Number],tags:[String],sigs:[Buffer],owners:[ObjectId],comments:[Comments],def:{type:String,"default":"kandinsky"}});mongoose.model("BlogPostB",BlogPostB);var collection="blogposts_"+random(),ModSchema=new Schema({num:Number,str:String});mongoose.model("Mod",ModSchema);var geoSchema=new Schema({loc:{type:[Number],index:"2d"}});describe("model: querying:",function(){it("find returns a Query",function(){var e=start(),t=e.model("BlogPostB",collection);assert.ok(t.find({})instanceof Query);assert.ok(t.find({},{})instanceof Query);assert.ok(t.find({},"")instanceof Query);assert.ok(t.find({},{},{})instanceof Query);assert.ok(t.find({},null,{})instanceof Query);e.close()});it("findOne returns a Query",function(){var e=start(),t=e.model("BlogPostB",collection);assert.ok(t.findOne({})instanceof Query);assert.ok(t.findOne({},{})instanceof Query);assert.ok(t.findOne({},"")instanceof Query);assert.ok(t.findOne({},{},{})instanceof Query);assert.ok(t.findOne({},null,{})instanceof Query);e.close()});it("an empty find does not hang",function(e){function r(){t.close();e()}var t=start(),n=t.model("BlogPostB",collection);n.find({},r)});it("a query is executed when a callback is passed",function(e){function s(){if(--r)return;t.close();e()}var t=start(),n=t.model("BlogPostB",collection),r=5,i={_id:new DocumentObjectId};assert.ok(n.find(i,s)instanceof Query);assert.ok(n.find(i,{},s)instanceof Query);assert.ok(n.find(i,null,s)instanceof Query);assert.ok(n.find(i,{},{},s)instanceof Query);assert.ok(n.find(i,"",{},s)instanceof Query)});it("query is executed where a callback for findOne",function(e){function s(){if(--r)return;t.close();e()}var t=start(),n=t.model("BlogPostB",collection),r=5,i={_id:new DocumentObjectId};assert.ok(n.findOne(i,s)instanceof Query);assert.ok(n.findOne(i,{},s)instanceof Query);assert.ok(n.findOne(i,"",s)instanceof Query);assert.ok(n.findOne(i,{},{},s)instanceof Query);assert.ok(n.findOne(i,null,{},s)instanceof Query)});describe("count",function(){it("returns a Query",function(){var e=start(),t=e.model("BlogPostB",collection);assert.ok(t.count({})instanceof Query);e.close()});it("Query executes when you pass a callback",function(e){function i(){if(--r)return;t.close();e()}var t=start(),n=t.model("BlogPostB",collection),r=2;assert.ok(n.count({},i)instanceof Query);assert.ok(n.count(i)instanceof Query)});it("counts documents",function(e){var t=start(),n=t.model("BlogPostB",collection),r="Wooooot "+random(),i=new n;i.set("title",r);i.save(function(i){assert.ifError(i);var s=new n;s.set("title",r);s.save(function(i){assert.ifError(i);n.count({title:r},function(n,r){assert.ifError(n);assert.equal("number",typeof r);assert.equal(2,r);t.close();e()})})})})});describe("distinct",function(){it("returns a Query",function(){var e=start(),t=e.model("BlogPostB",collection);assert.ok(t.distinct("title",{})instanceof Query);e.close()});it("executes when you pass a callback",function(e){var t=start(),n=new Schema({zip:String});n=t.model("Address",n,"addresses_"+random());n.create({zip:"10010"},{zip:"10010"},{zip:"99701"},function(r,i,s,o){assert.strictEqual(null,r);var u=n.distinct("zip",{},function(n,r){assert.ifError(n);assert.deepEqual(r,["10010","99701"]);t.close();e()});assert.ok(u instanceof Query)})})});describe("update",function(){it("returns a Query",function(){var e=start(),t=e.model("BlogPostB",collection);assert.ok(t.update({},{})instanceof Query);assert.ok(t.update({},{},{})instanceof Query);e.close()});it("Query executes when you pass a callback",function(e){function i(){if(--r)return;t.close();e()}var t=start(),n=t.model("BlogPostB",collection),r=2;assert.ok(n.update({title:random()},{},i)instanceof Query);assert.ok(n.update({title:random()},{},{},i)instanceof Query)})});describe("findOne",function(){it("works",function(e){var t=start(),n=t.model("BlogPostB",collection),r="Wooooot "+random(),i=new n;i.set("title",r);i.save(function(i){assert.ifError(i);n.findOne({title:r},function(n,i){assert.ifError(n);assert.equal(r,i.get("title"));assert.equal(!1,i.isNew);t.close();e()})})});it("casts $modifiers",function(e){var t=start(),n=t.model("BlogPostB",collection),r=new n({meta:{visitors:-10}});r.save(function(i){assert.ifError(i);var s={"meta.visitors":{$gt:"-20",$lt:-1}};n.findOne(s,function(n,i){assert.ifError(n);assert.ok(i);assert.equal(i.get("meta.visitors").valueOf(),r.get("meta.visitors").valueOf());i.id;assert.equal(i.get("_id").toString(),r.get("_id"));t.close();e()})})});it("querying if an array contains one of multiple members $in a set",function(e){var t=start(),n=t.model("BlogPostB",collection),r=new n;r.tags.push("football");r.save(function(i){assert.ifError(i);n.findOne({tags:{$in:["football","baseball"]}},function(i,s){assert.ifError(i);assert.equal(s._id.toString(),r._id);n.findOne({_id:r._id,tags:/otba/i},function(n,i){assert.ifError(n);assert.equal(i._id.toString(),r._id);t.close();e()})})})});it("querying if an array contains one of multiple members $in a set 2",function(e){function s(){if(--i)return;t.close();e()}var t=start(),n=t.model("BlogPostB",collection),r=new n({tags:["gooberOne"]});r.save(function(e){assert.ifError(e);var t={tags:{$in:["gooberOne"]}};n.findOne(t,function(e,t){s();assert.ifError(e);assert.ok(!!~t.tags.indexOf("gooberOne"));assert.equal(t._id.toString(),r._id)})});r.collection.insert({meta:{visitors:9898,a:null}},{},function(e,t){assert.ifError(e);n.findOne({_id:t[0]._id},function(e,t){s();assert.ifError(e);assert.equal(t.get("meta.visitors"),9898)})});var i=2});it("querying via $where a string",function(e){var t=start(),n=t.model("BlogPostB",collection);n.create({title:"Steve Jobs",author:"Steve Jobs"},function(r,i){assert.ifError(r);n.findOne({$where:"this.title && this.title === this.author"},function(n,r){assert.ifError(n);assert.equal(r._id.toString(),i._id);t.close();e()})})});it("querying via $where a function",function(e){var t=start(),n=t.model("BlogPostB",collection);n.create({author:"Atari",slug:"Atari"},function(r,i){assert.ifError(r);n.findOne({$where:function(){return this.author&&this.slug&&this.author===this.slug}},function(n,r){assert.ifError(n);assert.equal(r._id.toString(),i._id);t.close();e()})})});it("based on nested fields",function(e){var t=start(),n=t.model("BlogPostB",collection),r=new n({meta:{visitors:5678}});r.save(function(i){assert.ifError(i);n.findOne({"meta.visitors":5678},function(n,i){assert.ifError(n);assert.equal(i.get("meta.visitors").valueOf(),r.get("meta.visitors").valueOf());assert.equal(i.get("_id").toString(),r.get("_id"));t.close();e()})})});it("based on embedded doc fields (gh-242, gh-463)",function(e){var t=start(),n=t.model("BlogPostB",collection);n.create({comments:[{title:"i should be queryable"}],numbers:[1,2,33333],tags:["yes","no"]},function(r,i){assert.ifError(r);n.findOne({"comments.title":"i should be queryable"},function(r,s){assert.ifError(r);assert.equal(s._id.toString(),i._id);n.findOne({"comments.0.title":"i should be queryable"},function(r,s){assert.ifError(r);assert.equal(s._id.toString(),i._id);n.findOne({"numbers.2":33333},function(r,s){assert.ifError(r);assert.equal(s._id.toString(),i._id);n.findOne({"tags.1":"no"},function(n,r){assert.ifError(n);assert.equal(r._id.toString(),i._id);t.close();e()})})})})})});it("works with nested docs and string ids (gh-389)",function(e){var t=start(),n=t.model("BlogPostB",collection);n.create({comments:[{title:"i should be queryable by _id"},{title:"me too me too!"}]},function(r,i){assert.ifError(r);var s=i.comments[1]._id.toString();n.findOne({"comments._id":s},function(n,r){t.close();assert.ifError(n);assert.strictEqual(!!r,!0,"Find by nested doc id hex string fails");assert.equal(r._id.toString(),i._id);e()})})});it("using #all with nested #elemMatch",function(e){var t=start(),n=t.model("BlogPostB",collection+"_nestedElemMatch"),r=new n({title:"nested elemMatch"});r.comments.push({title:"comment A"},{title:"comment B"},{title:"comment C"});var i=r.comments[0]._id,s=r.comments[1]._id,o=r.comments[2]._id;r.save(function(i){assert.ifError(i);var u={$elemMatch:{_id:s,title:"comment B"}},a={$elemMatch:{_id:o.toString(),title:"comment C"}};n.findOne({comments:{$all:[u,a]}},function(n,i){t.close();assert.ifError(n);assert.equal(i.id,r.id);e()})})});it("using #or with nested #elemMatch",function(e){var t=start(),n=t.model("BlogPostB",collection),r=new n({title:"nested elemMatch"});r.comments.push({title:"comment D"},{title:"comment E"},{title:"comment F"});var i=r.comments[0]._id,s=r.comments[1]._id,o=r.comments[2]._id;r.save(function(i){assert.ifError(i);var o={comments:{$elemMatch:{title:"comment Z"}}},u={comments:{$elemMatch:{_id:s.toString(),title:"comment E"}}};n.findOne({$or:[o,u]},function(n,i){t.close();assert.ifError(n);assert.equal(i.id,r.id);e()})})});it("buffer $in array",function(e){var t=start(),n=t.model("BlogPostB",collection);n.create({sigs:[new Buffer([1,2,3]),new Buffer([4,5,6]),new Buffer([7,8,9])]},function(r,i){assert.ifError(r);n.findOne({sigs:new Buffer([1,2,3])},function(r,s){assert.ifError(r);s.id;assert.equal(s._id.toString(),i._id);var o={sigs:{$in:[new Buffer([3,3,3]),new Buffer([4,5,6])]}};n.findOne(o,function(n,r){assert.ifError(n);t.close();e()})})})});it("regex with Array (gh-599)",function(e){var t=start(),n=t.model("BlogPostB",random());n.create({tags:"wooof baaaark meeeeow".split(" ")},function(r,i){assert.ifError(r);n.findOne({tags:/ooof$/},function(r,i){assert.ifError(r);assert.strictEqual(!0,!!i);assert.ok(!!~i.tags.indexOf("meeeeow"));n.findOne({tags:{$regex:"eow$"}},function(n,r){t.close();assert.ifError(n);assert.strictEqual(!0,!!r);assert.strictEqual(!0,!!~r.tags.indexOf("meeeeow"));e()})})})});it("regex with options",function(e){var t=start(),n=t.model("BlogPostB",collection),r=new n({title:"$option queries"});r.save(function(i){assert.ifError(i);n.findOne({title:{$regex:" QUERIES$",$options:"i"}},function(n,i){t.close();assert.strictEqual(null,n,n&&n.stack);assert.equal(i.id,r.id);e()})})})});describe("findById",function(){it("works",function(e){var t=start(),n=t.model("BlogPostB",collection),r="Edwald "+random(),i=new n;i.set("title",r);i.save(function(s){assert.ifError(s);var o=2;n.findById(i.get("_id"),function(i,s){assert.ifError(i);assert.ok(s instanceof n);assert.equal(r,s.get("title"));if(--o)return;t.close();e()});n.findById(i.get("_id").toHexString(),function(i,s){assert.ifError(i);assert.ok(s instanceof n);assert.equal(r,s.get("title"));if(--o)return;t.close();e()})})});it("works with partial initialization",function(e){var t=start(),n=t.model("BlogPostB",collection),r=5,i=new n;i.title="hahaha";i.slug="woot";i.meta.visitors=53;i.tags=["humidity","soggy"];i.save(function(s){assert.ifError(s);n.findById(i.get("_id"),function(n,i){assert.ifError(n);assert.equal(!0,i.isInit("title"));assert.equal(!0,i.isInit("slug"));assert.equal(!1,i.isInit("date"));assert.equal(!0,i.isInit("meta.visitors"));assert.equal(53,i.meta.visitors.valueOf());assert.equal(2,i.tags.length);if(--r)return;t.close();e()});n.findById(i.get("_id"),"title",function(n,i){assert.ifError(n);assert.equal(!0,i.isInit("title"));assert.equal(!1,i.isInit("slug"));assert.equal(!1,i.isInit("date"));assert.equal(!1,i.isInit("meta.visitors"));assert.equal(undefined,i.meta.visitors);assert.equal(undefined,i.tags);if(--r)return;t.close();e()});n.findById(i.get("_id"),"-slug",function(n,i){assert.ifError(n);assert.equal(!0,i.isInit("title"));assert.equal(!1,i.isInit("slug"));assert.equal(!1,i.isInit("date"));assert.equal(!0,i.isInit("meta.visitors"));assert.equal(53,i.meta.visitors);assert.equal(2,i.tags.length);if(--r)return;t.close();e()});n.findById(i.get("_id"),{title:1},function(n,i){assert.ifError(n);assert.equal(!0,i.isInit("title"));assert.equal(!1,i.isInit("slug"));assert.equal(!1,i.isInit("date"));assert.equal(!1,i.isInit("meta.visitors"));assert.equal(undefined,i.meta.visitors);assert.equal(undefined,i.tags);if(--r)return;t.close();e()});n.findById(i.get("_id"),"slug",function(n,i){assert.ifError(n);assert.equal(!1,i.isInit("title"));assert.equal(!0,i.isInit("slug"));assert.equal(!1,i.isInit("date"));assert.equal(!1,i.isInit("meta.visitors"));assert.equal(undefined,i.meta.visitors);assert.equal(undefined,i.tags);if(--r)return;t.close();e()})})});it("querying if an array contains at least a certain single member (gh-220)",function(e){var t=start(),n=t.model("BlogPostB",collection),r=new n;r.tags.push("cat");r.save(function(i){assert.ifError(i);n.findOne({tags:"cat"},function(n,i){assert.ifError(n);assert.equal(i._id.toString(),r._id);t.close();e()})})});it("where an array where the $slice operator",function(e){var t=start(),n=t.model("BlogPostB",collection);n.create({numbers:[500,600,700,800]},function(r,i){assert.ifError(r);n.findById(i._id,{numbers:{$slice:2}},function(r,s){assert.ifError(r);assert.equal(s._id.toString(),i._id);assert.equal(2,s.numbers.length);assert.equal(500,s.numbers[0]);assert.equal(600,s.numbers[1]);n.findById(i._id,{numbers:{$slice:-2}},function(r,s){assert.ifError(r);assert.equal(s._id.toString(),i._id);assert.equal(2,s.numbers.length);assert.equal(700,s.numbers[0]);assert.equal(800,s.numbers[1]);n.findById(i._id,{numbers:{$slice:[1,2]}},function(n,r){assert.ifError(n);assert.equal(r._id.toString(),i._id);assert.equal(2,r.numbers.length);assert.equal(600,r.numbers[0]);assert.equal(700,r.numbers[1]);t.close();e()})})})})})});describe("find",function(){it("works",function(e){var t=start(),n=t.model("BlogPostB",collection),r="Wooooot "+random(),i=new n;i.set("title",r);i.save(function(i){assert.ifError(i);var s=new n;s.set("title",r);s.save(function(i){assert.ifError(i);n.find({title:r},function(n,i){assert.ifError(n);assert.equal(2,i.length);assert.equal(r,i[0].get("title"));assert.equal(!1,i[0].isNew);assert.equal(r,i[1].get("title"));assert.equal(!1,i[1].isNew);t.close();e()})})})});it("returns docs where an array that contains one specific member",function(e){var t=start(),n=t.model("BlogPostB",collection);n.create({numbers:[100,101,102]},function(r,i){assert.ifError(r);n.find({numbers:100},function(n,r){assert.ifError(n);assert.equal(1,r.length);assert.equal(r[0]._id.toString(),i._id);t.close();e()})})});it("works when comparing $ne with single value against an array",function(e){var t=start(),n=new Schema({ids:[Schema.ObjectId],b:Schema.ObjectId}),r=t.model("NE_Test",n,"nes__"+random()),i=new DocumentObjectId,s=new DocumentObjectId,o=new DocumentObjectId,u=new DocumentObjectId;r.create({ids:[i,u],b:o},function(n,a){assert.ifError(n);r.create({ids:[s,u],b:o},function(n,s){assert.ifError(n);var a=r.find({b:o.toString(),ids:{$ne:i}});a.exec(function(n,i){assert.ifError(n);assert.equal(1,i.length);r.find({b:{$ne:[1]}},function(n,i){assert.equal("Invalid ObjectId",n.message);r.find({b:{$ne:4}},function(n,i){assert.equal("Invalid ObjectId",n.message);r.find({b:o,ids:{$ne:u}},function(n,r){t.close();assert.ifError(n);assert.equal(0,r.length);e()})})})})})})});it("with partial initialization",function(e){var t=start(),n=t.model("BlogPostB",collection),r=4,i=new n;i.title="hahaha";i.slug="woot";i.save(function(s){assert.ifError(s);n.find({_id:i.get("_id")},function(n,i){assert.ifError(n);assert.equal(!0,i[0].isInit("title"));assert.equal(!0,i[0].isInit("slug"));assert.equal(!1,i[0].isInit("date"));assert.strictEqual("kandinsky",i[0].def);if(--r)return;t.close();e()});n.find({_id:i.get("_id")},"title",function(n,i){assert.ifError(n);assert.equal(!0,i[0].isInit("title"));assert.equal(!1,i[0].isInit("slug"));assert.equal(!1,i[0].isInit("date"));assert.strictEqual(undefined,i[0].def);if(--r)return;t.close();e()});n.find({_id:i.get("_id")},{slug:0,def:0},function(n,i){assert.ifError(n);assert.equal(!0,i[0].isInit("title"));assert.equal(!1,i[0].isInit("slug"));assert.equal(!1,i[0].isInit("date"));assert.strictEqual(undefined,i[0].def);if(--r)return;t.close();e()});n.find({_id:i.get("_id")},"slug",function(n,i){assert.ifError(n);assert.equal(!1,i[0].isInit("title"));assert.equal(!0,i[0].isInit("slug"));assert.equal(!1,i[0].isInit("date"));assert.strictEqual(undefined,i[0].def);if(--r)return;t.close();e()})})});it("where $exists",function(e){var t=start(),n=new Schema({a:Number,b:String});mongoose.model("Exists",n);var r=t.model("Exists","exists_"+random());r.create({a:1},function(n,i){assert.ifError(n);r.create({b:"hi"},function(n,i){assert.ifError(n);r.find({b:{$exists:!0}},function(n,r){assert.ifError(n);t.close();assert.equal(1,r.length);e()})})})});it("works with $elemMatch",function(e){var t=start(),n=t.model("BlogPostB",collection),r=+(new Date);n.create({comments:[{title:"elemMatch",date:r+5}]},function(i,s){assert.ifError(i);n.create({comments:[{title:"elemMatch",date:r-5}]},function(i,o){assert.ifError(i);n.find({comments:{$elemMatch:{title:"elemMatch",date:{$gt:r}}}},function(n,r){assert.ifError(n);assert.equal(1,r.length);assert.equal(r[0]._id.toString(),s._id);t.close();e()})})})});it("where $mod",function(e){var t=start(),n=t.model("Mod","mods_"+random());n.create({num:1},function(r,i){assert.ifError(r);n.create({num:2},function(r,s){assert.ifError(r);n.find({num:{$mod:[2,1]}},function(n,r){assert.ifError(n);assert.equal(1,r.length);assert.equal(r[0]._id.toString(),i._id);t.close();e()})})})});it("where $not",function(e){var t=start(),n=t.model("Mod","mods_"+random());n.create({num:1},function(r,i){assert.ifError(r);n.create({num:2},function(r,i){assert.ifError(r);n.find({num:{$not:{$mod:[2,1]}}},function(n,r){assert.ifError(n);assert.equal(1,r.length);assert.equal(r[0]._id.toString(),i._id);t.close();e()})})})});it("where or()",function(e){var t=start(),n=t.model("Mod","mods_"+random());n.create({num:1},{num:2,str:"two"},function(r,i,s){function u(){n.find({$or:[{num:1},{num:2}]},function(e,t){l();assert.ifError(e);assert.equal(2,t.length);assert.equal(t[0]._id.toString(),i._id);assert.equal(t[1]._id.toString(),s._id)})}function a(){n.find({$or:[{str:"two"},{str:"three"}]},function(e,t){l();assert.ifError(e);assert.equal(1,t.length);assert.equal(t[0]._id.toString(),s._id)})}function f(){n.find({$or:[{num:1}]}).or([{str:"two"}]).exec(function(e,t){l();assert.ifError(e);assert.equal(2,t.length);assert.equal(t[0]._id.toString(),i._id);assert.equal(t[1]._id.toString(),s._id)})}function l(){if(--o)return;t.close();e()}assert.ifError(r);var o=3;u();a();f()})});it("where $ne",function(e){var t=start(),n=t.model("Mod","mods_"+random());n.create({num:1},function(r,i){assert.ifError(r);n.create({num:2},function(r,i){assert.ifError(r);n.create({num:3},function(r,s){assert.ifError(r);n.find({num:{$ne:1}},function(n,r){assert.ifError(n);assert.equal(r.length,2);assert.equal(r[0]._id.toString(),i._id);assert.equal(r[1]._id.toString(),s._id);t.close();e()})})})})});it("where $nor",function(e){var t=start(),n=t.model("Mod","nor_"+random());n.create({num:1},{num:2,str:"two"},function(r,i,s){function u(){n.find({$nor:[{num:1},{num:3}]},function(e,t){l();assert.ifError(e);assert.equal(1,t.length);assert.equal(t[0]._id.toString(),s._id)})}function a(){n.find({$nor:[{str:"two"},{str:"three"}]},function(e,t){l();assert.ifError(e);assert.equal(1,t.length);assert.equal(t[0]._id.toString(),i._id)})}function f(){n.find({$nor:[{num:2}]}).nor([{str:"two"}]).exec(function(e,t){l();assert.ifError(e);assert.equal(1,t.length);assert.equal(t[0]._id.toString(),i._id)})}function l(){if(--o)return;t.close();e()}assert.ifError(r);var o=3;u();a();f()})});it("STRICT null matches",function(e){var t=start(),n=t.model("BlogPostB",collection+random()),r={title:"A",author:null},i={title:"B"};n.create(r,i,function(r,i,s){assert.ifError(r);n.find({author:{$in:[null],$exists:!0}},function(n,r){t.close();assert.ifError(n);assert.equal(1,r.length);assert.equal(r[0]._id.toString(),i._id);e()})})});it("null matches null and undefined",function(e){var t=start(),n=t.model("BlogPostB",collection+random());n.create({title:"A",author:null},{title:"B"},function(r,i,s){assert.ifError(r);n.find({author:null},function(n,r){t.close();assert.ifError(n);assert.equal(2,r.length);e()})})});it("a document whose arrays contain at least $all string values",function(e){var t=start(),n=t.model("BlogPostB",collection),r=new n({title:"Aristocats"});r.tags.push("onex");r.tags.push("twox");r.tags.push("threex");r.save(function(i){assert.ifError(i);n.findById(r._id,function(r,i){assert.ifError(r);n.find({title:{$all:["Aristocats"]}},function(r,s){assert.ifError(r);assert.equal(1,s.length);n.find({title:{$all:[/^Aristocats/]}},function(r,s){assert.ifError(r);assert.equal(1,s.length);n.find({tags:{$all:["onex","twox","threex"]}},function(r,s){assert.ifError(r);assert.equal(1,s.length);n.find({tags:{$all:[/^onex/i]}},function(r,s){assert.ifError(r);assert.equal(1,s.length);n.findOne({tags:{$all:/^two/}},function(n,r){t.close();assert.ifError(n);assert.equal(i.id,r.id);e()})})})})})})})});it("using #nor with nested #elemMatch",function(e){var t=start(),n=t.model("BlogPostB",collection+"_norWithNestedElemMatch"),r={title:"nested $nor elemMatch1",comments:[]},i={title:"nested $nor elemMatch0",comments:[]};i.comments.push({title:"comment X"},{title:"comment Y"},{title:"comment W"});n.create(r,i,function(r,i,s){assert.ifError(r);var o=s.comments[1]._id,u={comments:{$elemMatch:{title:"comment Z"}}},a={comments:{$elemMatch:{_id:o.toString(),title:"comment Y"}}};n.find({$nor:[u,a]},function(n,r){t.close();assert.ifError(n);assert.equal(1,r.length);assert.equal(r[0].id,i.id);e()})})});it("strings via regexp",function(e){var t=start(),n=t.model("BlogPostB",collection);n.create({title:"Next to Normal"},function(r,i){assert.ifError(r);n.findOne({title:/^Next/},function(r,s){assert.ifError(r);assert.equal(s._id.toString(),i._id);var o="^Next to Normal$";n.find({title:{$regex:o}},function(r,s){assert.ifError(r);assert.equal(1,s.length);assert.equal(s[0]._id.toString(),i._id);n.findOne({title:{$regex:o}},function(r,s){assert.ifError(r);assert.equal(s._id.toString(),i._id);n.where("title").regex(o).findOne(function(r,s){assert.ifError(r);assert.equal(s._id.toString(),i._id);n.where("title").regex(/^Next/).findOne(function(n,r){t.close();assert.ifError(n);assert.equal(r._id.toString(),i._id);e()})})})})})})});it("a document whose arrays contain at least $all values",function(e){var t=start(),n=t.model("BlogPostB",collection),r={numbers:[-1,-2,-3,-4],meta:{visitors:4}},i={numbers:[0,-1,-2,-3,-4]};n.create(r,i,function(r,i,s){assert.ifError(r);n.find({numbers:{$all:[-1,-2,-3,-4]}},function(r,o){assert.ifError(r);assert.equal(2,o.length);n.find({"meta.visitors":{$all:[4]}},function(r,o){assert.ifError(r);assert.equal(1,o.length);assert.equal(o[0]._id.toString(),i._id);n.find({numbers:{$all:[0,-1]}},function(n,r){t.close();assert.ifError(n);assert.equal(1,r.length);assert.equal(r[0]._id.toString(),s._id);e()})})})})});it("where $size",function(e){var t=start(),n=t.model("BlogPostB",collection);n.create({numbers:[1,2,3,4,5,6,7,8,9,10]},function(r,i){assert.ifError(r);n.create({numbers:[11,12,13,14,15,16,17,18,19,20]},function(r,i){assert.ifError(r);n.create({numbers:[1,2,3,4,5,6,7,8,9,10,11]},function(r,i){assert.ifError(r);n.find({numbers:{$size:10}},function(r,i){assert.ifError(r);assert.equal(2,i.length);n.find({numbers:{$size:11}},function(n,r){assert.ifError(n);assert.equal(1,r.length);t.close();e()})})})})})});it("$gt, $lt, $lte, $gte work on strings",function(e){function i(i){i&&t.close();assert.ifError(i);if(--r)return;r=2;n.find({dt:{$gte:"2011-03-30",$lte:"2011-04-01"}}).sort("dt").exec(function(n,i){if(!--r){t.close();e()}assert.ifError(n);assert.equal(3,i.length);assert.equal(i[0].dt,"2011-03-30");assert.equal(i[1].dt,"2011-03-31");assert.equal(i[2].dt,"2011-04-01");assert.equal(!1,i.some(function(e){return"2011-04-02"===e.dt}))});n.find({dt:{$gt:"2011-03-30",$lt:"2011-04-02"}}).sort("dt").exec(function(n,i){if(!--r){t.close();e()}assert.ifError(n);assert.equal(2,i.length);assert.equal(i[0].dt,"2011-03-31");assert.equal(i[1].dt,"2011-04-01");assert.equal(!1,i.some(function(e){return"2011-03-30"===e.dt}));assert.equal(!1,i.some(function(e){return"2011-04-02"===e.dt}))})}var t=start(),n=t.model("D",new Schema({dt:String}),collection);n.create({dt:"2011-03-30"},i);n.create({dt:"2011-03-31"},i);n.create({dt:"2011-04-01"},i);n.create({dt:"2011-04-02"},i);var r=4})});describe("limit",function(){it("works",function(e){var t=start(),n=t.model("BlogPostB",collection);n.create({title:"first limit"},function(r,i){assert.ifError(r);n.create({title:"second limit"},function(r,s){assert.ifError(r);n.create({title:"third limit"},function(r,o){assert.ifError(r);n.find({title:/limit$/}).limit(2).find(function(n,r){t.close();assert.ifError(n);assert.equal(2,r.length);assert.equal(r[0].id,i.id);assert.equal(r[1].id,s.id);e()})})})})})});describe("skip",function(){it("works",function(e){var t=start(),n=t.model("BlogPostB",collection);n.create({title:"first skip"},function(r,i){assert.ifError(r);n.create({title:"second skip"},function(r,i){assert.ifError(r);n.create({title:"third skip"},function(r,s){assert.ifError(r);n.find({title:/skip$/}).skip(1).limit(2).find(function(n,r){assert.ifError(n);assert.equal(2,r.length);assert.equal(r[0].id,i._id);assert.equal(r[1].id,s._id);t.close();e()})})})})})});describe("sort",function(){it("works",function(e){var t=start(),n=t.model("BlogPostB",collection);n.create({meta:{visitors:100}},function(r,i){assert.ifError(r);n.create({meta:{visitors:300}},function(r,s){assert.ifError(r);n.create({meta:{visitors:200}},function(r,o){assert.ifError(r);n.where("meta.visitors").gt(99).lt(301).sort("-meta.visitors").find(function(n,r){assert.ifError(n);assert.equal(3,r.length);assert.equal(r[0].id,s._id);assert.equal(r[1].id,o._id);assert.equal(r[2].id,i._id);t.close();e()})})})})})});describe('nested mixed "x.y.z"',function(){it("works",function(e){var t=start(),n=t.model("BlogPostB",collection);n.find({"mixed.nested.stuff":"skynet"},function(n,r){t.close();assert.ifError(n);e()})})});it("by Date (gh-336)",function(e){var t=start(),n=t.model("TestDateQuery",new Schema({date:Date}),"datetest_"+random()),r=new Date;n.create({date:r},{date:new Date(r-1e4)},function(i,s,o){assert.ifError(i);n.find({date:r},function(n,r){t.close();assert.ifError(n);assert.equal(1,r.length);e()})})});it("mixed types with $elemMatch (gh-591)",function(e){var t=start(),n=new Schema({a:[{}],b:Number}),r=t.model("QueryingMixedArrays",n,random()),i=new r;i.a=[1,2,{name:"Frodo"},"IDK",{name:100}];i.b=10;i.save(function(n){assert.ifError(n);r.find({a:{name:"Frodo"},b:"10"},function(n,i){assert.ifError(n);assert.equal(5,i[0].a.length);assert.equal(10,i[0].b.valueOf());var s={a:{$elemMatch:{name:100}}};r.find(s,function(n,r){t.close();assert.ifError(n);assert.equal(5,r[0].a.length);e()})})})});describe("$all",function(){it("with ObjectIds (gh-690)",function(e){var t=start(),n=new Schema({name:String}),r=new Schema({sub:[n]}),i=t.model("usingAllWithObjectIds",r),s=[{name:"one"},{name:"two"},{name:"three"}];i.create({sub:s},function(n,r){assert.ifError(n);var s=r.sub[0]._id,o=r.sub[1]._id,u=r.sub[2]._id;i.findOne({"sub._id":{$all:[o,u]}},function(n,o){assert.ifError(n);assert.equal(o.id,r.id);i.findOne({"sub._id":{$all:[s,new DocumentObjectId]}},function(n,s){assert.ifError(n);assert.equal(!1,!!s);i.findOne({"sub._id":{$all:[u]}},function(n,i){t.close();assert.ifError(n);assert.equal(i.id,r.id);e()})})})})});it("with Dates",function(e){var t=start(),n=new Schema({d:Date}),r=new Schema({sub:[n]}),i=t.model("usingAllWithDates",r),s=[{d:new Date},{d:new Date(Date.now()-1e4)},{d:new Date(Date.now()-3e4)}];i.create({sub:s},function(n,r){assert.ifError(n);var s=r.sub[0].d,o=r.sub[1].d,u=r.sub[2].d;i.findOne({"sub.d":{$all:[o,u]}},function(n,o){assert.ifError(n);assert.equal(o.id,r.id);i.findOne({"sub.d":{$all:[s,new Date]}},function(n,s){assert.ifError(n);assert.equal(!1,!!s);i.findOne({"sub.d":{$all:[u]}},function(n,i){t.close();assert.ifError(n);assert.equal(i.id,r.id);e()})})})})})})});describe("buffers",function(){it("works with different methods and query types",function(e){var t=start(),n=new Schema({name:String,block:Buffer}),r=t.model("Buffer",n,"buffers"),i={name:"A",block:new Buffer("über")},s={name:"B",block:new Buffer("buffer shtuffs are neat")},o={name:"C",block:"hello world"};r.create(i,s,o,function(n,i,s,o){assert.ifError(n);assert.equal(s.block.toString("utf8"),"buffer shtuffs are neat");assert.equal(i.block.toString("utf8"),"über");assert.equal(o.block.toString("utf8"),"hello world");r.findById(i._id,function(n,i){assert.ifError(n);assert.equal(i.block.toString("utf8"),"über");r.findOne({block:"buffer shtuffs are neat"},function(n,i){assert.ifError(n);assert.equal(i.block.toString("utf8"),"buffer shtuffs are neat");r.findOne({block:/buffer/i},function(n,i){assert.equal(n.message,'Cast to buffer failed for value "/buffer/i"');r.findOne({block:[195,188,98,101,114]},function(n,i){assert.ifError(n);assert.equal(i.block.toString("utf8"),"über");r.findOne({block:"aGVsbG8gd29ybGQ="},function(n,i){assert.ifError(n);assert.strictEqual(i,null);r.findOne({block:new Buffer("aGVsbG8gd29ybGQ=","base64")},function(n,i){assert.ifError(n);assert.equal(i.block.toString("utf8"),"hello world");r.findOne({block:new MongooseBuffer("aGVsbG8gd29ybGQ=","base64")},function(n,i){assert.ifError(n);assert.equal(i.block.toString("utf8"),"hello world");r.remove({},function(n){t.close();assert.ifError(n);e()})})})})})})})})})});it("with conditionals",function(e){var t=start(),n=new Schema({name:String,block:Buffer}),r=t.model("Buffer2",n,"buffer_"+random()),i={name:"A",block:new MongooseBuffer([195,188,98,101,114])},s={name:"B",block:new MongooseBuffer("buffer shtuffs are neat")},o={name:"C",block:new MongooseBuffer("aGVsbG8gd29ybGQ=","base64")};r.create(i,s,o,function(n,i,s,o){function a(){if(--u)return;r.remove({},function(n){t.close();assert.ifError(n);e()})}assert.ifError(n);assert.equal(i.block.toString("utf8"),"über");assert.equal(s.block.toString("utf8"),"buffer shtuffs are neat");assert.equal(o.block.toString("utf8"),"hello world");r.find({block:{$in:[[195,188,98,101,114],"buffer shtuffs are neat",new Buffer("aGVsbG8gd29ybGQ=","base64")]}},function(e,t){a();assert.ifError(e);assert.equal(3,t.length)});r.find({block:{$in:["über","hello world"]}},function(e,t){a();assert.ifError(e);assert.equal(2,t.length)});r.find({block:{$in:["über"]}},function(e,t){a();assert.ifError(e);assert.equal(1,t.length);assert.equal(t[0].block.toString("utf8"),"über")});r.find({block:{$nin:["über"]}},function(e,t){a();assert.ifError(e);assert.equal(2,t.length)});r.find({block:{$nin:[[195,188,98,101,114],new Buffer("aGVsbG8gd29ybGQ=","base64")]}},function(e,t){a();assert.ifError(e);assert.equal(1,t.length);assert.equal(t[0].block.toString("utf8"),"buffer shtuffs are neat")});r.find({block:{$ne:"über"}},function(e,t){a();assert.ifError(e);assert.equal(2,t.length)});r.find({block:{$gt:"über"}},function(e,t){a();assert.ifError(e);assert.equal(2,t.length)});r.find({block:{$gte:"über"}},function(e,t){a();assert.ifError(e);assert.equal(3,t.length)});r.find({block:{$lt:new Buffer("buffer shtuffs are neat")}},function(e,t){a();assert.ifError(e);assert.equal(2,t.length);assert.equal(t[0].block.toString("utf8"),"über")});r.find({block:{$lte:"buffer shtuffs are neat"}},function(e,t){a();assert.ifError(e);assert.equal(3,t.length)});var u=9})})});describe("backwards compatibility",function(){it("with previously existing null values in the db",function(e){var t=start(),n=t.model("BlogPostB",collection),r=new n;r.collection.insert({meta:{visitors:9898,a:null}},{},function(r,i){assert.ifError(r);n.findOne({_id:i[0]._id},function(n,r){assert.ifError(n);assert.equal(9898,r.get("meta.visitors").valueOf());t.close();e()})})});it("with unused values in the db",function(e){var t=start(),n=t.model("BlogPostB",collection),r=new n;r.collection.insert({meta:{visitors:9898,color:"blue"}},{},function(r,i){assert.ifError(r);n.findOne({_id:i[0]._id},function(n,r){assert.ifError(n);assert.equal(9898,r.get("meta.visitors").valueOf());r.save(function(n){assert.ifError(n);t.close();e()})})})})});describe("geo-spatial",function(){it("$near (gh-309)",function(e){var t=start(),n=t.model("Geo1",geoSchema,"geospatial"+random());n.create({loc:[10,20]},{loc:[40,90]}
,function(r){assert.ifError(r);setTimeout(function(){n.find({loc:{$near:[30,40]}},function(n,r){t.close();assert.ifError(n);assert.equal(2,r.length);e()})},100)})});it("$within arrays (gh-586)",function(e){var t=start(),n=t.model("Geo2",geoSchema,collection+"geospatial");n.create({loc:[35,50]},{loc:[-40,-90]},function(r){assert.ifError(r);setTimeout(function(){n.find({loc:{$within:{$box:[[30,40],[40,60]]}}},function(n,r){t.close();assert.ifError(n);assert.equal(1,r.length);e()})},100)})});it("$nearSphere with arrays (gh-610)",function(e){var t=start(),n=t.model("Geo3",geoSchema,"y"+random());n.create({loc:[10,20]},{loc:[40,90]},function(r){assert.ifError(r);setTimeout(function(){n.find({loc:{$nearSphere:[30,40]}},function(n,r){t.close();assert.ifError(n);assert.equal(2,r.length);e()})},100)})});it("$maxDistance with arrays",function(e){var t=start(),n=t.model("Geo4",geoSchema,"x"+random());n.create({loc:[20,80]},{loc:[25,30]},function(r,i){assert.ifError(r);setTimeout(function(){n.find({loc:{$near:[25,31],$maxDistance:1}},function(r,i){assert.ifError(r);assert.equal(1,i.length);n.find({loc:{$near:[25,32],$maxDistance:1}},function(n,r){t.close();assert.ifError(n);assert.equal(0,r.length);e()})})},100)})})});describe("lean option:",function(){it("find",function(e){var t=start(),n=t.model("BlogPostB",collection),r="Wooooot "+random(),i=new n;i.set("title",r);i.save(function(i){assert.ifError(i);n.find({title:r}).lean().exec(function(i,s){assert.ifError(i);assert.equal(s.length,1);assert.strictEqual(s[0]instanceof mongoose.Document,!1);n.find({title:r},null,{lean:!0},function(n,r){assert.ifError(n);assert.equal(r.length,1);assert.strictEqual(r[0]instanceof mongoose.Document,!1);t.close();e()})})})});it("findOne",function(e){var t=start(),n=t.model("BlogPostB",collection),r="Wooooot "+random(),i=new n;i.set("title",r);i.save(function(i){assert.ifError(i);n.findOne({title:r},null,{lean:!0},function(n,r){t.close();assert.ifError(n);assert.ok(r);assert.strictEqual(!1,r instanceof mongoose.Document);e()})})})});