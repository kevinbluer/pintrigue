/**
 * Test dependencies.
 */var start=require("./common"),assert=require("assert"),mongoose=start.mongoose,random=require("../lib/utils").random,Query=require("../lib/query"),Schema=mongoose.Schema,SchemaType=mongoose.SchemaType,CastError=SchemaType.CastError,ObjectId=Schema.ObjectId,MongooseBuffer=mongoose.Types.Buffer,DocumentObjectId=mongoose.Types.ObjectId;describe("schema select option",function(){it("excluding paths through schematype",function(e){var t=start(),n=new Schema({thin:Boolean,name:{type:String,select:!1},docs:[new Schema({bool:Boolean,name:{type:String,select:!1}})]}),r=t.model("ExcludingBySchemaType",n);r.create({thin:!0,name:"the excluded",docs:[{bool:!0,name:"test"}]},function(n,i){function o(n,r){if(!--s){t.close();e()}Array.isArray(r)&&(r=r[0]);assert.strictEqual(null,n);assert.equal(!1,r.isSelected("name"));assert.equal(!1,r.isSelected("docs.name"));assert.strictEqual(undefined,r.name)}assert.ifError(n);assert.equal(i.name,"the excluded");assert.equal(i.docs[0].name,"test");var s=3;r.findById(i).select("-thin -docs.bool").exec(o);r.find({_id:i._id}).select("thin docs.bool").exec(o);r.findById(i,o)})});it("including paths through schematype",function(e){var t=start(),n=new Schema({thin:Boolean,name:{type:String,select:!0},docs:[new Schema({bool:Boolean,name:{type:String,select:!0}})]}),r=t.model("IncludingBySchemaType",n);r.create({thin:!0,name:"the included",docs:[{bool:!0,name:"test"}]},function(n,i){function o(n,r){if(!--s){t.close();e()}Array.isArray(r)&&(r=r[0]);assert.strictEqual(null,n);assert.strictEqual(!0,r.isSelected("name"));assert.strictEqual(!0,r.isSelected("docs.name"));assert.equal(r.name,"the included")}assert.ifError(n);assert.equal(i.name,"the included");assert.equal(i.docs[0].name,"test");var s=2;r.findById(i).select("-thin -docs.bool").exec(o);r.find({_id:i._id}).select("thin docs.bool").exec(o)})});it("overriding schematype select options",function(e){var t=start(),n=new Schema({thin:Boolean,name:{type:String,select:!0},docs:[new Schema({name:{type:String,select:!0},bool:Boolean})]}),r=new Schema({thin:Boolean,name:{type:String,select:!1},docs:[new Schema({name:{type:String,select:!1},bool:Boolean})]}),i=t.model("OverriddingSelectedBySchemaType",n),s=t.model("OverriddingExcludedBySchemaType",r),o=4;i.create({thin:!0,name:"the included",docs:[{name:"test",bool:!0}]},function(n,r){assert.ifError(n);assert.equal(r.name,"the included");assert.equal(r.docs[0].name,"test");i.find({_id:r._id}).select("thin name docs.bool docs.name").exec(function(n,r){if(!--o){t.close();e()}r=r[0];assert.ifError(n);assert.strictEqual(!0,r.isSelected("name"));assert.strictEqual(!0,r.isSelected("thin"));assert.strictEqual(!0,r.isSelected("docs.name"));assert.strictEqual(!0,r.isSelected("docs.bool"));assert.equal(r.name,"the included");assert.equal(r.docs[0].name,"test");assert.ok(r.thin);assert.ok(r.docs[0].bool)});i.findById(r).select("-name -docs.name").exec(function(n,r){if(!--o){t.close();e()}assert.strictEqual(null,n);assert.equal(!1,r.isSelected("name"));assert.equal(!0,r.isSelected("thin"));assert.equal(!1,r.isSelected("docs.name"));assert.equal(!0,r.isSelected("docs.bool"));assert.strictEqual(undefined,r.name);assert.strictEqual(undefined,r.docs[0].name);assert.equal(!0,r.thin);assert.equal(!0,r.docs[0].bool)})});s.create({thin:!0,name:"the excluded",docs:[{name:"test",bool:!0}]},function(n,r){assert.ifError(n);assert.equal(r.name,"the excluded");assert.equal(r.docs[0].name,"test");s.find({_id:r._id}).select("thin name docs.name docs.bool").exec(function(n,r){if(!--o){t.close();e()}r=r[0];assert.strictEqual(null,n);assert.equal(!0,r.isSelected("name"));assert.equal(!0,r.isSelected("thin"));assert.equal(!0,r.isSelected("docs.name"));assert.equal(!0,r.isSelected("docs.bool"));assert.equal(r.name,"the excluded");assert.equal(r.docs[0].name,"test");assert.ok(r.thin);assert.ok(r.docs[0].bool)});s.findById(r).select("-name -docs.name").exec(function(n,r){if(!--o){t.close();e()}assert.strictEqual(null,n);assert.equal(r.isSelected("name"),!1);assert.equal(r.isSelected("thin"),!0);assert.equal(r.isSelected("docs.name"),!1);assert.equal(r.isSelected("docs.bool"),!0);assert.strictEqual(undefined,r.name);assert.strictEqual(undefined,r.docs[0].name);assert.strictEqual(!0,r.thin);assert.strictEqual(!0,r.docs[0].bool)})})});it("forcing inclusion of a deselected schema path works",function(e){var t=start(),n=new Schema({thin:Boolean,name:{type:String,select:!1},docs:[new Schema({name:{type:String,select:!1},bool:Boolean})]}),r=t.model("ForcedInclusionOfPath",n);r.create({thin:!1,name:"1 meter",docs:[{name:"test",bool:!1}]},function(n,i){assert.ifError(n);r.findById(i).select("+name +docs.name").exec(function(n,s){assert.ifError(n);assert.equal(!1,s.thin);assert.equal("1 meter",s.name);assert.equal(!1,s.docs[0].bool);assert.equal("test",s.docs[0].name);assert.equal(i.id,s.id);r.findById(i).select("+name -thin +docs.name -docs.bool").exec(function(n,s){assert.ifError(n);assert.equal(undefined,s.thin);assert.equal("1 meter",s.name);assert.equal(undefined,s.docs[0].bool);assert.equal("test",s.docs[0].name);assert.equal(i.id,s.id);r.findById(i).select("-thin +name -docs.bool +docs.name").exec(function(n,s){assert.ifError(n);assert.equal(undefined,s.thin);assert.equal("1 meter",s.name);assert.equal(undefined,s.docs[0].bool);assert.equal("test",s.docs[0].name);assert.equal(i.id,s.id);r.findById(i).select("-thin -docs.bool").exec(function(n,r){t.close();assert.ifError(n);assert.equal(undefined,r.thin);assert.equal(undefined,r.name);assert.equal(undefined,r.docs[0].bool);assert.equal(undefined,r.docs[0].name);assert.equal(i.id,r.id);e()})})})})})});it("conflicting schematype path selection should not error",function(e){var t=start(),n=new Schema({thin:Boolean,name:{type:String,select:!0},conflict:{type:String,select:!1}}),r=t.model("ConflictingBySchemaType",n);r.create({thin:!0,name:"bing",conflict:"crosby"},function(n,i){function o(n,r){if(!--s){t.close();e()}Array.isArray(r)&&(r=r[0]);assert.ifError(n);assert.equal(r.name,"bing");assert.equal(undefined,r.conflict)}assert.strictEqual(null,n);assert.equal(i.name,"bing");assert.equal(i.conflict,"crosby");var s=2;r.findById(i).exec(o);r.find({_id:i._id}).exec(o)})});it("selecting _id works with excluded schematype path",function(e){var t=start(),n=new Schema({name:{type:String,select:!1}}),r=t.model("SelectingOnly_idWithExcludedSchemaType",n);r.find().select("_id -name").exec(function(n){assert.ok(n instanceof Error,"conflicting path selection error should be instance of Error");r.find().select("_id").exec(function(n){t.close();assert.ifError(n,n&&n.stack);e()})})});it("selecting _id works with excluded schematype path on sub doc",function(e){var t=start(),n=new Schema({docs:[new Schema({name:{type:String,select:!1}})]}),r=t.model("SelectingOnly_idWithExcludedSchemaType",n);r.find().select("_id -docs.name").exec(function(n){assert.ok(n instanceof Error,"conflicting path selection error should be instance of Error");r.find().select("_id").exec(function(n){t.close();assert.ifError(n,n&&n.stack);e()})})});it("all inclusive/exclusive combos work",function(e){function f(e,t,n){e.findOne().select("_id -name").exec(function(r,i){assert.ok(r);assert.ok(!i);e.findOne().select("-_id name").exec(function(r,i){assert.ifError(r);assert.equal(undefined,i.id);assert.equal("ssd",i.name);assert.equal(undefined,i.age);e.findOne().select("-_id -name").exec(function(r,i){assert.ifError(r);assert.equal(undefined,i.id);assert.equal(undefined,i.name);assert.equal(0,i.age);e.findOne().select("_id name").exec(function(e,r){assert.ifError(e);assert.equal(t,r.id);assert.equal("ssd",r.name);assert.equal(undefined,r.age);n()})})})})}function l(e,t,n){e.findOne().select("age -name").exec(function(r,i){assert.ok(r);assert.ok(!i);e.findOne().select("-age name").exec(function(r,i){assert.ok(r);assert.ok(!i);e.findOne().select("-age -name").exec(function(r,i){assert.ifError(r);assert.equal(t,i.id);assert.equal(undefined,i.name);assert.equal(undefined,i.age);e.findOne().select("age name").exec(function(e,r){assert.ifError(e);assert.equal(t,r.id);assert.equal("ssd",r.name);assert.equal(0,r.age);n()})})})})}var t=start(),n="inclusiveexclusivecomboswork_"+random(),r=new Schema({name:{type:String},age:Number},{collection:n}),i=t.model("InclusiveExclusiveCombosWork",r),s=new Schema({name:{type:String,select:!1},age:Number},{collection:n}),o=t.model("InclusiveExclusiveCombosWorkWithSchemaSelectionFalse",s),u=new Schema({name:{type:String,select:!0},age:Number},{collection:n}),a=t.model("InclusiveExclusiveCombosWorkWithSchemaSelectionTrue",u);i.create({name:"ssd",age:0},function(n,r){assert.ifError(n);var s=r.id;f(i,s,function(){l(i,s,function(){f(o,s,function(){l(o,s,function(){f(a,s,function(){l(a,s,function(){t.close();e()})})})})})})})})});