/**
 * Test dependencies.
 */var start=require("./common"),assert=require("assert"),mongoose=start.mongoose,random=require("../lib/utils").random,Query=require("../lib/query"),Schema=mongoose.Schema,SchemaType=mongoose.SchemaType,CastError=SchemaType.CastError,ValidatorError=SchemaType.ValidatorError,ValidationError=mongoose.Document.ValidationError,ObjectId=Schema.ObjectId,DocumentObjectId=mongoose.Types.ObjectId,DocumentArray=mongoose.Types.DocumentArray,EmbeddedDocument=mongoose.Types.Embedded,MongooseArray=mongoose.Types.Array,MongooseError=mongoose.Error;describe("model middleware",function(){it("post save",function(e){var t=new Schema({title:String}),n=0;t.post("save",function(e){assert.equal(e.title,"Little Green Running Hood");assert.equal(0,n);n++});t.post("save",function(e){assert.equal(e.title,"Little Green Running Hood");assert.equal(1,n);n++});t.post("save",function(t){assert.equal(t.title,"Little Green Running Hood");assert.equal(2,n);r.close();e()});var r=start(),i=r.model("TestPostSaveMiddleware",t),s=new i({title:"Little Green Running Hood"});s.save(function(e){assert.ifError(e)})});it("works",function(e){var t=new Schema({title:String}),n=0;t.pre("init",function(e){n++;e()});t.pre("save",function(e){n++;e(new Error("Error 101"))});t.pre("remove",function(e){n++;e()});mongoose.model("TestMiddleware",t);var r=start(),i=r.model("TestMiddleware"),s=new i;s.init({title:"Test"});assert.equal(1,n);s.save(function(t){assert.ok(t instanceof Error);assert.equal(t.message,"Error 101");assert.equal(2,n);s.remove(function(t){r.close();assert.ifError(t);assert.equal(3,n);e()})})});it("post init",function(e){var t=new Schema({title:String}),n=0,r=0;t.pre("init",function(e){++n;e()});t.post("init",function(){++r});mongoose.model("TestPostInitMiddleware",t);var i=start(),s=i.model("TestPostInitMiddleware"),o=new s({title:"banana"});o.save(function(t){assert.ifError(t);s.findById(o._id,function(t,s){assert.ifError(t);assert.equal(1,n);assert.equal(1,r);s.remove(function(t){i.close();e()})})})})});