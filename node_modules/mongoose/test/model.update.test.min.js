/**
 * Test dependencies.
 */var start=require("./common"),assert=require("assert"),mongoose=start.mongoose,random=require("../lib/utils").random,Query=require("../lib/query"),Schema=mongoose.Schema,SchemaType=mongoose.SchemaType,CastError=SchemaType.CastError,ValidatorError=SchemaType.ValidatorError,ValidationError=mongoose.Document.ValidationError,ObjectId=Schema.ObjectId,DocumentObjectId=mongoose.Types.ObjectId,DocumentArray=mongoose.Types.DocumentArray,EmbeddedDocument=mongoose.Types.Embedded,MongooseArray=mongoose.Types.Array,MongooseError=mongoose.Error,Comments=new Schema;Comments.add({title:String,date:Date,body:String,comments:[Comments]});var BlogPost=new Schema({title:String,author:String,slug:String,date:Date,meta:{date:Date,visitors:Number},published:Boolean,mixed:{},numbers:[Number],owners:[ObjectId],comments:[Comments]},{strict:!1});BlogPost.virtual("titleWithAuthor").get(function(){return this.get("title")+" by "+this.get("author")}).set(function(e){var t=e.split(" by ");this.set("title",t[0]);this.set("author",t[1])});BlogPost.method("cool",function(){return this});BlogPost.static("woot",function(){return this});mongoose.model("BlogPostForUpdates",BlogPost);var collection="blogposts_"+random(),strictSchema=new Schema({name:String,x:{nested:String}});strictSchema.virtual("foo").get(function(){return"i am a virtual FOO!"});mongoose.model("UpdateStrictSchema",strictSchema);describe("model: update:",function(){var e,t="Tobi "+random(),n="Brian "+random(),r="Woot "+random(),i,s;before(function(r){var o=start(),u=o.model("BlogPostForUpdates",collection);i=new DocumentObjectId;s=new DocumentObjectId;e=new u;e.set("title",t);e.author=n;e.meta.visitors=0;e.date=new Date;e.published=!0;e.mixed={x:"ex"};e.numbers=[4,5,6,7];e.owners=[i,s];e.comments=[{body:"been there"},{body:"done that"}];e.save(function(e){assert.ifError(e);r()})});it("works",function(o){var u=start(),a=u.model("BlogPostForUpdates",collection);a.findById(e._id,function(f,l){assert.ifError(f);assert.equal(t,l.title);assert.equal(l.author,n);assert.equal(l.meta.visitors.valueOf(),0);assert.equal(l.date.toString(),e.date.toString());assert.equal(!0,l.published);assert.equal("ex",l.mixed.x);assert.deepEqual(l.numbers.toObject(),[4,5,6,7]);assert.equal(l.owners.length,2);assert.equal(l.owners[0].toString(),i.toString());assert.equal(l.owners[1].toString(),s.toString());assert.equal(l.comments.length,2);assert.equal(l.comments[0].body,"been there");assert.equal(l.comments[1].body,"done that");assert.ok(l.comments[0]._id);assert.ok(l.comments[1]._id);assert.ok(l.comments[0]._id instanceof DocumentObjectId);assert.ok(l.comments[1]._id instanceof DocumentObjectId);var c={title:r,$inc:{"meta.visitors":2},$set:{date:new Date},published:!1,mixed:{x:"ECKS",y:"why"},$pullAll:{numbers:[4,6]},$pull:{owners:i},"comments.1.body":8};a.update({title:t},c,function(t){assert.ifError(t);a.findById(e._id,function(t,i){assert.ifError(t);assert.equal(i.title,r);assert.equal(i.author,n);assert.equal(i.meta.visitors.valueOf(),2);assert.equal(i.date.toString(),c.$set.date.toString());assert.equal(i.published,!1);assert.equal(i.mixed.x,"ECKS");assert.equal(i.mixed.y,"why");assert.deepEqual(i.numbers.toObject(),[5,7]);assert.equal(i.owners.length,1);assert.equal(i.owners[0].toString(),s.toString());assert.equal(i.comments[0].body,"been there");assert.equal(i.comments[1].body,"8");assert.ok(i.comments[0]._id);assert.ok(i.comments[1]._id);assert.ok(i.comments[0]._id instanceof DocumentObjectId);assert.ok(i.comments[1]._id instanceof DocumentObjectId);var f={"comments.body":"fail"};a.update({_id:e._id},f,function(t){assert.ok(t);assert.ok(/^can't append to array using string field name \[body\]/.test(t.message));a.findById(e,function(t,i){assert.ifError(t);var f={$pull:"fail"};a.update({_id:e._id},f,function(t){assert.ok(t);assert.ok(/Invalid atomic update value/.test(t.message));var i={$inc:{idontexist:1}};a.update({_id:e._id},i,function(t){assert.ifError(t);a.findById(e._id,function(e,t){u.close();assert.ifError(e);assert.equal(t.title,r);assert.equal(t.author,n);assert.equal(t.meta.visitors.valueOf(),2);assert.equal(t.date.toString(),c.$set.date.toString());assert.equal(t.published,!1);assert.equal(t.mixed.x,"ECKS");assert.equal(t.mixed.y,"why");assert.deepEqual(t.numbers.toObject(),[5,7]);assert.equal(t.owners.length,1);assert.equal(t.owners[0].toString(),s.toString());assert.equal(t.comments[0].body,"been there");assert.equal(t.comments[1].body,"8");assert.strictEqual(1,t._doc.idontexist);o()})})})})})})})})});it("casts doc arrays",function(t){var n=start(),r=n.model("BlogPostForUpdates",collection),i={comments:[{body:"worked great"}],$set:{"numbers.1":100},$inc:{idontexist:1}};r.update({_id:e._id},i,function(i){assert.ifError(i);r.collection.findOne({_id:e._id},function(e,i){n.close();assert.ifError(e);var s=new r;s.init(i);assert.equal(s.comments.length,1);assert.equal(s.comments[0].body,"worked great");assert.strictEqual(!0,!!i.comments[0]._id);assert.equal(2,s.meta.visitors.valueOf());assert.equal(s.mixed.x,"ECKS");assert.deepEqual(s.numbers.toObject(),[5,100]);assert.strictEqual(s.numbers[1].valueOf(),100);assert.equal(2,i.idontexist);assert.equal(100,i.numbers[1]);t()})})});it("handles $pushAll array of docs",function(t){var n=start(),r=n.model("BlogPostForUpdates",collection),i={$pushAll:{comments:[{body:"i am number 2"},{body:"i am number 3"}]}};r.update({_id:e._id},i,function(i){assert.ifError(i);r.findById(e,function(e,r){n.close();assert.ifError(e);assert.equal(3,r.comments.length);assert.equal(r.comments[1].body,"i am number 2");assert.strictEqual(!0,!!r.comments[1]._id);assert.ok(r.comments[1]._id instanceof DocumentObjectId);assert.equal(r.comments[2].body,"i am number 3");assert.strictEqual(!0,!!r.comments[2]._id);assert.ok(r.comments[2]._id instanceof DocumentObjectId);t()})})});it("handles $pull of object literal array of docs (gh-542)",function(t){var n=start(),r=n.model("BlogPostForUpdates",collection),i={$pull:{comments:{body:"i am number 2"}}};r.update({_id:e._id},i,function(i){assert.ifError(i);r.findById(e,function(e,r){n.close();assert.ifError(e);assert.equal(2,r.comments.length);assert.equal(r.comments[0].body,"worked great");assert.ok(r.comments[0]._id instanceof DocumentObjectId);assert.equal(r.comments[1].body,"i am number 3");assert.ok(r.comments[1]._id instanceof DocumentObjectId);t()})})});it("handles weird casting (gh-479)",function(t){function i(){}var n=start(),r=n.model("BlogPostForUpdates",collection);i.prototype.toString=function(){return"MongoDB++"};var s=new i,o={$addToSet:{"comments.$.comments":{body:"The Ring Of Power"}},$set:{"comments.$.title":s}};r.update({_id:e._id,"comments.body":"worked great"},o,function(i){assert.ifError(i);r.findById(e,function(e,r){n.close();assert.ifError(e);assert.equal(2,r.comments.length);assert.equal(r.comments[0].body,"worked great");assert.equal(r.comments[0].title,"MongoDB++");assert.strictEqual(!0,!!r.comments[0].comments);assert.equal(r.comments[0].comments.length,1);assert.strictEqual(r.comments[0].comments[0].body,"The Ring Of Power");assert.ok(r.comments[0]._id instanceof DocumentObjectId);assert.ok(r.comments[0].comments[0]._id instanceof DocumentObjectId);assert.equal(r.comments[1].body,"i am number 3");assert.strictEqual(undefined,r.comments[1].title);assert.ok(r.comments[1]._id instanceof DocumentObjectId);t()})})});var o;it("handles date casting (gh-479)",function(t){var n=start(),r=n.model("BlogPostForUpdates",collection),i={$inc:{"comments.$.newprop":"1"},$set:{date:(new Date).getTime()}};r.update({_id:e._id,"comments.body":"worked great"},i,function(s){assert.ifError(s);r.findById(e,function(e,r){n.close();assert.ifError(e);assert.equal(1,r._doc.comments[0]._doc.newprop);assert.strictEqual(undefined,r._doc.comments[1]._doc.newprop);assert.ok(r.date instanceof Date);assert.equal(r.date.toString(),i.$set.date.toString());o=r;t()})})});it("handles $addToSet (gh-545)",function(t){var n=start(),r=n.model("BlogPostForUpdates",collection),i=o.owners[0],s={$addToSet:{owners:i}};r.update({_id:e._id},s,function(s){assert.ifError(s);r.findById(e,function(e,r){n.close();assert.ifError(e);assert.equal(1,r.owners.length);assert.equal(r.owners[0].toString(),i.toString());o=r;t()})})});it("handles $addToSet with $each (gh-545)",function(t){var n=start(),r=n.model("BlogPostForUpdates",collection),i=o.owners[0],s=new DocumentObjectId,u={$addToSet:{owners:{$each:[i,s]}}};r.update({_id:e._id},u,function(u){assert.ifError(u);r.findById(e,function(e,r){n.close();assert.ifError(e);assert.equal(2,r.owners.length);assert.equal(r.owners[0].toString(),i.toString());assert.equal(r.owners[1].toString(),s.toString());o=s;t()})})});it("handles $pop and $unset (gh-574)",function(t){var n=start(),r=n.model("BlogPostForUpdates",collection),i={$pop:{owners:-1},$unset:{title:1}};r.update({_id:e._id},i,function(i){assert.ifError(i);r.findById(e,function(e,r){n.close();assert.ifError(e);assert.equal(1,r.owners.length);assert.equal(r.owners[0].toString(),o.toString());assert.strictEqual(undefined,r.title);t()})})});it("works with nested positional notation",function(t){var n=start(),r=n.model("BlogPostForUpdates",collection),i={$set:{"comments.0.comments.0.date":"11/5/2011","comments.1.body":9e3}};r.update({_id:e._id},i,function(i){assert.ifError(i);r.findById(e,function(e,r){n.close();assert.ifError(e);assert.equal(2,r.comments.length,2);assert.equal(r.comments[0].body,"worked great");assert.equal(r.comments[1].body,"9000");assert.equal(r.comments[0].comments[0].date.toString(),(new Date("11/5/2011")).toString());assert.equal(r.comments[1].comments.length,0);t()})})});it("handles $pull with obj literal (gh-542)",function(t){var n=start(),r=n.model("BlogPostForUpdates",collection);r.findById(e,function(i,s){assert.ifError(i);var o={$pull:{comments:{_id:s.comments[0].id}}};r.update({_id:e._id},o,function(i){assert.ifError(i);r.findById(e,function(e,r){n.close();assert.ifError(e);assert.equal(1,r.comments.length);assert.equal(r.comments[0].body,"9000");t()})})})});it("handles $pull of obj literal and nested $in",function(t){var n=start(),r=n.model("BlogPostForUpdates",collection);r.findById(e,function(i,s){assert.ifError(i);var o={$pull:{comments:{body:{$in:[s.comments[0].body]}}}};r.update({_id:e._id},o,function(i){assert.ifError(i);r.findById(e,function(e,r){n.close();assert.ifError(e);assert.equal(0,r.comments.length);s=r;t()})})})});it("handles $pull and nested $nin",function(t){var n=start(),r=n.model("BlogPostForUpdates",collection);r.findById(e,function(i,s){assert.ifError(i);s.comments.push({body:"hi"},{body:"there"});s.save(function(i){assert.ifError(i);r.findById(e,function(i,s){assert.ifError(i);assert.equal(2,s.comments.length);var o={$pull:{comments:{body:{$nin:["there"]}}}};r.update({_id:s._id},o,function(i){assert.ifError(i);r.findById(e,function(e,r){n.close();assert.ifError(e);assert.equal(1,r.comments.length);t()})})})})})});it("updates numbers atomically",function(e){var t=start(),n=t.model("BlogPostForUpdates",collection),r=4,i=[],s=new n;s.set("meta.visitors",5);s.save(function(i){function u(){n.findOne({_id:s.get("_id")},function(n,r){t.close();assert.ifError(n);assert.equal(9,r.get("meta.visitors"));e()})}assert.ifError(i);for(var o=0;o<4;++o)n.update({_id:s._id},{$inc:{"meta.visitors":1}},function(e){assert.ifError(e);--r||u()})})});describe("honors strict schemas",function(){it("(gh-699)",function(){var e=start(),t=e.model("UpdateStrictSchema");e.close();var n=t.find()._castUpdate({ignore:!0});assert.equal(!1,n);var n=t.find()._castUpdate({$unset:{x:1}});assert.equal(1,Object.keys(n.$unset).length)});it("works",function(e){var t=start(),n=t.model("UpdateStrictSchema"),r=new n({name:"orange crush"});r.save(function(i){assert.ifError(i);n.update({_id:r._id},{ignore:!0},function(i,s){assert.ifError(i);assert.equal(0,s);n.findById(r._id,function(i,s){assert.ifError(i);assert.ok(!s.ignore);assert.ok(!s._doc.ignore);n.update({_id:r._id},{name:"Drukqs",foo:"fooey"},function(i,s){assert.ifError(i);assert.equal(1,s);n.findById(r._id,function(n,r){t.close();assert.ifError(n);assert.ok(!r._doc.foo);e()})})})})})})});it("passes number of affected docs",function(e){var t=start(),n=t.model("BlogPostForUpdates","wwwwowowo"+random());n.create({title:"one"},{title:"two"},{title:"three"},function(r){assert.ifError(r);n.update({},{title:"newtitle"},{multi:!0},function(n,r){t.close();assert.ifError(n);assert.equal(3,r);e()})})});it("updates a number to null (gh-640)",function(e){var t=start(),n=t.model("BlogPostB"),r=new n({meta:{visitors:null}});r.save(function(i){assert.ifError(i);n.findById(r,function(r,i){assert.ifError(r);assert.strictEqual(i.meta.visitors,null);n.update({_id:i._id},{meta:{visitors:null}},function(n,r){t.close();assert.strictEqual(null,n);e()})})})});it("handles $pull from Mixed arrays (gh-735)",function(e){var t=start(),n=new Schema({comments:[]}),r=t.model("gh-735",n,"gh-735_"+random());r.create({comments:[{name:"node 0.8"}]},function(n,i){assert.ifError(n);r.update({_id:i._id},{$pull:{comments:{name:"node 0.8"}}},function(n,r){assert.ifError(n);assert.equal(1,r);t.close();e()})})});it("handles $push with $ positionals (gh-1057)",function(e){var t=start(),n=new Schema({name:String}),r=new Schema({name:String,tasks:[n]}),i=new Schema({name:String,components:[r]}),s=t.model("1057-project",i,"1057-"+random());s.create({name:"my project"},function(t,n){assert.ifError(t);var r=n.id,i=n.components.create({name:"component"});s.update({_id:r},{$push:{components:i}},function(t){assert.ifError(t);var n=i.tasks.create({name:"my task"});s.update({_id:r,"components._id":i._id},{$push:{"components.$.tasks":n}},function(t){assert.ifError(t);s.findById(r,function(t,r){assert.ifError(t);assert.ok(r);assert.equal(1,r.components.length);assert.equal("component",r.components[0].name);assert.equal(i.id,r.components[0].id);assert.equal(1,r.components[0].tasks.length);assert.equal("my task",r.components[0].tasks[0].name);assert.equal(n.id,r.components[0].tasks[0].id);e()})})})})});it("handles nested paths starting with numbers (gh-1062)",function(e){var t=start(),n=Schema({counts:Schema.Types.Mixed}),r=t.model("gh-1062",n,"1062-"+random());r.create({counts:{}},function(t,n){assert.ifError(t);r.update({},{$inc:{"counts.1":1,"counts.1a":10}},function(t,i){assert.ifError(t);r.findById(n,function(t,n){assert.ifError(t);assert.equal(1,n.counts[1]);assert.equal(10,n.counts["1a"]);e()})})})})});