/*!
 * Module dependencies.
 */function MongooseDocumentArray(e,t,n){var r=[];r.push.apply(r,e);r.__proto__=MongooseDocumentArray.prototype;r._atomics={};r.validators=[];r._path=t;if(n){r._parent=n;r._schema=n.schema.path(t);n.on("save",r.notify("save"));n.on("isNew",r.notify("isNew"))}return r}var MongooseArray=require("./array"),driver=global.MONGOOSE_DRIVER_PATH||"../drivers/node-mongodb-native",ObjectId=require(driver+"/objectid"),ObjectIdSchema=require("../schema/objectid"),util=require("util");MongooseDocumentArray.prototype.__proto__=MongooseArray.prototype;MongooseDocumentArray.prototype._cast=function(e){var t=new this._schema.casterConstructor(e,this);return t};MongooseDocumentArray.prototype.id=function(e){var t,n;try{t=ObjectId.toString(ObjectIdSchema.prototype.cast.call({},e))}catch(r){t=null}for(var i=0,s=this.length;i<s;i++){n=this[i].get("_id");if(n instanceof ObjectId){if(t==n)return this[i]}else if(String(e)==n)return this[i]}return null};MongooseDocumentArray.prototype.toObject=function(){return this.map(function(e){return e&&e.toObject()||null})};MongooseDocumentArray.prototype.inspect=function(){return"["+this.map(function(e){return e?e.inspect?e.inspect():util.inspect(e):"null"}).join("\n")+"]"};MongooseDocumentArray.prototype.create=function(e){return new this._schema.casterConstructor(e)};MongooseDocumentArray.prototype.notify=function(t){var n=this;return function(r){var i=n.length;while(i--)n[i].emit(t,r)}};module.exports=MongooseDocumentArray;