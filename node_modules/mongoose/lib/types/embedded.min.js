/*!
 * Module dependencies.
 */function EmbeddedDocument(e,t,n){if(t){this.__parentArray=t;this.__parent=t._parent}else{this.__parentArray=undefined;this.__parent=undefined}Document.call(this,e,undefined,n);var r=this;this.on("isNew",function(e){r.isNew=e})}function ownerDocument(e){var t=e.__parent;while(t.__parent)t=t.__parent;return t}var Document=require("../document"),inspect=require("util").inspect;EmbeddedDocument.prototype.__proto__=Document.prototype;EmbeddedDocument.prototype.markModified=function(e){if(!this.__parentArray)return;this._activePaths.modify(e);this.isNew?this.__parentArray._markModified():this.__parentArray._markModified(this,e)};EmbeddedDocument.prototype.save=function(e){e&&e(null);return this};EmbeddedDocument.prototype.remove=function(e){if(!this.__parentArray)return this;var t;if(!this.willRemove){t=this._doc._id;if(!t)throw new Error("For your own good, Mongoose does not know how to remove an EmbeddedDocument that has no _id");this.__parentArray.pull({_id:t});this.willRemove=!0}e&&e(null);return this};EmbeddedDocument.prototype.update=function(){throw new Error("The #update method is not available on EmbeddedDocuments")};EmbeddedDocument.prototype.inspect=function(){return inspect(this.toObject())};EmbeddedDocument.prototype.invalidate=function(e,t,n){if(!this.__parent)return!1;var r=this.__parentArray.indexOf(this),i=this.__parentArray._path,s=[i,r,e].join(".");this.__parent.invalidate(s,t);n&&(this._validationError=ownerDocument(this)._validationError);return!0};EmbeddedDocument.prototype.ownerDocument=function(){return ownerDocument(this)};EmbeddedDocument.prototype.parent=function(){return this.__parent};EmbeddedDocument.prototype.parentArray=function(){return this.__parentArray};module.exports=EmbeddedDocument;