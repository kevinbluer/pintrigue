/*!
 * Module dependencies.
 */function SchemaString(e,t){this.enumValues=[];this.regExp=null;SchemaType.call(this,e,t,"String")}function handleSingle(e){return this.castForQuery(e)}function handleArray(e){var t=this;return e.map(function(e){return t.castForQuery(e)})}var SchemaType=require("../schematype"),CastError=SchemaType.CastError;SchemaString.prototype.__proto__=SchemaType.prototype;SchemaString.prototype.enum=function(){var e=arguments.length;if(!e||undefined===arguments[0]||!1===arguments[0]){if(this.enumValidator){this.enumValidator=!1;this.validators=this.validators.filter(function(e){return e[1]!="enum"})}return}for(var t=0;t<e;t++)undefined!==arguments[t]&&this.enumValues.push(this.cast(arguments[t]));if(!this.enumValidator){var n=this.enumValues;this.enumValidator=function(e){return undefined===e||~n.indexOf(e)};this.validators.push([this.enumValidator,"enum"])}};SchemaString.prototype.lowercase=function(){return this.set(function(e){return e.toLowerCase()})};SchemaString.prototype.uppercase=function(){return this.set(function(e){return e.toUpperCase()})};SchemaString.prototype.trim=function(){return this.set(function(e){return e.trim()})};SchemaString.prototype.match=function(t){this.validators.push([function(e){return null!=e&&""!==e?t.test(e):!0},"regexp"])};SchemaString.prototype.checkRequired=function(t){return SchemaType._isRef(this,t,!0)?null!=t:(t instanceof String||typeof t=="string")&&t.length};SchemaString.prototype.cast=function(e,t,n){if(SchemaType._isRef(this,e,n))return e;if(e===null)return e;if("undefined"!=typeof e&&e.toString)return e.toString();throw new CastError("string",e)};SchemaString.prototype.$conditionalHandlers={$ne:handleSingle,$in:handleArray,$nin:handleArray,$gt:handleSingle,$lt:handleSingle,$gte:handleSingle,$lte:handleSingle,$all:handleArray,$regex:handleSingle,$options:handleSingle};SchemaString.prototype.castForQuery=function(e,t){var n;if(arguments.length===2){n=this.$conditionalHandlers[e];if(!n)throw new Error("Can't use "+e+" with String.");return n.call(this,t)}t=e;return t instanceof RegExp?t:this.cast(t)};module.exports=SchemaString;