/*!
 * Module dependencies.
 */function ObjectId(e,t){SchemaType.call(this,e,t,"ObjectID")}function handleSingle(e){return this.cast(e)}function handleArray(e){var t=this;return e.map(function(e){return t.cast(e)})}function defaultId(){return new oid}function resetId(e){this.__id=null;return e}var SchemaType=require("../schematype"),CastError=SchemaType.CastError,driver=global.MONGOOSE_DRIVER_PATH||"./../drivers/node-mongodb-native",oid=require("../types/objectid");ObjectId.prototype.__proto__=SchemaType.prototype;ObjectId.prototype.checkRequired=function(t){return SchemaType._isRef(this,t,!0)?null!=t:t instanceof oid};ObjectId.prototype.cast=function(e,t,n){if(SchemaType._isRef(this,e,n))return e;if(e===null)return e;if(e instanceof oid)return e;if(e._id&&e._id instanceof oid)return e._id;if(e.toString)return oid.fromString(e.toString());throw new CastError("object id",e)};ObjectId.prototype.$conditionalHandlers={$ne:handleSingle,$in:handleArray,$nin:handleArray,$gt:handleSingle,$lt:handleSingle,$gte:handleSingle,$lte:handleSingle,$all:handleArray};ObjectId.prototype.castForQuery=function(e,t){var n;if(arguments.length===2){n=this.$conditionalHandlers[e];if(!n)throw new Error("Can't use "+e+" with ObjectId.");return n.call(this,t)}return this.cast(e)};ObjectId.prototype.auto=function(e){if(e){this.default(defaultId);this.set(resetId)}};module.exports=ObjectId;