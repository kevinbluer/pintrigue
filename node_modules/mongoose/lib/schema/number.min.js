/*!
 * Module requirements.
 */function SchemaNumber(e,t){SchemaType.call(this,e,t,"Number")}function handleSingle(e){return this.cast(e)}function handleArray(e){var t=this;return e.map(function(e){return t.cast(e)})}var SchemaType=require("../schematype"),CastError=SchemaType.CastError;SchemaNumber.prototype.__proto__=SchemaType.prototype;SchemaNumber.prototype.checkRequired=function(t){return SchemaType._isRef(this,t,!0)?null!=t:typeof t=="number"||t instanceof Number};SchemaNumber.prototype.min=function(e,t){this.minValidator&&(this.validators=this.validators.filter(function(e){return e[1]!="min"}));e!=null&&this.validators.push([function(t){return t===null||t>=e},"min"]);return this};SchemaNumber.prototype.max=function(e,t){this.maxValidator&&(this.validators=this.validators.filter(function(e){return e[1]!="max"}));e!=null&&this.validators.push([this.maxValidator=function(t){return t===null||t<=e},"max"]);return this};SchemaNumber.prototype.cast=function(e,t,n){if(SchemaType._isRef(this,e,n))return e;if(!isNaN(e)){if(null===e)return e;if(""===e)return null;"string"==typeof e&&(e=Number(e));if(e instanceof Number)return e;if("number"==typeof e)return e;if(e.toString&&!Array.isArray(e)&&e.toString()==Number(e))return new Number(e)}throw new CastError("number",e)};SchemaNumber.prototype.$conditionalHandlers={$lt:handleSingle,$lte:handleSingle,$gt:handleSingle,$gte:handleSingle,$ne:handleSingle,$in:handleArray,$nin:handleArray,$mod:handleArray,$all:handleArray};SchemaNumber.prototype.castForQuery=function(e,t){var n;if(arguments.length===2){n=this.$conditionalHandlers[e];if(!n)throw new Error("Can't use "+e+" with Number.");return n.call(this,t)}t=this.cast(e);return t==null?t:t};module.exports=SchemaNumber;