var mongodb=process.env["TEST_NATIVE"]!=null?require("../../lib/bson").native():require("../../lib/bson").pure(),testCase=require("nodeunit").testCase,mongoO=require("../../lib/bson").pure(),Buffer=require("buffer").Buffer,gleak=require("../../tools/gleak"),fs=require("fs"),BSON=mongoO.BSON,Code=mongoO.Code,Binary=mongoO.Binary,Timestamp=mongoO.Timestamp,Long=mongoO.Long,MongoReply=mongoO.MongoReply,ObjectID=mongoO.ObjectID,ObjectId=mongoO.ObjectId,Symbol=mongoO.Symbol,DBRef=mongoO.DBRef,Double=mongoO.Double,MinKey=mongoO.MinKey,MaxKey=mongoO.MaxKey,BinaryParser=mongoO.BinaryParser,vm=require("vm"),BSONSE=mongodb,BSONDE=mongodb;BSONDE.BSON_BINARY_SUBTYPE_DEFAULT=0;BSONDE.BSON_BINARY_SUBTYPE_FUNCTION=1;BSONDE.BSON_BINARY_SUBTYPE_BYTE_ARRAY=2;BSONDE.BSON_BINARY_SUBTYPE_UUID=3;BSONDE.BSON_BINARY_SUBTYPE_MD5=4;BSONDE.BSON_BINARY_SUBTYPE_USER_DEFINED=128;BSONSE.BSON_BINARY_SUBTYPE_DEFAULT=0;BSONSE.BSON_BINARY_SUBTYPE_FUNCTION=1;BSONSE.BSON_BINARY_SUBTYPE_BYTE_ARRAY=2;BSONSE.BSON_BINARY_SUBTYPE_UUID=3;BSONSE.BSON_BINARY_SUBTYPE_MD5=4;BSONSE.BSON_BINARY_SUBTYPE_USER_DEFINED=128;var hexStringToBinary=function(e){var t=e.length/2,n="";for(var r=0;r<t;r++)n+=String.fromCharCode(parseInt(e[r*2]+e[r*2+1],16));return n},assertBuffersEqual=function(e,t,n){t.length!=n.length&&e.fail("Buffers do not have the same length",t,n);for(var r=0;r<t.length;r++)e.equal(t[r],n[r])},ISODate=function(e){var t;if(typeof e.getTime=="function")return e;if(t=e.match(/^(\d{4})(-(\d{2})(-(\d{2})(T(\d{2}):(\d{2})(:(\d{2})(\.(\d+))?)?(Z|((\+|-)(\d{2}):(\d{2}))))?)?)?$/)){var n=new Date;n.setUTCFullYear(Number(t[1]));n.setUTCMonth(Number(t[3])-1||0);n.setUTCDate(Number(t[5])||0);n.setUTCHours(Number(t[7])||0);n.setUTCMinutes(Number(t[8])||0);n.setUTCSeconds(Number(t[10])||0);n.setUTCMilliseconds(Number("."+t[12])*1e3||0);if(t[13]&&t[13]!=="Z"){var r=Number(t[16])||0,i=Number(t[17])||0;r*=36e5;i*=6e4;var s=r+i;t[15]=="+"&&(s=-s);n=new Date(n.valueOf()+s)}return n}throw new Error("Invalid ISO 8601 date given.",__filename)};exports.setUp=function(e){e()};exports.tearDown=function(e){e()};exports["Should Correctly create ObjectID and do deep equals"]=function(e){var t={hello:new ObjectID};t.hello.toHexString();var n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0);e.deepEqual(t,(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n));e.done()};exports["Should Correctly get BSON types from require"]=function(e){var t=require("../../lib/bson");e.ok(t.ObjectID===ObjectID);e.ok(t.Binary===Binary);e.ok(t.Long===Long);e.ok(t.Timestamp===Timestamp);e.ok(t.Code===Code);e.ok(t.DBRef===DBRef);e.ok(t.Symbol===Symbol);e.ok(t.MinKey===MinKey);e.ok(t.MaxKey===MaxKey);e.ok(t.Double===Double);e.done()};exports["Should Correctly Deserialize object"]=function(e){var t=[95,0,0,0,2,110,115,0,42,0,0,0,105,110,116,101,103,114,97,116,105,111,110,95,116,101,115,116,115,95,46,116,101,115,116,95,105,110,100,101,120,95,105,110,102,111,114,109,97,116,105,111,110,0,8,117,110,105,113,117,101,0,0,3,107,101,121,0,12,0,0,0,16,97,0,1,0,0,0,0,2,110,97,109,101,0,4,0,0,0,97,95,49,0,0],n="";for(var r=0;r<t.length;r++)n+=BinaryParser.fromByte(t[r]);var i=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(new Buffer(n,"binary"));e.equal("a_1",i.name);e.equal(!1,i.unique);e.equal(1,i.key.a);e.done()};exports["Should Correctly Deserialize object with all types"]=function(e){var t=[26,1,0,0,7,95,105,100,0,161,190,98,75,118,169,3,0,0,3,0,0,4,97,114,114,97,121,0,26,0,0,0,16,48,0,1,0,0,0,16,49,0,2,0,0,0,16,50,0,3,0,0,0,0,2,115,116,114,105,110,103,0,6,0,0,0,104,101,108,108,111,0,3,104,97,115,104,0,19,0,0,0,16,97,0,1,0,0,0,16,98,0,2,0,0,0,0,9,100,97,116,101,0,161,190,98,75,0,0,0,0,7,111,105,100,0,161,190,98,75,90,217,18,0,0,1,0,0,5,98,105,110,97,114,121,0,7,0,0,0,2,3,0,0,0,49,50,51,16,105,110,116,0,42,0,0,0,1,102,108,111,97,116,0,223,224,11,147,169,170,64,64,11,114,101,103,101,120,112,0,102,111,111,98,97,114,0,105,0,8,98,111,111,108,101,97,110,0,1,15,119,104,101,114,101,0,25,0,0,0,12,0,0,0,116,104,105,115,46,120,32,61,61,32,51,0,5,0,0,0,0,3,100,98,114,101,102,0,37,0,0,0,2,36,114,101,102,0,5,0,0,0,116,101,115,116,0,7,36,105,100,0,161,190,98,75,2,180,1,0,0,2,0,0,0,10,110,117,108,108,0,0],n="";for(var r=0;r<t.length;r++)n+=BinaryParser.fromByte(t[r]);var i=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(new Buffer(n,"binary"));e.equal("hello",i.string);e.deepEqual([1,2,3],i.array);e.equal(1,i.hash.a);e.equal(2,i.hash.b);e.ok(i.date!=null);e.ok(i.oid!=null);e.ok(i.binary!=null);e.equal(42,i.int);e.equal(33.3333,i.float);e.ok(i.regexp!=null);e.equal(!0,i.boolean);e.ok(i.where!=null);e.ok(i.dbref!=null);e.ok(i[null]==null);e.done()};exports["Should Serialize and Deserialize String"]=function(e){var t={hello:"world"},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);e.deepEqual(t,(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n));e.done()};exports["Should Serialize and Deserialize Empty String"]=function(e){var t={hello:""},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);e.deepEqual(t,(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n));e.done()};exports["Should Correctly Serialize and Deserialize Integer"]=function(e){var t={doc:5},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);e.deepEqual(t,(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n));e.deepEqual(t,(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(r));e.done()};exports["Should Correctly Serialize and Deserialize null value"]=function(e){var t={doc:null},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.equal(null,i.doc);e.done()};exports["Should Correctly Serialize and Deserialize Number"]=function(e){var t={doc:5.5},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);e.deepEqual(t,(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n));e.done()};exports["Should Correctly Serialize and Deserialize Integer"]=function(e){var t={doc:42},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);e.deepEqual(t.doc,(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n).doc);t={doc:-5600};n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0);var r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);e.deepEqual(t.doc,(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n).doc);t={doc:2147483647};n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0);var r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);e.deepEqual(t.doc,(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n).doc);t={doc:-2147483648};n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0);var r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);e.deepEqual(t.doc,(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n).doc);e.done()};exports["Should Correctly Serialize and Deserialize Object"]=function(e){var t={doc:{age:42,name:"Spongebob",shoe_size:9.5}},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);e.deepEqual(t.doc.age,(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n).doc.age);e.deepEqual(t.doc.name,(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n).doc.name);e.deepEqual(t.doc.shoe_size,(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n).doc.shoe_size);e.done()};exports["Should Correctly Serialize and Deserialize Array"]=function(e){var t={doc:[1,2,"a","b"]},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.equal(t.doc[0],i.doc[0]);e.equal(t.doc[1],i.doc[1]);e.equal(t.doc[2],i.doc[2]);e.equal(t.doc[3],i.doc[3]);e.done()};exports["Should Correctly Serialize and Deserialize Array with added on functions"]=function(e){Array.prototype.toXml=function(){};var t={doc:[1,2,"a","b"]},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.equal(t.doc[0],i.doc[0]);e.equal(t.doc[1],i.doc[1]);e.equal(t.doc[2],i.doc[2]);e.equal(t.doc[3],i.doc[3]);e.done()};exports["Should correctly deserialize a nested object"]=function(e){var t={doc:{doc:1}},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);e.deepEqual(t.doc.doc,(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n).doc.doc);e.done()};exports["Should Correctly Serialize and Deserialize A Boolean"]=function(e){var t={doc:!0},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);e.equal(t.doc,(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n).doc);e.done()};exports["Should Correctly Serialize and Deserialize a Date"]=function(e){var t=new Date;t.setUTCDate(12);t.setUTCFullYear(2009);t.setUTCMonth(10);t.setUTCHours(12);t.setUTCMinutes(0);t.setUTCSeconds(30);var n={doc:t},r=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(n,!1,!0),i=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(n,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(n,!1,i,0);assertBuffersEqual(e,r,i,0);e.equal(n.date,(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(r).doc.date);e.done()};exports["Should Correctly Serialize and Deserialize a Date from another VM"]=function(e){var t="date1 = new Date();",n=vm.createContext({date1:null});vm.runInContext(t,n,"myfile.vm");var r=n.date1;r.setUTCDate(12);r.setUTCFullYear(2009);r.setUTCMonth(10);r.setUTCHours(12);r.setUTCMinutes(0);r.setUTCSeconds(30);var i={doc:r},s=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(i,!1,!0),o=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(i,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(i,!1,o,0);assertBuffersEqual(e,s,o,0);e.equal(i.date,(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(s).doc.date);e.done()};exports["Should Correctly Serialize nested doc"]=function(e){var t={string:"Strings are great",decimal:3.14159265,bool:!0,integer:5,subObject:{moreText:"Bacon ipsum dolor.",longKeylongKeylongKeylongKeylongKeylongKey:"Pork belly."},subArray:[1,2,3,4,5,6,7,8,9,10],anotherString:"another string"},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);e.done()};exports["Should Correctly Serialize and Deserialize Oid"]=function(e){var t={doc:new ObjectID},n={doc:ObjectID.createFromHexString(t.doc.toHexString())},r=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),i=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,i,0);assertBuffersEqual(e,r,i,0);e.deepEqual(t,(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(r));e.done()};exports["Should Correctly encode Empty Hash"]=function(e){var t={},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);e.deepEqual(t,(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n));e.done()};exports["Should Correctly Serialize and Deserialize Ordered Hash"]=function(e){var t={doc:{b:1,a:2,c:3,d:4}},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n).doc,s=[];for(var o in i)s.push(o);e.deepEqual(["b","a","c","d"],s);e.done()};exports["Should Correctly Serialize and Deserialize Regular Expression"]=function(e){var t={doc:/foobar/mi},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.deepEqual(t.doc.toString(),i.doc.toString());e.done()};exports["Should Correctly Serialize and Deserialize a Binary object"]=function(e){var t=new Binary,n="binstring";for(var r=0;r<n.length;r++)t.put(n.charAt(r));var i={doc:t},s=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(i,!1,!0),o=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(i,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(i,!1,o,0);assertBuffersEqual(e,s,o,0);var u=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(s);e.deepEqual(i.doc.value(),u.doc.value());e.done()};exports["Should Correctly Serialize and Deserialize a big Binary object"]=function(e){var t=fs.readFileSync("test/node/data/test_gs_weird_bug.png","binary"),n=new Binary;n.write(t);var r={doc:n},i=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(r,!1,!0),s=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(r,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(r,!1,s,0);assertBuffersEqual(e,i,s,0);var o=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(i);e.deepEqual(r.doc.value(),o.doc.value());e.done()};exports["Should Correctly Serialize and Deserialize DBRef"]=function(e){var t=new ObjectID,n={dbref:new DBRef("namespace",t,null)},r=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(n,!1,!0),i=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(n,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(n,!1,i,0);assertBuffersEqual(e,r,i,0);var s=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(r);e.equal("namespace",s.dbref.namespace);e.deepEqual(s.dbref.oid.toHexString(),t.toHexString());e.done()};exports["Should Correctly Serialize and Deserialize partial DBRef"]=function(e){var t=new ObjectID,n={name:"something",user:{$ref:"username",$id:t}},r=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(n,!1,!0),i=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(n,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(n,!1,i,0);assertBuffersEqual(e,r,i,0);var s=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(r);e.equal("something",s.name);e.equal("username",s.user.namespace);e.equal(t.toString(),s.user.oid.toString());e.done()};exports["Should Correctly Serialize and Deserialize simple Int"]=function(e){var t={doc:2147483648},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.deepEqual(t.doc,i.doc);e.done()};exports["Should Correctly Serialize and Deserialize Long Integer"]=function(e){var t={doc:Long.fromNumber(0x8000000000000000)},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.deepEqual(t.doc,i.doc);t={doc:Long.fromNumber(-9223372036854776)};n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0);i=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.deepEqual(t.doc,i.doc);t={doc:Long.fromNumber(-0x8000000000000000)};n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0);i=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.deepEqual(t.doc,i.doc);e.done()};exports["Should Deserialize Large Integers as Number not Long"]=function(e){function t(t){var n={doc:t},r=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(n,!1,!0),i=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(n,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(n,!1,i,0);assertBuffersEqual(e,r,i,0);var s=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(r);e.deepEqual(n.doc,s.doc)}t(Math.pow(2,52));t(Math.pow(2,53)-1);t(Math.pow(2,53));t(-Math.pow(2,52));t(-Math.pow(2,53)+1);t(-Math.pow(2,53));t(Math.pow(2,65));t(-Math.pow(2,65));t(0x8000000000000000);t(0x112210f47de98100);t(-0x112210f47de98100);e.done()};exports["Should Correctly Serialize and Deserialize Long Integer and Timestamp as different types"]=function(e){var t=Long.fromNumber(0x8000000000000000),n=Timestamp.fromNumber(0x8000000000000000);e.ok(t instanceof Long);e.ok(!(t instanceof Timestamp));e.ok(n instanceof Timestamp);e.ok(!(n instanceof Long));var r={doc:t,doc2:n},i=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(r,!1,!0),s=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(r));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(r,!1,s,0);assertBuffersEqual(e,i,s,0);var o=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(i);e.deepEqual(r.doc,o.doc);e.done()};exports["Should Always put the id as the first item in a hash"]=function(e){var t={doc:{not_id:1,_id:2}},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n),s=[];for(var o in i.doc)s.push(o);e.deepEqual(["not_id","_id"],s);e.done()};exports["Should Correctly Serialize and Deserialize a User defined Binary object"]=function(e){var t=new Binary;t.sub_type=BSON.BSON_BINARY_SUBTYPE_USER_DEFINED;var n="binstring";for(var r=0;r<n.length;r++)t.put(n.charAt(r));var i={doc:t},s=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(i,!1,!0),o=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(i,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(i,!1,o,0);assertBuffersEqual(e,s,o,0);var u=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(s);e.deepEqual(u.doc.sub_type,BSON.BSON_BINARY_SUBTYPE_USER_DEFINED);e.deepEqual(i.doc.value(),u.doc.value());e.done()};exports["Should Correclty Serialize and Deserialize a Code object"]=function(e){var t={doc:{doc2:new Code("this.a > i",{i:1})}},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.deepEqual(t.doc.doc2.code,i.doc.doc2.code);e.deepEqual(t.doc.doc2.scope.i,i.doc.doc2.scope.i);e.done()};exports["Should Correctly serialize and deserialize and embedded array"]=function(e){var t={a:0,b:["tmp1","tmp2","tmp3","tmp4","tmp5","tmp6","tmp7","tmp8","tmp9","tmp10","tmp11","tmp12","tmp13","tmp14","tmp15","tmp16"]},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.deepEqual(t.a,i.a);e.deepEqual(t.b,i.b);e.done()};exports["Should Correctly Serialize and Deserialize UTF8"]=function(e){var t={name:"本荘由利地域に洪水警報",name1:"öüóőúéáűíÖÜÓŐÚÉÁŰÍ",name2:"abcdedede"},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.deepEqual(t,i);e.done()};exports["Should Correctly Serialize and Deserialize query object"]=function(e){var t={count:"remove_with_no_callback_bug_test",query:{},fields:null},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.deepEqual(t,i);e.done()};exports["Should Correctly Serialize and Deserialize empty query object"]=function(e){var t={},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.deepEqual(t,i);e.done()};exports["Should Correctly Serialize and Deserialize array based doc"]=function(e){var t={b:[1,2,3],_id:new ObjectID},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.deepEqual(t.b,i.b);e.deepEqual(t,i);e.done()};exports["Should Correctly Serialize and Deserialize Symbol"]=function(e){if(Symbol!=null){var t={b:[new Symbol("test")]},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.deepEqual(t.b,i.b);e.deepEqual(t,i);e.ok(i.b[0]instanceof Symbol)}e.done()};exports["Should handle Deeply nested document"]=function(e){var t={a:{b:{c:{d:2}}}},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=(new 
BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.deepEqual(t,i);e.done()};exports["Should handle complicated all typed object"]=function(e){var t=new Date,n=new ObjectID,r="binstring",i=new Binary;for(var s=0;s<r.length;s++)i.put(r.charAt(s));var o={string:"hello",array:[1,2,3],hash:{a:1,b:2},date:t,oid:n,binary:i,"int":42,"float":33.3333,regexp:/regexp/,"boolean":!0,"long":t.getTime(),where:new Code("this.a > i",{i:1}),dbref:new DBRef("namespace",n,"integration_tests_")},n=new ObjectID.createFromHexString(n.toHexString()),r="binstring",i=new Binary;for(var s=0;s<r.length;s++)i.put(r.charAt(s));var u={string:"hello",array:[1,2,3],hash:{a:1,b:2},date:t,oid:n,binary:i,"int":42,"float":33.3333,regexp:/regexp/,"boolean":!0,"long":t.getTime(),where:new Code("this.a > i",{i:1}),dbref:new DBRef("namespace",n,"integration_tests_")},a=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(o,!1,!0),f=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(o,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(o,!1,f,0);assertBuffersEqual(e,a,f,0);var f=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(u,!1,!0);for(var l=0;l<f.length;l++)require("assert").equal(f[l],a[l]);e.done()};exports["Should Correctly Serialize Complex Nested Object"]=function(e){var t={email:"email@email.com",encrypted_password:"password",friends:["4db96b973d01205364000006","4dc77b24c5ba38be14000002"],location:[72.4930088,23.0431957],name:"Amit Kumar",password_salt:"salty",profile_fields:[],username:"amit",_id:new ObjectID},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=t;i._id=ObjectID.createFromHexString(i._id.toHexString());var r=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(i,!1,!0);for(var s=0;s<r.length;s++)require("assert").equal(r[s],n[s]);e.done()};exports["Should correctly massive doc"]=function(e){var t=new ObjectID,n=new ObjectID,r={dbref2:new DBRef("namespace",t,"integration_tests_"),_id:n},i={dbref2:new DBRef("namespace",ObjectID.createFromHexString(t.toHexString()),"integration_tests_"),_id:new ObjectID.createFromHexString(n.toHexString())},s=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(r,!1,!0),o=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(r,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(r,!1,o,0);assertBuffersEqual(e,s,o,0);var o=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(i,!1,!0);e.done()};exports["Should Correctly Serialize/Deserialize regexp object"]=function(e){var t={b:/foobaré/},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var r=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0);for(var i=0;i<r.length;i++)require("assert").equal(r[i],n[i]);e.done()};exports["Should Correctly Serialize/Deserialize complicated object"]=function(e){var t={a:{b:{c:[new ObjectID,new ObjectID]}},d:{f:1332.3323}},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.deepEqual(t,i);e.done()};exports["Should Correctly Serialize/Deserialize nested object"]=function(e){var t={_id:{date:new Date,gid:"6f35f74d2bea814e21000000"},value:{b:{countries:{"--":386},total:1599},bc:{countries:{"--":3},total:10},gp:{countries:{"--":2},total:13},mgc:{countries:{"--":2},total:14}}},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.deepEqual(t,i);e.done()};exports["Should Correctly Serialize/Deserialize nested object with even more nesting"]=function(e){var t={_id:{date:{a:1,b:2,c:new Date},gid:"6f35f74d2bea814e21000000"},value:{b:{countries:{"--":386},total:1599},bc:{countries:{"--":3},total:10},gp:{countries:{"--":2},total:13},mgc:{countries:{"--":2},total:14}}},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.deepEqual(t,i);e.done()};exports["Should Correctly Serialize empty name object"]=function(e){var t={"":"test",bbbb:1},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.equal(r[""],"test");e.equal(r.bbbb,1);e.done()};exports["Should Correctly handle Forced Doubles to ensure we allocate enough space for cap collections"]=function(e){if(Double!=null){var t=new Double(100),n={value:t},r=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(n,!1,!0),i=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(n,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(n,!1,i,0);assertBuffersEqual(e,r,i,0);var s=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(r);e.deepEqual({value:100},s)}e.done()};exports["Should deserialize correctly"]=function(e){var t={_id:new ObjectID("4e886e687ff7ef5e00000162"),str:"foreign",type:2,timestamp:ISODate("2011-10-02T14:00:08.383Z"),links:["http://www.reddit.com/r/worldnews/comments/kybm0/uk_home_secretary_calls_for_the_scrapping_of_the/"]},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.deepEqual(t,i);e.done()};exports["Should correctly serialize and deserialize MinKey and MaxKey values"]=function(e){var t={_id:new ObjectID("4e886e687ff7ef5e00000162"),minKey:new MinKey,maxKey:new MaxKey},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.deepEqual(t,i);e.ok(i.minKey instanceof MinKey);e.ok(i.maxKey instanceof MaxKey);e.done()};exports["Should correctly serialize Double value"]=function(e){var t={value:new Double(34343.2222)},n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=new Buffer((new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).calculateObjectSize(t,!1,!0));(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serializeWithBufferAndIndex(t,!1,r,0);assertBuffersEqual(e,n,r,0);var i=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.ok(t.value.valueOf(),i.value);e.ok(t.value.value,i.value);e.done()};exports["ObjectID should correctly create objects"]=function(e){try{var t=ObjectID.createFromHexString("000000000000000000000001"),n=ObjectID.createFromHexString("00000000000000000000001");e.ok(!1)}catch(r){e.ok(r!=null)}e.done()};exports["ObjectID should correctly retrieve timestamp"]=function(e){var t=new Date,n=new ObjectID;e.equal(Math.floor(t.getTime()/1e3),Math.floor(n.getTimestamp().getTime()/1e3));e.done()};exports["Should Correctly throw error on bsonparser errors"]=function(e){var t=new Buffer(3),n=new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey]);try{n.deserialize(t);e.ok(!1)}catch(r){}t=new Buffer(5);t[0]=255;t[1]=255;try{n.deserialize(t);e.ok(!1)}catch(r){}e.done()};exports["Should correctly calculate the size of a given javascript object"]=function(e){var t={a:1,func:function(){}},n=BSON.calculateObjectSize(t,!1);e.equal(12,n);n=BSON.calculateObjectSize(t,!0);e.equal(36,n);e.done()};exports["Should correctly calculate the size of a given javascript object using instance method"]=function(e){var t={a:1,func:function(){}},n=new BSON,r=n.calculateObjectSize(t,!1);e.equal(12,r);r=n.calculateObjectSize(t,!0);e.equal(36,r);e.done()};exports["Should correctly serializeWithBufferAndIndex a given javascript object"]=function(e){var t={a:1,func:function(){}},n=BSON.calculateObjectSize(t,!1),r=new Buffer(n),i=BSON.serializeWithBufferAndIndex(t,!0,r,0,!1);e.equal(12,n);e.equal(11,i);var n=BSON.calculateObjectSize(t,!0),r=new Buffer(n),i=BSON.serializeWithBufferAndIndex(t,!0,r,0,!0);e.equal(36,n);e.equal(35,i);e.done()};exports["Should correctly serializeWithBufferAndIndex a given javascript object using a BSON instance"]=function(e){var t={a:1,func:function(){}},n=new BSON,r=n.calculateObjectSize(t,!1),i=new Buffer(r),s=n.serializeWithBufferAndIndex(t,!0,i,0,!1);e.equal(12,r);e.equal(11,s);var r=n.calculateObjectSize(t,!0),i=new Buffer(r),s=n.serializeWithBufferAndIndex(t,!0,i,0,!0);e.equal(36,r);e.equal(35,s);e.done()};exports["Should correctly serialize a given javascript object"]=function(e){var t={a:1,func:function(){}},n=BSON.serialize(t,!0,!0,!1);e.equal(12,n.length);var n=BSON.serialize(t,!0,!0,!0);e.equal(36,n.length);e.done()};exports["Should correctly serialize a given javascript object using a bson instance"]=function(e){var t={a:1,func:function(){}},n=new BSON,r=n.serialize(t,!0,!0,!1);e.equal(12,r.length);var r=n.serialize(t,!0,!0,!0);e.equal(36,r.length);e.done()};exports["Should correctly deserialize a buffer using the BSON class level parser"]=function(e){var t={a:1,func:function(){console.log("hello world")}},n=BSON.serialize(t,!0,!0,!0);e.equal(65,n.length);var r=BSON.deserialize(n);e.equal("object",typeof r.func);e.equal(1,r.a);r=BSON.deserialize(n,{evalFunctions:!0,cacheFunctions:!0});e.equal("function",typeof r.func);e.equal(1,r.a);e.done()};exports["Should correctly deserialize a buffer using the BSON instance parser"]=function(e){var t={a:1,func:function(){console.log("hello world")}},n=new BSON,r=n.serialize(t,!0,!0,!0);e.equal(65,r.length);var i=n.deserialize(r);e.equal("object",typeof i.func);e.equal(1,i.a);i=n.deserialize(r,{evalFunctions:!0,cacheFunctions:!0});e.equal("function",typeof i.func);e.equal(1,i.a);e.done()};exports["Should correctly deserializeStream a buffer object"]=function(e){var t={a:1,func:function(){console.log("hello world")}},n=BSON.serialize(t,!0,!0,!0);e.equal(65,n.length);var r=new Array(1),i=BSON.deserializeStream(n,0,1,r,0);e.equal(65,i);e.equal(1,r.length);e.equal(1,r[0].a);e.equal("object",typeof r[0].func);var r=new Array(1),i=BSON.deserializeStream(n,0,1,r,0,{evalFunctions:!0,cacheFunctions:!0});e.equal(65,i);e.equal(1,r.length);e.equal(1,r[0].a);e.equal("function",typeof r[0].func);e.done()};exports["Should correctly deserializeStream a buffer object"]=function(e){var t={a:1,func:function(){console.log("hello world")}},n=new BSON,r=n.serialize(t,!0,!0,!0);e.equal(65,r.length);var i=new Array(1),s=n.deserializeStream(r,0,1,i,0);e.equal(65,s);e.equal(1,i.length);e.equal(1,i[0].a);e.equal("object",typeof i[0].func);var i=new Array(1),s=n.deserializeStream(r,0,1,i,0,{evalFunctions:!0,cacheFunctions:!0});e.equal(65,s);e.equal(1,i.length);e.equal(1,i[0].a);e.equal("function",typeof i[0].func);e.done()};exports["ObjectID should have a correct cached representation of the hexString"]=function(e){ObjectID.cacheHexString=!0;var t=new ObjectID,n=t.__id;e.equal(n,t.toHexString());t=new ObjectID(n);e.equal(n,t.toHexString());t=ObjectID.createFromHexString(n);e.equal(t.__id,t.toHexString());e.equal(n,t.toHexString());var r=t.generationTime;t=new ObjectID(r);n=t.__id;e.equal(n,t.toHexString());delete t.__id;t.generationTime=r;e.equal(n,t.toHexString());t=ObjectId.createFromTime(r);n=t.__id;e.equal(n,t.toHexString());ObjectId.cacheHexString=!1;e.done()};exports.noGlobalsLeaked=function(e){var t=gleak.detectNew();e.equal(0,t.length,"global var leak detected: "+t.join(", "));e.done()};