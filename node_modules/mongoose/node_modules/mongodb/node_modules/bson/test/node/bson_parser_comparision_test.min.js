var sys=require("util"),debug=require("util").debug,inspect=require("util").inspect,Buffer=require("buffer").Buffer,BSON=require("../../build/Release/bson").BSON,Buffer=require("buffer").Buffer,BSONJS=require("../../lib/bson/bson").BSON,BinaryParser=require("../../lib/bson/binary_parser").BinaryParser,Long=require("../../lib/bson/long").Long,ObjectID=require("../../lib/bson/bson").ObjectID,Binary=require("../../lib/bson/bson").Binary,Code=require("../../lib/bson/bson").Code,DBRef=require("../../lib/bson/bson").DBRef,Symbol=require("../../lib/bson/bson").Symbol,Double=require("../../lib/bson/bson").Double,MaxKey=require("../../lib/bson/bson").MaxKey,MinKey=require("../../lib/bson/bson").MinKey,Timestamp=require("../../lib/bson/bson").Timestamp,gleak=require("../../tools/gleak"),assert=require("assert"),bsonC=new BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey]),bsonJS=new BSONJS([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey]);exports.setUp=function(e){e()};exports.tearDown=function(e){e()};exports["Should Correctly Serialize and Deserialize simple edge value"]=function(e){var t={doc:9007199254740990},n=bsonC.serialize(t,!1,!0);assert.deepEqual(n,bsonJS.serialize(t,!1,!0));assert.deepEqual(bsonJS.deserialize(new Buffer(n,"binary")),bsonC.deserialize(n));var t={doc:-9007199254740990},n=bsonC.serialize(t,!1,!0);assert.deepEqual(n,bsonJS.serialize(t,!1,!0));assert.deepEqual(bsonJS.deserialize(new Buffer(n,"binary")),bsonC.deserialize(n));e.done()};exports["Should Correctly execute toJSON"]=function(e){var t=Long.fromNumber(10);assert.equal(10,t);var t=Long.fromNumber(0x8000000000000000);assert.equal(0x8000000000000000,t);var n={doc:"Serialize"},r=bsonC.serialize(n,!0,!1);assert.deepEqual(r,bsonJS.serialize(n,!1,!0));assert.deepEqual(bsonJS.deserialize(new Buffer(r,"binary")),bsonC.deserialize(r));e.done()};exports["Should Serialize and Deserialize nested document"]=function(e){var t={a:{b:{c:1}}},n=bsonC.serialize(t,!1,!0);assert.deepEqual(n,bsonJS.serialize(t,!1,!0));assert.deepEqual(bsonJS.deserialize(new Buffer(n,"binary")),bsonC.deserialize(n));e.done()};exports["Simple integer serialization/deserialization test, including testing boundary conditions"]=function(e){var t={doc:-1},n=bsonC.serialize(t,!1,!0);assert.deepEqual(n,bsonJS.serialize(t,!1,!0));assert.deepEqual(bsonJS.deserialize(new Buffer(n,"binary")),bsonC.deserialize(n));var t={doc:2147483648},n=bsonC.serialize(t,!1,!0);assert.deepEqual(bsonJS.deserialize(new Buffer(n,"binary")),bsonC.deserialize(n));var t={doc:-2147483648},n=bsonC.serialize(t,!1,!0);assert.deepEqual(n,bsonJS.serialize(t,!1,!0));assert.deepEqual(bsonJS.deserialize(new Buffer(n,"binary")),bsonC.deserialize(n));e.done()};exports["Simple serialization and deserialization test for a Long value"]=function(e){var t={doc:Long.fromNumber(0x8000000000000000)},n=bsonC.serialize(t,!1,!0);assert.deepEqual(n,bsonJS.serialize({doc:Long.fromNumber(0x8000000000000000)},!1,!0));assert.deepEqual(bsonJS.deserialize(new Buffer(n,"binary")),bsonC.deserialize(n));var t={doc:Long.fromNumber(-0x8000000000000000)},n=bsonC.serialize(t,!1,!0);assert.deepEqual(n,bsonJS.serialize({doc:Long.fromNumber(-0x8000000000000000)},!1,!0));assert.deepEqual(bsonJS.deserialize(new Buffer(n,"binary")),bsonC.deserialize(n));e.done()};exports["Simple serialization and deserialization for a Float value"]=function(e){var t={doc:2222.3333},n=bsonC.serialize(t,!1,!0);assert.deepEqual(n,bsonJS.serialize(t,!1,!0));assert.deepEqual(bsonJS.deserialize(new Buffer(n,"binary")),bsonC.deserialize(n));var t={doc:-2222.3333},n=bsonC.serialize(t,!1,!0);assert.deepEqual(n,bsonJS.serialize(t,!1,!0));assert.deepEqual(bsonJS.deserialize(new Buffer(n,"binary")),bsonC.deserialize(n));e.done()};exports["Simple serialization and deserialization for a null value"]=function(e){var t={doc:null},n=bsonC.serialize(t,!1,!0);assert.deepEqual(n,bsonJS.serialize(t,!1,!0));assert.deepEqual(bsonJS.deserialize(new Buffer(n,"binary")),bsonC.deserialize(n));e.done()};exports["Simple serialization and deserialization for a boolean value"]=function(e){var t={doc:!0},n=bsonC.serialize(t,!1,!0);assert.deepEqual(n,bsonJS.serialize(t,!1,!0));assert.deepEqual(bsonJS.deserialize(new Buffer(n,"binary")),bsonC.deserialize(n));e.done()};exports["Simple serialization and deserialization for a date value"]=function(e){var t=new Date,n={doc:t},r=bsonC.serialize(n,!1,!0);assert.deepEqual(r,bsonJS.serialize(n,!1,!0));assert.deepEqual(bsonJS.deserialize(new Buffer(r,"binary")),bsonC.deserialize(r));e.done()};exports["Simple serialization and deserialization for a boolean value"]=function(e){var t={doc:/abcd/mi},n=bsonC.serialize(t,!1,!0);assert.deepEqual(n,bsonJS.serialize(t,!1,!0));assert.equal(bsonJS.deserialize(new Buffer(n,"binary")).doc.toString(),bsonC.deserialize(n).doc.toString());var t={doc:/abcd/},n=bsonC.serialize(t,!1,!0);assert.deepEqual(n,bsonJS.serialize(t,!1,!0));assert.equal(bsonJS.deserialize(new Buffer(n,"binary")).doc.toString(),bsonC.deserialize(n).doc.toString());e.done()};exports["Simple serialization and deserialization for a objectId value"]=function(e){var t={doc:new ObjectID},n=bsonC.serialize(t,!1,!0),r={doc:ObjectID.createFromHexString(t.doc.toHexString())};assert.deepEqual(n,bsonJS.serialize(r,!1,!0));assert.deepEqual(bsonJS.deserialize(new Buffer(n,"binary")).doc.toString(),bsonC.deserialize(n).doc.toString());e.done()};exports["Simple serialization and deserialization for a Binary value"]=function(e){var t=new Binary,n="binstring";for(var r=0;r<n.length;r++)t.put(n.charAt(r));var i=bsonC.serialize({doc:t},!1,!0);assert.deepEqual(i,bsonJS.serialize({doc:t},!1,!0));assert.deepEqual(bsonJS.deserialize(new Buffer(i,"binary")).doc.value(),bsonC.deserialize(i).doc.value());e.done()};exports["Simple serialization and deserialization for a Code value"]=function(e){var t=new Code("this.a > i",{i:1}),n=bsonJS.serialize({doc:t},!1,!0),r=bsonC.serialize({doc:t},!1,!0);assert.deepEqual(r,n);assert.deepEqual(bsonJS.deserialize(new Buffer(n,"binary")).doc.scope,bsonC.deserialize(r).doc.scope);e.done()};exports["Simple serialization and deserialization for an Object"]=function(e){var t=bsonC.serialize({doc:{a:1,b:{c:2}}},!1,!0),n=bsonJS.serialize({doc:{a:1,b:{c:2}}},!1,!0);assert.deepEqual(t,n);assert.deepEqual(bsonJS.deserialize(new Buffer(n,"binary")).doc,bsonC.deserialize(t).doc);var t=bsonC.serialize({doc:[9,9,1,2,3,1,1,1,1,1,1,1]},!1,!0),n=bsonJS.serialize({doc:[9,9,1,2,3,1,1,1,1,1,1,1]},!1,!0);assert.deepEqual(t,n);assert.deepEqual(bsonJS.deserialize(new Buffer(n,"binary")).doc,bsonC.deserialize(t).doc);e.done()};exports["Simple serialization and deserialization for a DBRef"]=function(e){var t=new ObjectID,n=new ObjectID.createFromHexString(t.toHexString()),r=bsonJS.serialize({doc:new DBRef("namespace",n,"integration_tests_")},!1,!0),i=bsonC.serialize({doc:new DBRef("namespace",t,"integration_tests_")},!1,!0);assert.deepEqual(r,i);var s=bsonJS.deserialize(new Buffer(i,"binary")),o=bsonC.deserialize(r);assert.equal(s.doc.namespace,o.doc.namespace);assert.equal(s.doc.oid.toHexString(),o.doc.oid.toHexString());assert.equal(s.doc.db,o.doc.db);e.done()};exports["Should correctly deserialize bytes array"]=function(e){var t=[47,0,0,0,2,110,97,109,101,0,6,0,0,0,80,97,116,116,121,0,16,97,103,101,0,34,0,0,0,7,95,105,100,0,76,100,12,23,11,30,39,8,89,0,0,1,0],n="";for(var r=0;r<t.length;r++)n+=BinaryParser.fromByte(t[r]);var i=bsonC.deserialize(new Buffer(n,"binary"));assert.equal("Patty",i.name);assert.equal(34,i.age);assert.equal("4c640c170b1e270859000001",i._id.toHexString());e.done()};exports["Serialize utf8"]=function(e){var t={name:"本荘由利地域に洪水警報",name1:"öüóőúéáűíÖÜÓŐÚÉÁŰÍ",name2:"abcdedede"},n=bsonC.serialize(t,!1,!0),r=bsonJS.serialize(t,!1,!0);assert.deepEqual(n,r);var i=bsonC.deserialize(n);assert.equal(t.name,i.name);assert.equal(t.name1,i.name1);assert.equal(t.name2,i.name2);e.done()};exports["Serialize object with array"]=function(e){var t={b:[1,2,3]},n=bsonC.serialize(t,!1,!0),r=bsonJS.serialize(t,!1,!0);assert.deepEqual(n,r);var i=bsonC.deserialize(n);assert.deepEqual(t,i);e.done()};exports["Test equality of an object ID"]=function(e){var t=new ObjectID,n=new ObjectID;assert.ok(t.equals(t));assert.ok(!t.equals(n));e.done()};exports["Test same serialization for Object ID"]=function(e){var t=new ObjectID,n=ObjectID.createFromHexString(t.toString()),r=bsonJS.serialize({doc:t},!1,!0),i=bsonC.serialize({doc:n},!1,!0);assert.equal(i.length,r.length);assert.deepEqual(r,i);var s=bsonJS.deserialize(new Buffer(i,"binary")),o=bsonC.deserialize(r);assert.equal(s.doc.id,o.doc.id);e.done()};exports["Complex object serialization"]=function(e){var t={_id:new ObjectID,comments:[],title:"number 1"},n={_id:new ObjectID,comments:[],title:"number 2"},r={numbers:[],owners:[],comments:[t,n],_id:new ObjectID},i=bsonJS.serialize(r,!1,!0),t={_id:ObjectID.createFromHexString(t._id.toHexString()),comments:[],title:"number 1"},n={_id:ObjectID.createFromHexString(n._id.toHexString()),comments:[],title:"number 2"},r={numbers:[],owners:[],comments:[t,n],_id:ObjectID.createFromHexString(r._id.toHexString())},s=bsonC.serialize(r,!1,!0);for(var o=0;o<s.length;o++)assert.equal(s[o],i[o]);var u=bsonJS.deserialize(new Buffer(s)),a=bsonC.deserialize(new Buffer(s));assert.equal(r._id.id,u._id.id);assert.equal(r._id.id,a._id.id);assert.equal(u._id.id,a._id.id);var r={_id:"testid",key1:{code:"test1",time:{start:1309323402727,end:1309323402727},x:10,y:5},key2:{code:"test1",time:{start:1309323402727,end:1309323402727},x:10,y:5}},i=bsonJS.serialize(r,!1,!0),s=bsonC.serialize(r,!1,!0);e.done()};exports["Serialize function"]=function(e){var t={_id:"testid",key1:function(){}},n=bsonJS.serialize(t,!1,!0,!0),r=bsonC.serialize(t,!1,!0,!0),i=bsonJS.deserialize(new Buffer(r)),s=bsonC.deserialize(new Buffer(r));assert.equal(i.key1.code.toString(),s.key1.code.toString());e.done()};exports["Serialize document with special operators"]=function(e){var t={user_id:"4e9fc8d55883d90100000003",lc_status:{$ne:"deleted"},owner_rating:{$exists:!1}},n=bsonJS.serialize(t,!1,!0,!0),r=bsonC.serialize(t,!1,!0,!0);assert.equal(r.toString("base64"),n.toString("base64"));var i=bsonJS.deserialize(r),s=bsonC.deserialize(n);assert.deepEqual(i,s);e.done()};exports["Create ObjectID from hex string"]=function(e){var t=(new ObjectID).toString(),n={_id:ObjectID.createFromHexString(t),"funds.remaining":{$gte:1.222},"transactions.id":{$ne:ObjectID.createFromHexString(t)}},r={_id:ObjectID.createFromHexString(t),"funds.remaining":{$gte:1.222},"transactions.id":{$ne:ObjectID.createFromHexString(t)}},i=bsonJS.serialize(n,!1,!0,!0),s=bsonC.serialize(r,!1,!0,!0);assert.equal(s.toString("base64"),i.toString("base64"));e.done()};exports["Serialize big complex document"]=function(e){var t={DateTime:"Tue Nov 40 2011 17:27:55 GMT+0000 (WEST)",isActive:!0,Media:{URL:"http://videos.sapo.pt/Tc85NsjaKjj8o5aV7Ubb"},Title:"Lisboa fecha a ganhar 0.19%",SetPosition:60,Type:"videos",Thumbnail:[{URL:"http://rd3.videos.sapo.pt/Tc85NsjaKjj8o5aV7Ubb/pic/320x240",Dimensions:{Height:240,Width:320}}],Source:{URL:"http://videos.sapo.pt",SetID:"1288",SourceID:"http://videos.sapo.pt/tvnet/rss2",SetURL:"http://noticias.sapo.pt/videos/tv-net_1288/",ItemID:"Tc85NsjaKjj8o5aV7Ubb",Name:"SAPO VÃ­deos"},Category:"Tec_ciencia",Description:"Lisboa fecha a ganhar 0.19%",GalleryID:new ObjectID("4eea2a634ce8573200000000"),InternalRefs:{RegisterDate:"Thu Dec 15 2011 17:12:51 GMT+0000 (WEST)",ChangeDate:"Thu Dec 15 2011 17:12:51 GMT+0000 (WEST)",Hash:332279244514},_id:new ObjectID("4eea2a96e52778160000003a")},n=bsonJS.serialize(t,!1,!0,!0),r=bsonC.serialize(t,!1,!0,!0);assert.equal(r.toString("base64"),n.toString("base64"));e.done()};exports["Should error out due to 24 characters but not valid hexstring for ObjectID"]=function(e){try{var t=new ObjectID("tttttttttttttttttttttttt");e.ok(!1)}catch(n){}e.done()};exports.noGlobalsLeaked=function(e){var t=gleak.detectNew();e.equal(0,t.length,"global var leak detected: "+t.join(", "));e.done()};