var mongodb=process.env["TEST_NATIVE"]!=null?require("../../lib/bson").native():require("../../lib/bson").pure(),testCase=require("nodeunit").testCase,mongoO=require("../../lib/bson").pure(),Buffer=require("buffer").Buffer,gleak=require("../../tools/gleak"),fs=require("fs"),BSON=mongoO.BSON,Code=mongoO.Code,Binary=mongoO.Binary,Timestamp=mongoO.Timestamp,Long=mongoO.Long,MongoReply=mongoO.MongoReply,ObjectID=mongoO.ObjectID,Symbol=mongoO.Symbol,DBRef=mongoO.DBRef,Double=mongoO.Double,MinKey=mongoO.MinKey,MaxKey=mongoO.MaxKey,BinaryParser=mongoO.BinaryParser,BSONSE=mongodb,BSONDE=mongodb;BSONDE.BSON_BINARY_SUBTYPE_DEFAULT=0;BSONDE.BSON_BINARY_SUBTYPE_FUNCTION=1;BSONDE.BSON_BINARY_SUBTYPE_BYTE_ARRAY=2;BSONDE.BSON_BINARY_SUBTYPE_UUID=3;BSONDE.BSON_BINARY_SUBTYPE_MD5=4;BSONDE.BSON_BINARY_SUBTYPE_USER_DEFINED=128;BSONSE.BSON_BINARY_SUBTYPE_DEFAULT=0;BSONSE.BSON_BINARY_SUBTYPE_FUNCTION=1;BSONSE.BSON_BINARY_SUBTYPE_BYTE_ARRAY=2;BSONSE.BSON_BINARY_SUBTYPE_UUID=3;BSONSE.BSON_BINARY_SUBTYPE_MD5=4;BSONSE.BSON_BINARY_SUBTYPE_USER_DEFINED=128;var hexStringToBinary=function(e){var t=e.length/2,n="";for(var r=0;r<t;r++)n+=String.fromCharCode(parseInt(e[r*2]+e[r*2+1],16));return n},assertBuffersEqual=function(e,t,n){t.length!=n.length&&e.fail("Buffers do not have the same length",t,n);for(var r=0;r<t.length;r++)e.equal(t[r],n[r])};exports.setUp=function(e){e()};exports.tearDown=function(e){e()};exports["Should correctly handle toBson function for an object"]=function(e){var t={hello:new ObjectID,a:1};t.toBSON=function(){return{b:1}};var n=(new BSONSE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).serialize(t,!1,!0),r=(new BSONDE.BSON([Long,ObjectID,Binary,Code,DBRef,Symbol,Double,Timestamp,MaxKey,MinKey])).deserialize(n);e.deepEqual({b:1},r);e.done()};exports.noGlobalsLeaked=function(e){var t=gleak.detectNew();e.equal(0,t.length,"global var leak detected: "+t.join(", "));e.done()};