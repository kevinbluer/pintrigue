/**
 * A class representation of the Read Preference.
 *
 * Read Preferences
 *  - **ReadPreference.PRIMARY**, Read from primary only. All operations produce an error (throw an exception where applicable) if primary is unavailable. Cannot be combined with tags (This is the default.).
 *  - **ReadPreference.PRIMARY_PREFERRED**, Read from primary if available, otherwise a secondary.
 *  - **ReadPreference.SECONDARY**, Read from secondary if available, otherwise error.
 *  - **ReadPreference.SECONDARY_PREFERRED**, Read from a secondary if available, otherwise read from the primary.
 *  - **ReadPreference.NEAREST**, All modes read from among the nearest candidates, but unlike other modes, NEAREST will include both the primary and all secondaries in the random selection.
 *
 * @class Represents a Read Preference.
 * @param {String} the read preference type
 * @param {Object} tags
 * @return {ReadPreference}
 */var ReadPreference=function(e,t){if(!(this instanceof ReadPreference))return new ReadPreference(e,t);this._type="ReadPreference";this.mode=e;this.tags=t};ReadPreference.isValid=function(e){return e==ReadPreference.PRIMARY||e==ReadPreference.PRIMARY_PREFERRED||e==ReadPreference.SECONDARY||e==ReadPreference.SECONDARY_PREFERRED||e==ReadPreference.NEAREST};ReadPreference.prototype.isValid=function(e){var t=typeof e=="string"?e:this.mode;return ReadPreference.isValid(t)};ReadPreference.prototype.toObject=function(){var e={mode:this.mode};this.tags!=null&&(e.tags=this.tags);return e};ReadPreference.PRIMARY="primary";ReadPreference.PRIMARY_PREFERRED="primaryPreferred";ReadPreference.SECONDARY="secondary";ReadPreference.SECONDARY_PREFERRED="secondaryPreferred";ReadPreference.NEAREST="nearest";exports.ReadPreference=ReadPreference;