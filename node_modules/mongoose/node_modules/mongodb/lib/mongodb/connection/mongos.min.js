var ReadPreference=require("./read_preference").ReadPreference,Mongos=function e(t,n){if(!(this instanceof e))return new e(t,n);if(t==null||!Array.isArray(t)||t.length==0)throw new Error("At least one mongos proxy must be in the array");this.options=n==null?{}:n;this.socketOptions=this.options.socketOptions!=null?this.options.socketOptions:{};this.haEnabled=this.options["ha"]==null?!0:this.options.ha;this.mongosStatusCheckInterval=this.options["haInterval"]==null?2e3:this.options.haInterval;this.servers=t;this.downServers=[];this.lowestPingTimeServer=null;this.lowestPingTime=0;for(var r=0;r<this.servers.length;r++){var i=this.servers[r],s={host:i.host,port:i.port};if(this.socketOptions!=null){var o=Object.keys(this.socketOptions);for(var u=0;u<o.length;u++)s[o[r]]=this.socketOptions[o[r]]}i.socketOptions=s}};Mongos.prototype.isMongos=function(){return!0};Mongos.prototype.connect=function(e,t,n){"function"==typeof t&&(n=t,t={});t==null&&(t={});"function"!=typeof n&&(n=null);var r=this;this.db=e;this._serverState="connecting";this._numberOfServersLeftToInitialize=this.servers.length;this._currentMongos=this.servers[0];var i=function(e){return function(e,t){r._numberOfServersLeftToInitialize=r._numberOfServersLeftToInitialize-1;if(r._numberOfServersLeftToInitialize==0){r.haEnabled&&(r._replicasetTimeoutId=setTimeout(r.mongosCheckFunction,r.mongosStatusCheckInterval));r._serverState="connected";r.db.emit("open",null,r.db);n(null,r.db)}}},s=function(e){return function(t,n){var i=r._currentMongos.host+":"+r._currentMongos.port,s=this.host+":"+this.port;if(i==s){r.servers.indexOf(e)!=-1&&r.servers.splice(r.servers.indexOf(e),1);for(var o=0;o<r.servers.length;o++){var u=r.servers[o],s=u.host+":"+u.port;if(i!=s&&u.isConnected()){r._currentMongos=u;break}}}r.downServers.indexOf(e)==-1&&r.downServers.push(e)}};this.mongosCheckFunction=function(){if(r.downServers.length>0){var e=r.downServers.length;for(var t=0;t<r.downServers.length;t++){var n=r.downServers.pop();n.connect(r.db,{returnIsMasterResults:!0},function(t){return function(n,i){e-=1;if(n!=null)r.downServers.push(t);else{t.on("close",s(t));t.on("error",s(t));r.servers.push(t)}e<=0&&(r._replicasetTimeoutId=setTimeout(r.mongosCheckFunction,r.mongosStatusCheckInterval))}}(n))}}else if(r.servers.length>0){var e=r.servers.length,i=(new Date).getTime();for(var t=0;t<r.servers.length;t++){var o=function(t){var n=t.checkoutReader();r.db.command({ping:1},{connection:n},function(n,s){var o=(new Date).getTime()-i;if(r.lowestPingTimeServer==null){r.lowestPingTimeServer=t;r.lowestPingTime=o;r._currentMongos=t}else if(r.lowestPingTime>o&&(t.host!=r.lowestPingTimeServer.host||t.port!=r.lowestPingTimeServer.port)){r.lowestPingTimeServer=t;r.lowestPingTime=o;r._currentMongos=t}e-=1;e==0&&(r._replicasetTimeoutId=setTimeout(r.mongosCheckFunction,r.mongosStatusCheckInterval))})};o(r.servers[t])}}else r._replicasetTimeoutId=setTimeout(r.mongosCheckFunction,r.mongosStatusCheckInterval)};for(var o=0;o<this.servers.length;o++){var u=this.servers[o];u.mongosInstance=this;u.on("close",s(u));u.on("error",s(u));u.connect(r.db,{returnIsMasterResults:!0},i(u))}};Mongos.prototype.allServerInstances=function(){return this.servers};Mongos.prototype.allRawConnections=function(){var e=[];for(var t=0;t<this.servers.length;t++)e=e.concat(this.servers[t].allRawConnections);return e};Mongos.prototype.isConnected=function(){return this._serverState=="connected"};Mongos.prototype.checkoutWriter=function(){return this._currentMongos==null&&this.servers.length>0?this.servers[0].checkoutWriter():this._currentMongos.checkoutWriter()};Mongos.prototype.checkoutReader=function(e){if(typeof e=="object"&&e["_type"]=="ReadPreference"){if(!e.isValid())throw new Error("Illegal readPreference mode specified, "+e.mode)}else if(!ReadPreference.isValid(e))throw new Error("Illegal readPreference mode specified, "+e);return this._currentMongos==null&&this.servers.length>0?this.servers[0].checkoutReader():this._currentMongos.checkoutReader()};Mongos.prototype.close=function(e){var t=this;this._serverState="disconnected";var n=t.servers.length;t._replicasetTimeoutId!=null&&clearTimeout(t._replicasetTimeoutId);for(var r=0;r<t.servers.length;r++)t.servers[r].close(function(t,r){n-=1;n==0&&typeof e=="function"&&e(null)})};Mongos.prototype._isUsed=function(){return this._used};exports.Mongos=Mongos;