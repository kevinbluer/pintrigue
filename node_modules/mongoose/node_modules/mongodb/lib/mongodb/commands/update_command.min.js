var BaseCommand=require("./base_command").BaseCommand,inherits=require("util").inherits,UpdateCommand=exports.UpdateCommand=function(e,t,n,r,i){BaseCommand.call(this);var s=n;if(Buffer.isBuffer(s)){var o=s[0]|s[1]<<8|s[2]<<16|s[3]<<24;if(o!=s.length){var u=new Error("update spec raw message size does not match message header size ["+s.length+"] != ["+o+"]");u.name="MongoError";throw u}}var s=r;if(Buffer.isBuffer(s)){var o=s[0]|s[1]<<8|s[2]<<16|s[3]<<24;if(o!=s.length){var u=new Error("update document raw message size does not match message header size ["+s.length+"] != ["+o+"]");u.name="MongoError";throw u}}this.collectionName=t;this.spec=n;this.document=r;this.db=e;this.serializeFunctions=!1;var a=0,f=0;a=i!=null&&i["upsert"]!=null?i["upsert"]==1?1:0:a;f=i!=null&&i["multi"]!=null?i["multi"]==1?1:0:f;this.flags=parseInt(f.toString()+a.toString(),2);i["serializeFunctions"]!=null&&i.serializeFunctions&&(this.serializeFunctions=!0)};inherits(UpdateCommand,BaseCommand);UpdateCommand.OP_UPDATE=2001;UpdateCommand.prototype.toBinary=function(){var e=4+Buffer.byteLength(this.collectionName)+1+4+this.db.bson.calculateObjectSize(this.spec,!1,!0)+this.db.bson.calculateObjectSize(this.document,this.serializeFunctions,!0)+16,t=0,n=new Buffer(e);n[t+3]=e>>24&255;n[t+2]=e>>16&255;n[t+1]=e>>8&255;n[t]=e&255;t+=4;n[t+3]=this.requestId>>24&255;n[t+2]=this.requestId>>16&255;n[t+1]=this.requestId>>8&255;n[t]=this.requestId&255;t+=4;n[t++]=0;n[t++]=0;n[t++]=0;n[t++]=0;n[t+3]=UpdateCommand.OP_UPDATE>>24&255;n[t+2]=UpdateCommand.OP_UPDATE>>16&255;n[t+1]=UpdateCommand.OP_UPDATE>>8&255;n[t]=UpdateCommand.OP_UPDATE&255;t+=4;n[t++]=0;n[t++]=0;n[t++]=0;n[t++]=0;t=t+n.write(this.collectionName,t,"utf8")+1;n[t-1]=0;n[t+3]=this.flags>>24&255;n[t+2]=this.flags>>16&255;n[t+1]=this.flags>>8&255;n[t]=this.flags&255;t+=4;var r=0,i=this.spec;if(Buffer.isBuffer(i)){var s=i[0]|i[1]<<8|i[2]<<16|i[3]<<24;if(s!=i.length)throw new Error("raw message size does not match message header size ["+i.length+"] != ["+s+"]");r=i.length;i.copy(n,t)}else r=this.db.bson.serializeWithBufferAndIndex(i,this.checkKeys,n,t,!1)-t+1;n[t+3]=r>>24&255;n[t+2]=r>>16&255;n[t+1]=r>>8&255;n[t]=r&255;t+=r;n[t-1]=0;var r=0,i=this.document;if(Buffer.isBuffer(i)){var s=i[0]|i[1]<<8|i[2]<<16|i[3]<<24;if(s!=i.length)throw new Error("raw message size does not match message header size ["+i.length+"] != ["+s+"]");r=i.length;i.copy(n,t)}else r=this.db.bson.serializeWithBufferAndIndex(i,this.checkKeys,n,t,this.serializeFunctions)-t+1;n[t+3]=r>>24&255;n[t+2]=r>>16&255;n[t+1]=r>>8&255;n[t]=r&255;t+=r;n[t-1]=0;return n};UpdateCommand.DB_UPSERT=0;UpdateCommand.DB_MULTI_UPDATE=1;