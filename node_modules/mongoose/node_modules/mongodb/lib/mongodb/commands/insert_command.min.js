var BaseCommand=require("./base_command").BaseCommand,inherits=require("util").inherits,InsertCommand=exports.InsertCommand=function(e,t,n,r){BaseCommand.call(this);this.collectionName=t;this.documents=[];this.checkKeys=n==null?!0:n;this.db=e;this.flags=0;this.serializeFunctions=!1;r=r==null?{}:r;r["keepGoing"]!=null&&r.keepGoing&&(this.flags=1);r["continueOnError"]!=null&&r.continueOnError&&(this.flags=1);r["serializeFunctions"]!=null&&r.serializeFunctions&&(this.serializeFunctions=!0)};inherits(InsertCommand,BaseCommand);InsertCommand.OP_INSERT=2002;InsertCommand.prototype.add=function(e){if(Buffer.isBuffer(e)){var t=e[0]|e[1]<<8|e[2]<<16|e[3]<<24;if(t!=e.length){var n=new Error("insert raw message size does not match message header size ["+e.length+"] != ["+t+"]");n.name="MongoError";throw n}}this.documents.push(e);return this};InsertCommand.prototype.toBinary=function(){var e=4+Buffer.byteLength(this.collectionName)+1+16;for(var t=0;t<this.documents.length;t++)Buffer.isBuffer(this.documents[t])?e+=this.documents[t].length:e+=this.db.bson.calculateObjectSize(this.documents[t],this.serializeFunctions,!0);var n=0,r=new Buffer(e);r[n+3]=e>>24&255;r[n+2]=e>>16&255;r[n+1]=e>>8&255;r[n]=e&255;n+=4;r[n+3]=this.requestId>>24&255;r[n+2]=this.requestId>>16&255;r[n+1]=this.requestId>>8&255;r[n]=this.requestId&255;n+=4;r[n++]=0;r[n++]=0;r[n++]=0;r[n++]=0;r[n+3]=InsertCommand.OP_INSERT>>24&255;r[n+2]=InsertCommand.OP_INSERT>>16&255;r[n+1]=InsertCommand.OP_INSERT>>8&255;r[n]=InsertCommand.OP_INSERT&255;n+=4;r[n+3]=this.flags>>24&255;r[n+2]=this.flags>>16&255;r[n+1]=this.flags>>8&255;r[n]=this.flags&255;n+=4;n=n+r.write(this.collectionName,n,"utf8")+1;r[n-1]=0;for(var t=0;t<this.documents.length;t++){var i=0,s=this.documents[t];if(Buffer.isBuffer(s)){i=s.length;s.copy(r,n)}else i=this.db.bson.serializeWithBufferAndIndex(s,this.checkKeys,r,n,this.serializeFunctions)-n+1;r[n+3]=i>>24&255;r[n+2]=i>>16&255;r[n+1]=i>>8&255;r[n]=i&255;n+=i;r[n-1]=0}return r};